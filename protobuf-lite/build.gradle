plugins {
    id "java"
    id "maven-publish"

    id "com.google.protobuf"
    id "me.champeau.gradle.japicmp"
    id "ru.vyarus.animalsniffer"
}

description = 'gRPC: Protobuf Lite'

dependencies {
    compile project(':grpc-api'),
            libraries.protobuf_lite
    compile (libraries.guava) {
        // prefer our own versions from libraries instead of Guava's dependency
        exclude group: 'com.google.errorprone', module: 'error_prone_annotations'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
        exclude group: 'org.codehaus.mojo', module: 'animal-sniffer-annotations'
    }

    testCompile project(':grpc-core')
    testProtobuf libraries.protobuf

    signature "org.codehaus.mojo.signature:java17:1.0@signature"
    signature "net.sf.androidscents.signature:android-api-level-14:4.0_r4@signature"
}

compileTestJava {
    // Protobuf-generated Lite produces quite a few warnings.
    options.compilerArgs += [
        "-Xlint:-rawtypes",
        "-Xlint:-unchecked",
        "-Xlint:-fallthrough"
    ]
    options.errorprone.excludedPaths = ".*/build/generated/source/proto/.*"
}

protobuf {
    protoc {
        if (project.hasProperty('protoc')) {
            path = project.protoc
        } else {
            artifact = "com.google.protobuf:protoc:${protocVersion}"
        }
    }
    plugins {
        javalite {
            if (project.hasProperty('protoc-gen-javalite')) {
                path = project['protoc-gen-javalite']
            } else {
                artifact = libraries.protoc_lite
            }
        }
    }
    generateProtoTasks {
        ofSourceSet('test')*.each { task ->
            task.builtins { remove java }
            task.plugins { javalite {} }
        }
    }
}
