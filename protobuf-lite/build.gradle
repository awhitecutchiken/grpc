buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath libraries.protobuf_plugin
    }
}

apply plugin: 'com.google.protobuf'

description = 'gRPC: Protobuf Lite'

dependencies {
    compile project(':grpc-core'),
            libraries.protobuf_lite,
            libraries.guava

    testProtobuf libraries.protobuf

    signature "org.codehaus.mojo.signature:java16:1.1@signature"
}

protobuf {
  protoc {
    if (project.hasProperty('protoc')) {
      path = project.protoc
    } else {
      artifact = "com.google.protobuf:protoc:${protocVersion}"
    }
  }
  plugins {
    javalite {
      if (project.hasProperty('protoc-gen-javalite')) {
        path = project['protoc-gen-javalite']
      } else {
        artifact = libraries.protoc_lite
      }
    }
  }
  sourceSets {
    javaProtoTest {}
  }

  generateProtoTasks {
    ofSourceSet('test')*.each { task ->
      task.builtins {
        remove java
      }
      task.plugins {
        javalite {}
      }
    }

    compileJavaProtoTestJava.dependsOn generateTestProto

    generateTestProto.doLast {
      sourceSets {
        // add generated code to javaProtoTest source set
        javaProtoTest {
          java {
            srcDir "${generatedFilesBaseDir}/test/javalite"
          }
        }
      }
    }
  }

  compileTestJava.dependsOn task(deleteGeneratedCode) {
    delete fileTree(dir: "${projectDir}/build")
  }

  compileTestJava.doFirst {
    // exclude generated code from test sourceSet
    source -= fileTree(dir: "${generatedFilesBaseDir}/test/javalite")
  }
}

compileTestJava.dependsOn  compileJavaProtoTestJava

dependencies {
    javaProtoTestCompile configurations.testCompile
    testCompile files("${projectDir}/build/classes/java/javaProtoTest")
}

compileJavaProtoTestJava {
    // Protobuf-generated Lite produces quite a few warnings.
    options.compilerArgs += ["-Xlint:-rawtypes", "-Xlint:-unchecked", "-Xlint:-fallthrough", "-Xlint:-options"]
}
