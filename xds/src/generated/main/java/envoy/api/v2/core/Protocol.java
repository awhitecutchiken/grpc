// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/api/v2/core/protocol.proto

package envoy.api.v2.core;

public final class Protocol {
  private Protocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TcpProtocolOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:envoy.api.v2.core.TcpProtocolOptions)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * [#not-implemented-hide:]
   * </pre>
   *
   * Protobuf type {@code envoy.api.v2.core.TcpProtocolOptions}
   */
  public  static final class TcpProtocolOptions extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:envoy.api.v2.core.TcpProtocolOptions)
      TcpProtocolOptionsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TcpProtocolOptions.newBuilder() to construct.
    private TcpProtocolOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TcpProtocolOptions() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TcpProtocolOptions(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return envoy.api.v2.core.Protocol.internal_static_envoy_api_v2_core_TcpProtocolOptions_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return envoy.api.v2.core.Protocol.internal_static_envoy_api_v2_core_TcpProtocolOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              envoy.api.v2.core.Protocol.TcpProtocolOptions.class, envoy.api.v2.core.Protocol.TcpProtocolOptions.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof envoy.api.v2.core.Protocol.TcpProtocolOptions)) {
        return super.equals(obj);
      }
      envoy.api.v2.core.Protocol.TcpProtocolOptions other = (envoy.api.v2.core.Protocol.TcpProtocolOptions) obj;

      boolean result = true;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static envoy.api.v2.core.Protocol.TcpProtocolOptions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static envoy.api.v2.core.Protocol.TcpProtocolOptions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static envoy.api.v2.core.Protocol.TcpProtocolOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static envoy.api.v2.core.Protocol.TcpProtocolOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static envoy.api.v2.core.Protocol.TcpProtocolOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static envoy.api.v2.core.Protocol.TcpProtocolOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static envoy.api.v2.core.Protocol.TcpProtocolOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static envoy.api.v2.core.Protocol.TcpProtocolOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static envoy.api.v2.core.Protocol.TcpProtocolOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static envoy.api.v2.core.Protocol.TcpProtocolOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static envoy.api.v2.core.Protocol.TcpProtocolOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static envoy.api.v2.core.Protocol.TcpProtocolOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(envoy.api.v2.core.Protocol.TcpProtocolOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * </pre>
     *
     * Protobuf type {@code envoy.api.v2.core.TcpProtocolOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:envoy.api.v2.core.TcpProtocolOptions)
        envoy.api.v2.core.Protocol.TcpProtocolOptionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return envoy.api.v2.core.Protocol.internal_static_envoy_api_v2_core_TcpProtocolOptions_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return envoy.api.v2.core.Protocol.internal_static_envoy_api_v2_core_TcpProtocolOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                envoy.api.v2.core.Protocol.TcpProtocolOptions.class, envoy.api.v2.core.Protocol.TcpProtocolOptions.Builder.class);
      }

      // Construct using envoy.api.v2.core.Protocol.TcpProtocolOptions.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return envoy.api.v2.core.Protocol.internal_static_envoy_api_v2_core_TcpProtocolOptions_descriptor;
      }

      public envoy.api.v2.core.Protocol.TcpProtocolOptions getDefaultInstanceForType() {
        return envoy.api.v2.core.Protocol.TcpProtocolOptions.getDefaultInstance();
      }

      public envoy.api.v2.core.Protocol.TcpProtocolOptions build() {
        envoy.api.v2.core.Protocol.TcpProtocolOptions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public envoy.api.v2.core.Protocol.TcpProtocolOptions buildPartial() {
        envoy.api.v2.core.Protocol.TcpProtocolOptions result = new envoy.api.v2.core.Protocol.TcpProtocolOptions(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof envoy.api.v2.core.Protocol.TcpProtocolOptions) {
          return mergeFrom((envoy.api.v2.core.Protocol.TcpProtocolOptions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(envoy.api.v2.core.Protocol.TcpProtocolOptions other) {
        if (other == envoy.api.v2.core.Protocol.TcpProtocolOptions.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        envoy.api.v2.core.Protocol.TcpProtocolOptions parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (envoy.api.v2.core.Protocol.TcpProtocolOptions) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:envoy.api.v2.core.TcpProtocolOptions)
    }

    // @@protoc_insertion_point(class_scope:envoy.api.v2.core.TcpProtocolOptions)
    private static final envoy.api.v2.core.Protocol.TcpProtocolOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new envoy.api.v2.core.Protocol.TcpProtocolOptions();
    }

    public static envoy.api.v2.core.Protocol.TcpProtocolOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TcpProtocolOptions>
        PARSER = new com.google.protobuf.AbstractParser<TcpProtocolOptions>() {
      public TcpProtocolOptions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TcpProtocolOptions(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TcpProtocolOptions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TcpProtocolOptions> getParserForType() {
      return PARSER;
    }

    public envoy.api.v2.core.Protocol.TcpProtocolOptions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HttpProtocolOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:envoy.api.v2.core.HttpProtocolOptions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The idle timeout for upstream connection pool connections. The idle timeout is defined as the
     * period in which there are no active requests. If not set, there is no idle timeout. When the
     * idle timeout is reached the connection will be closed. Note that request based timeouts mean
     * that HTTP/2 PINGs will not keep the connection alive.
     * </pre>
     *
     * <code>.google.protobuf.Duration idle_timeout = 1;</code>
     */
    boolean hasIdleTimeout();
    /**
     * <pre>
     * The idle timeout for upstream connection pool connections. The idle timeout is defined as the
     * period in which there are no active requests. If not set, there is no idle timeout. When the
     * idle timeout is reached the connection will be closed. Note that request based timeouts mean
     * that HTTP/2 PINGs will not keep the connection alive.
     * </pre>
     *
     * <code>.google.protobuf.Duration idle_timeout = 1;</code>
     */
    com.google.protobuf.Duration getIdleTimeout();
    /**
     * <pre>
     * The idle timeout for upstream connection pool connections. The idle timeout is defined as the
     * period in which there are no active requests. If not set, there is no idle timeout. When the
     * idle timeout is reached the connection will be closed. Note that request based timeouts mean
     * that HTTP/2 PINGs will not keep the connection alive.
     * </pre>
     *
     * <code>.google.protobuf.Duration idle_timeout = 1;</code>
     */
    com.google.protobuf.DurationOrBuilder getIdleTimeoutOrBuilder();
  }
  /**
   * Protobuf type {@code envoy.api.v2.core.HttpProtocolOptions}
   */
  public  static final class HttpProtocolOptions extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:envoy.api.v2.core.HttpProtocolOptions)
      HttpProtocolOptionsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use HttpProtocolOptions.newBuilder() to construct.
    private HttpProtocolOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HttpProtocolOptions() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private HttpProtocolOptions(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.Duration.Builder subBuilder = null;
              if (idleTimeout_ != null) {
                subBuilder = idleTimeout_.toBuilder();
              }
              idleTimeout_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(idleTimeout_);
                idleTimeout_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return envoy.api.v2.core.Protocol.internal_static_envoy_api_v2_core_HttpProtocolOptions_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return envoy.api.v2.core.Protocol.internal_static_envoy_api_v2_core_HttpProtocolOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              envoy.api.v2.core.Protocol.HttpProtocolOptions.class, envoy.api.v2.core.Protocol.HttpProtocolOptions.Builder.class);
    }

    public static final int IDLE_TIMEOUT_FIELD_NUMBER = 1;
    private com.google.protobuf.Duration idleTimeout_;
    /**
     * <pre>
     * The idle timeout for upstream connection pool connections. The idle timeout is defined as the
     * period in which there are no active requests. If not set, there is no idle timeout. When the
     * idle timeout is reached the connection will be closed. Note that request based timeouts mean
     * that HTTP/2 PINGs will not keep the connection alive.
     * </pre>
     *
     * <code>.google.protobuf.Duration idle_timeout = 1;</code>
     */
    public boolean hasIdleTimeout() {
      return idleTimeout_ != null;
    }
    /**
     * <pre>
     * The idle timeout for upstream connection pool connections. The idle timeout is defined as the
     * period in which there are no active requests. If not set, there is no idle timeout. When the
     * idle timeout is reached the connection will be closed. Note that request based timeouts mean
     * that HTTP/2 PINGs will not keep the connection alive.
     * </pre>
     *
     * <code>.google.protobuf.Duration idle_timeout = 1;</code>
     */
    public com.google.protobuf.Duration getIdleTimeout() {
      return idleTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : idleTimeout_;
    }
    /**
     * <pre>
     * The idle timeout for upstream connection pool connections. The idle timeout is defined as the
     * period in which there are no active requests. If not set, there is no idle timeout. When the
     * idle timeout is reached the connection will be closed. Note that request based timeouts mean
     * that HTTP/2 PINGs will not keep the connection alive.
     * </pre>
     *
     * <code>.google.protobuf.Duration idle_timeout = 1;</code>
     */
    public com.google.protobuf.DurationOrBuilder getIdleTimeoutOrBuilder() {
      return getIdleTimeout();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (idleTimeout_ != null) {
        output.writeMessage(1, getIdleTimeout());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (idleTimeout_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getIdleTimeout());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof envoy.api.v2.core.Protocol.HttpProtocolOptions)) {
        return super.equals(obj);
      }
      envoy.api.v2.core.Protocol.HttpProtocolOptions other = (envoy.api.v2.core.Protocol.HttpProtocolOptions) obj;

      boolean result = true;
      result = result && (hasIdleTimeout() == other.hasIdleTimeout());
      if (hasIdleTimeout()) {
        result = result && getIdleTimeout()
            .equals(other.getIdleTimeout());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasIdleTimeout()) {
        hash = (37 * hash) + IDLE_TIMEOUT_FIELD_NUMBER;
        hash = (53 * hash) + getIdleTimeout().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static envoy.api.v2.core.Protocol.HttpProtocolOptions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static envoy.api.v2.core.Protocol.HttpProtocolOptions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static envoy.api.v2.core.Protocol.HttpProtocolOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static envoy.api.v2.core.Protocol.HttpProtocolOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static envoy.api.v2.core.Protocol.HttpProtocolOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static envoy.api.v2.core.Protocol.HttpProtocolOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static envoy.api.v2.core.Protocol.HttpProtocolOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static envoy.api.v2.core.Protocol.HttpProtocolOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static envoy.api.v2.core.Protocol.HttpProtocolOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static envoy.api.v2.core.Protocol.HttpProtocolOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static envoy.api.v2.core.Protocol.HttpProtocolOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static envoy.api.v2.core.Protocol.HttpProtocolOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(envoy.api.v2.core.Protocol.HttpProtocolOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code envoy.api.v2.core.HttpProtocolOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:envoy.api.v2.core.HttpProtocolOptions)
        envoy.api.v2.core.Protocol.HttpProtocolOptionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return envoy.api.v2.core.Protocol.internal_static_envoy_api_v2_core_HttpProtocolOptions_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return envoy.api.v2.core.Protocol.internal_static_envoy_api_v2_core_HttpProtocolOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                envoy.api.v2.core.Protocol.HttpProtocolOptions.class, envoy.api.v2.core.Protocol.HttpProtocolOptions.Builder.class);
      }

      // Construct using envoy.api.v2.core.Protocol.HttpProtocolOptions.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (idleTimeoutBuilder_ == null) {
          idleTimeout_ = null;
        } else {
          idleTimeout_ = null;
          idleTimeoutBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return envoy.api.v2.core.Protocol.internal_static_envoy_api_v2_core_HttpProtocolOptions_descriptor;
      }

      public envoy.api.v2.core.Protocol.HttpProtocolOptions getDefaultInstanceForType() {
        return envoy.api.v2.core.Protocol.HttpProtocolOptions.getDefaultInstance();
      }

      public envoy.api.v2.core.Protocol.HttpProtocolOptions build() {
        envoy.api.v2.core.Protocol.HttpProtocolOptions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public envoy.api.v2.core.Protocol.HttpProtocolOptions buildPartial() {
        envoy.api.v2.core.Protocol.HttpProtocolOptions result = new envoy.api.v2.core.Protocol.HttpProtocolOptions(this);
        if (idleTimeoutBuilder_ == null) {
          result.idleTimeout_ = idleTimeout_;
        } else {
          result.idleTimeout_ = idleTimeoutBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof envoy.api.v2.core.Protocol.HttpProtocolOptions) {
          return mergeFrom((envoy.api.v2.core.Protocol.HttpProtocolOptions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(envoy.api.v2.core.Protocol.HttpProtocolOptions other) {
        if (other == envoy.api.v2.core.Protocol.HttpProtocolOptions.getDefaultInstance()) return this;
        if (other.hasIdleTimeout()) {
          mergeIdleTimeout(other.getIdleTimeout());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        envoy.api.v2.core.Protocol.HttpProtocolOptions parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (envoy.api.v2.core.Protocol.HttpProtocolOptions) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.Duration idleTimeout_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> idleTimeoutBuilder_;
      /**
       * <pre>
       * The idle timeout for upstream connection pool connections. The idle timeout is defined as the
       * period in which there are no active requests. If not set, there is no idle timeout. When the
       * idle timeout is reached the connection will be closed. Note that request based timeouts mean
       * that HTTP/2 PINGs will not keep the connection alive.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle_timeout = 1;</code>
       */
      public boolean hasIdleTimeout() {
        return idleTimeoutBuilder_ != null || idleTimeout_ != null;
      }
      /**
       * <pre>
       * The idle timeout for upstream connection pool connections. The idle timeout is defined as the
       * period in which there are no active requests. If not set, there is no idle timeout. When the
       * idle timeout is reached the connection will be closed. Note that request based timeouts mean
       * that HTTP/2 PINGs will not keep the connection alive.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle_timeout = 1;</code>
       */
      public com.google.protobuf.Duration getIdleTimeout() {
        if (idleTimeoutBuilder_ == null) {
          return idleTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : idleTimeout_;
        } else {
          return idleTimeoutBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The idle timeout for upstream connection pool connections. The idle timeout is defined as the
       * period in which there are no active requests. If not set, there is no idle timeout. When the
       * idle timeout is reached the connection will be closed. Note that request based timeouts mean
       * that HTTP/2 PINGs will not keep the connection alive.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle_timeout = 1;</code>
       */
      public Builder setIdleTimeout(com.google.protobuf.Duration value) {
        if (idleTimeoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          idleTimeout_ = value;
          onChanged();
        } else {
          idleTimeoutBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The idle timeout for upstream connection pool connections. The idle timeout is defined as the
       * period in which there are no active requests. If not set, there is no idle timeout. When the
       * idle timeout is reached the connection will be closed. Note that request based timeouts mean
       * that HTTP/2 PINGs will not keep the connection alive.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle_timeout = 1;</code>
       */
      public Builder setIdleTimeout(
          com.google.protobuf.Duration.Builder builderForValue) {
        if (idleTimeoutBuilder_ == null) {
          idleTimeout_ = builderForValue.build();
          onChanged();
        } else {
          idleTimeoutBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The idle timeout for upstream connection pool connections. The idle timeout is defined as the
       * period in which there are no active requests. If not set, there is no idle timeout. When the
       * idle timeout is reached the connection will be closed. Note that request based timeouts mean
       * that HTTP/2 PINGs will not keep the connection alive.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle_timeout = 1;</code>
       */
      public Builder mergeIdleTimeout(com.google.protobuf.Duration value) {
        if (idleTimeoutBuilder_ == null) {
          if (idleTimeout_ != null) {
            idleTimeout_ =
              com.google.protobuf.Duration.newBuilder(idleTimeout_).mergeFrom(value).buildPartial();
          } else {
            idleTimeout_ = value;
          }
          onChanged();
        } else {
          idleTimeoutBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The idle timeout for upstream connection pool connections. The idle timeout is defined as the
       * period in which there are no active requests. If not set, there is no idle timeout. When the
       * idle timeout is reached the connection will be closed. Note that request based timeouts mean
       * that HTTP/2 PINGs will not keep the connection alive.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle_timeout = 1;</code>
       */
      public Builder clearIdleTimeout() {
        if (idleTimeoutBuilder_ == null) {
          idleTimeout_ = null;
          onChanged();
        } else {
          idleTimeout_ = null;
          idleTimeoutBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The idle timeout for upstream connection pool connections. The idle timeout is defined as the
       * period in which there are no active requests. If not set, there is no idle timeout. When the
       * idle timeout is reached the connection will be closed. Note that request based timeouts mean
       * that HTTP/2 PINGs will not keep the connection alive.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle_timeout = 1;</code>
       */
      public com.google.protobuf.Duration.Builder getIdleTimeoutBuilder() {
        
        onChanged();
        return getIdleTimeoutFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The idle timeout for upstream connection pool connections. The idle timeout is defined as the
       * period in which there are no active requests. If not set, there is no idle timeout. When the
       * idle timeout is reached the connection will be closed. Note that request based timeouts mean
       * that HTTP/2 PINGs will not keep the connection alive.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle_timeout = 1;</code>
       */
      public com.google.protobuf.DurationOrBuilder getIdleTimeoutOrBuilder() {
        if (idleTimeoutBuilder_ != null) {
          return idleTimeoutBuilder_.getMessageOrBuilder();
        } else {
          return idleTimeout_ == null ?
              com.google.protobuf.Duration.getDefaultInstance() : idleTimeout_;
        }
      }
      /**
       * <pre>
       * The idle timeout for upstream connection pool connections. The idle timeout is defined as the
       * period in which there are no active requests. If not set, there is no idle timeout. When the
       * idle timeout is reached the connection will be closed. Note that request based timeouts mean
       * that HTTP/2 PINGs will not keep the connection alive.
       * </pre>
       *
       * <code>.google.protobuf.Duration idle_timeout = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
          getIdleTimeoutFieldBuilder() {
        if (idleTimeoutBuilder_ == null) {
          idleTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                  getIdleTimeout(),
                  getParentForChildren(),
                  isClean());
          idleTimeout_ = null;
        }
        return idleTimeoutBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:envoy.api.v2.core.HttpProtocolOptions)
    }

    // @@protoc_insertion_point(class_scope:envoy.api.v2.core.HttpProtocolOptions)
    private static final envoy.api.v2.core.Protocol.HttpProtocolOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new envoy.api.v2.core.Protocol.HttpProtocolOptions();
    }

    public static envoy.api.v2.core.Protocol.HttpProtocolOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HttpProtocolOptions>
        PARSER = new com.google.protobuf.AbstractParser<HttpProtocolOptions>() {
      public HttpProtocolOptions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HttpProtocolOptions(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HttpProtocolOptions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HttpProtocolOptions> getParserForType() {
      return PARSER;
    }

    public envoy.api.v2.core.Protocol.HttpProtocolOptions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface Http1ProtocolOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:envoy.api.v2.core.Http1ProtocolOptions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Handle HTTP requests with absolute URLs in the requests. These requests
     * are generally sent by clients to forward/explicit proxies. This allows clients to configure
     * envoy as their HTTP proxy. In Unix, for example, this is typically done by setting the
     * *http_proxy* environment variable.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue allow_absolute_url = 1;</code>
     */
    boolean hasAllowAbsoluteUrl();
    /**
     * <pre>
     * Handle HTTP requests with absolute URLs in the requests. These requests
     * are generally sent by clients to forward/explicit proxies. This allows clients to configure
     * envoy as their HTTP proxy. In Unix, for example, this is typically done by setting the
     * *http_proxy* environment variable.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue allow_absolute_url = 1;</code>
     */
    com.google.protobuf.BoolValue getAllowAbsoluteUrl();
    /**
     * <pre>
     * Handle HTTP requests with absolute URLs in the requests. These requests
     * are generally sent by clients to forward/explicit proxies. This allows clients to configure
     * envoy as their HTTP proxy. In Unix, for example, this is typically done by setting the
     * *http_proxy* environment variable.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue allow_absolute_url = 1;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getAllowAbsoluteUrlOrBuilder();

    /**
     * <pre>
     * Handle incoming HTTP/1.0 and HTTP 0.9 requests.
     * This is off by default, and not fully standards compliant. There is support for pre-HTTP/1.1
     * style connect logic, dechunking, and handling lack of client host iff
     * *default_host_for_http_10* is configured.
     * </pre>
     *
     * <code>bool accept_http_10 = 2;</code>
     */
    boolean getAcceptHttp10();

    /**
     * <pre>
     * A default host for HTTP/1.0 requests. This is highly suggested if *accept_http_10* is true as
     * Envoy does not otherwise support HTTP/1.0 without a Host header.
     * This is a no-op if *accept_http_10* is not true.
     * </pre>
     *
     * <code>string default_host_for_http_10 = 3;</code>
     */
    java.lang.String getDefaultHostForHttp10();
    /**
     * <pre>
     * A default host for HTTP/1.0 requests. This is highly suggested if *accept_http_10* is true as
     * Envoy does not otherwise support HTTP/1.0 without a Host header.
     * This is a no-op if *accept_http_10* is not true.
     * </pre>
     *
     * <code>string default_host_for_http_10 = 3;</code>
     */
    com.google.protobuf.ByteString
        getDefaultHostForHttp10Bytes();
  }
  /**
   * Protobuf type {@code envoy.api.v2.core.Http1ProtocolOptions}
   */
  public  static final class Http1ProtocolOptions extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:envoy.api.v2.core.Http1ProtocolOptions)
      Http1ProtocolOptionsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Http1ProtocolOptions.newBuilder() to construct.
    private Http1ProtocolOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Http1ProtocolOptions() {
      acceptHttp10_ = false;
      defaultHostForHttp10_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Http1ProtocolOptions(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (allowAbsoluteUrl_ != null) {
                subBuilder = allowAbsoluteUrl_.toBuilder();
              }
              allowAbsoluteUrl_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(allowAbsoluteUrl_);
                allowAbsoluteUrl_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {

              acceptHttp10_ = input.readBool();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              defaultHostForHttp10_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return envoy.api.v2.core.Protocol.internal_static_envoy_api_v2_core_Http1ProtocolOptions_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return envoy.api.v2.core.Protocol.internal_static_envoy_api_v2_core_Http1ProtocolOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              envoy.api.v2.core.Protocol.Http1ProtocolOptions.class, envoy.api.v2.core.Protocol.Http1ProtocolOptions.Builder.class);
    }

    public static final int ALLOW_ABSOLUTE_URL_FIELD_NUMBER = 1;
    private com.google.protobuf.BoolValue allowAbsoluteUrl_;
    /**
     * <pre>
     * Handle HTTP requests with absolute URLs in the requests. These requests
     * are generally sent by clients to forward/explicit proxies. This allows clients to configure
     * envoy as their HTTP proxy. In Unix, for example, this is typically done by setting the
     * *http_proxy* environment variable.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue allow_absolute_url = 1;</code>
     */
    public boolean hasAllowAbsoluteUrl() {
      return allowAbsoluteUrl_ != null;
    }
    /**
     * <pre>
     * Handle HTTP requests with absolute URLs in the requests. These requests
     * are generally sent by clients to forward/explicit proxies. This allows clients to configure
     * envoy as their HTTP proxy. In Unix, for example, this is typically done by setting the
     * *http_proxy* environment variable.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue allow_absolute_url = 1;</code>
     */
    public com.google.protobuf.BoolValue getAllowAbsoluteUrl() {
      return allowAbsoluteUrl_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : allowAbsoluteUrl_;
    }
    /**
     * <pre>
     * Handle HTTP requests with absolute URLs in the requests. These requests
     * are generally sent by clients to forward/explicit proxies. This allows clients to configure
     * envoy as their HTTP proxy. In Unix, for example, this is typically done by setting the
     * *http_proxy* environment variable.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue allow_absolute_url = 1;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getAllowAbsoluteUrlOrBuilder() {
      return getAllowAbsoluteUrl();
    }

    public static final int ACCEPT_HTTP_10_FIELD_NUMBER = 2;
    private boolean acceptHttp10_;
    /**
     * <pre>
     * Handle incoming HTTP/1.0 and HTTP 0.9 requests.
     * This is off by default, and not fully standards compliant. There is support for pre-HTTP/1.1
     * style connect logic, dechunking, and handling lack of client host iff
     * *default_host_for_http_10* is configured.
     * </pre>
     *
     * <code>bool accept_http_10 = 2;</code>
     */
    public boolean getAcceptHttp10() {
      return acceptHttp10_;
    }

    public static final int DEFAULT_HOST_FOR_HTTP_10_FIELD_NUMBER = 3;
    private volatile java.lang.Object defaultHostForHttp10_;
    /**
     * <pre>
     * A default host for HTTP/1.0 requests. This is highly suggested if *accept_http_10* is true as
     * Envoy does not otherwise support HTTP/1.0 without a Host header.
     * This is a no-op if *accept_http_10* is not true.
     * </pre>
     *
     * <code>string default_host_for_http_10 = 3;</code>
     */
    public java.lang.String getDefaultHostForHttp10() {
      java.lang.Object ref = defaultHostForHttp10_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        defaultHostForHttp10_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A default host for HTTP/1.0 requests. This is highly suggested if *accept_http_10* is true as
     * Envoy does not otherwise support HTTP/1.0 without a Host header.
     * This is a no-op if *accept_http_10* is not true.
     * </pre>
     *
     * <code>string default_host_for_http_10 = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDefaultHostForHttp10Bytes() {
      java.lang.Object ref = defaultHostForHttp10_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        defaultHostForHttp10_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (allowAbsoluteUrl_ != null) {
        output.writeMessage(1, getAllowAbsoluteUrl());
      }
      if (acceptHttp10_ != false) {
        output.writeBool(2, acceptHttp10_);
      }
      if (!getDefaultHostForHttp10Bytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, defaultHostForHttp10_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (allowAbsoluteUrl_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAllowAbsoluteUrl());
      }
      if (acceptHttp10_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, acceptHttp10_);
      }
      if (!getDefaultHostForHttp10Bytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, defaultHostForHttp10_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof envoy.api.v2.core.Protocol.Http1ProtocolOptions)) {
        return super.equals(obj);
      }
      envoy.api.v2.core.Protocol.Http1ProtocolOptions other = (envoy.api.v2.core.Protocol.Http1ProtocolOptions) obj;

      boolean result = true;
      result = result && (hasAllowAbsoluteUrl() == other.hasAllowAbsoluteUrl());
      if (hasAllowAbsoluteUrl()) {
        result = result && getAllowAbsoluteUrl()
            .equals(other.getAllowAbsoluteUrl());
      }
      result = result && (getAcceptHttp10()
          == other.getAcceptHttp10());
      result = result && getDefaultHostForHttp10()
          .equals(other.getDefaultHostForHttp10());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAllowAbsoluteUrl()) {
        hash = (37 * hash) + ALLOW_ABSOLUTE_URL_FIELD_NUMBER;
        hash = (53 * hash) + getAllowAbsoluteUrl().hashCode();
      }
      hash = (37 * hash) + ACCEPT_HTTP_10_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getAcceptHttp10());
      hash = (37 * hash) + DEFAULT_HOST_FOR_HTTP_10_FIELD_NUMBER;
      hash = (53 * hash) + getDefaultHostForHttp10().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static envoy.api.v2.core.Protocol.Http1ProtocolOptions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static envoy.api.v2.core.Protocol.Http1ProtocolOptions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static envoy.api.v2.core.Protocol.Http1ProtocolOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static envoy.api.v2.core.Protocol.Http1ProtocolOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static envoy.api.v2.core.Protocol.Http1ProtocolOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static envoy.api.v2.core.Protocol.Http1ProtocolOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static envoy.api.v2.core.Protocol.Http1ProtocolOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static envoy.api.v2.core.Protocol.Http1ProtocolOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static envoy.api.v2.core.Protocol.Http1ProtocolOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static envoy.api.v2.core.Protocol.Http1ProtocolOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static envoy.api.v2.core.Protocol.Http1ProtocolOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static envoy.api.v2.core.Protocol.Http1ProtocolOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(envoy.api.v2.core.Protocol.Http1ProtocolOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code envoy.api.v2.core.Http1ProtocolOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:envoy.api.v2.core.Http1ProtocolOptions)
        envoy.api.v2.core.Protocol.Http1ProtocolOptionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return envoy.api.v2.core.Protocol.internal_static_envoy_api_v2_core_Http1ProtocolOptions_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return envoy.api.v2.core.Protocol.internal_static_envoy_api_v2_core_Http1ProtocolOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                envoy.api.v2.core.Protocol.Http1ProtocolOptions.class, envoy.api.v2.core.Protocol.Http1ProtocolOptions.Builder.class);
      }

      // Construct using envoy.api.v2.core.Protocol.Http1ProtocolOptions.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (allowAbsoluteUrlBuilder_ == null) {
          allowAbsoluteUrl_ = null;
        } else {
          allowAbsoluteUrl_ = null;
          allowAbsoluteUrlBuilder_ = null;
        }
        acceptHttp10_ = false;

        defaultHostForHttp10_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return envoy.api.v2.core.Protocol.internal_static_envoy_api_v2_core_Http1ProtocolOptions_descriptor;
      }

      public envoy.api.v2.core.Protocol.Http1ProtocolOptions getDefaultInstanceForType() {
        return envoy.api.v2.core.Protocol.Http1ProtocolOptions.getDefaultInstance();
      }

      public envoy.api.v2.core.Protocol.Http1ProtocolOptions build() {
        envoy.api.v2.core.Protocol.Http1ProtocolOptions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public envoy.api.v2.core.Protocol.Http1ProtocolOptions buildPartial() {
        envoy.api.v2.core.Protocol.Http1ProtocolOptions result = new envoy.api.v2.core.Protocol.Http1ProtocolOptions(this);
        if (allowAbsoluteUrlBuilder_ == null) {
          result.allowAbsoluteUrl_ = allowAbsoluteUrl_;
        } else {
          result.allowAbsoluteUrl_ = allowAbsoluteUrlBuilder_.build();
        }
        result.acceptHttp10_ = acceptHttp10_;
        result.defaultHostForHttp10_ = defaultHostForHttp10_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof envoy.api.v2.core.Protocol.Http1ProtocolOptions) {
          return mergeFrom((envoy.api.v2.core.Protocol.Http1ProtocolOptions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(envoy.api.v2.core.Protocol.Http1ProtocolOptions other) {
        if (other == envoy.api.v2.core.Protocol.Http1ProtocolOptions.getDefaultInstance()) return this;
        if (other.hasAllowAbsoluteUrl()) {
          mergeAllowAbsoluteUrl(other.getAllowAbsoluteUrl());
        }
        if (other.getAcceptHttp10() != false) {
          setAcceptHttp10(other.getAcceptHttp10());
        }
        if (!other.getDefaultHostForHttp10().isEmpty()) {
          defaultHostForHttp10_ = other.defaultHostForHttp10_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        envoy.api.v2.core.Protocol.Http1ProtocolOptions parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (envoy.api.v2.core.Protocol.Http1ProtocolOptions) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.BoolValue allowAbsoluteUrl_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> allowAbsoluteUrlBuilder_;
      /**
       * <pre>
       * Handle HTTP requests with absolute URLs in the requests. These requests
       * are generally sent by clients to forward/explicit proxies. This allows clients to configure
       * envoy as their HTTP proxy. In Unix, for example, this is typically done by setting the
       * *http_proxy* environment variable.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue allow_absolute_url = 1;</code>
       */
      public boolean hasAllowAbsoluteUrl() {
        return allowAbsoluteUrlBuilder_ != null || allowAbsoluteUrl_ != null;
      }
      /**
       * <pre>
       * Handle HTTP requests with absolute URLs in the requests. These requests
       * are generally sent by clients to forward/explicit proxies. This allows clients to configure
       * envoy as their HTTP proxy. In Unix, for example, this is typically done by setting the
       * *http_proxy* environment variable.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue allow_absolute_url = 1;</code>
       */
      public com.google.protobuf.BoolValue getAllowAbsoluteUrl() {
        if (allowAbsoluteUrlBuilder_ == null) {
          return allowAbsoluteUrl_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : allowAbsoluteUrl_;
        } else {
          return allowAbsoluteUrlBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Handle HTTP requests with absolute URLs in the requests. These requests
       * are generally sent by clients to forward/explicit proxies. This allows clients to configure
       * envoy as their HTTP proxy. In Unix, for example, this is typically done by setting the
       * *http_proxy* environment variable.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue allow_absolute_url = 1;</code>
       */
      public Builder setAllowAbsoluteUrl(com.google.protobuf.BoolValue value) {
        if (allowAbsoluteUrlBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          allowAbsoluteUrl_ = value;
          onChanged();
        } else {
          allowAbsoluteUrlBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Handle HTTP requests with absolute URLs in the requests. These requests
       * are generally sent by clients to forward/explicit proxies. This allows clients to configure
       * envoy as their HTTP proxy. In Unix, for example, this is typically done by setting the
       * *http_proxy* environment variable.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue allow_absolute_url = 1;</code>
       */
      public Builder setAllowAbsoluteUrl(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (allowAbsoluteUrlBuilder_ == null) {
          allowAbsoluteUrl_ = builderForValue.build();
          onChanged();
        } else {
          allowAbsoluteUrlBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Handle HTTP requests with absolute URLs in the requests. These requests
       * are generally sent by clients to forward/explicit proxies. This allows clients to configure
       * envoy as their HTTP proxy. In Unix, for example, this is typically done by setting the
       * *http_proxy* environment variable.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue allow_absolute_url = 1;</code>
       */
      public Builder mergeAllowAbsoluteUrl(com.google.protobuf.BoolValue value) {
        if (allowAbsoluteUrlBuilder_ == null) {
          if (allowAbsoluteUrl_ != null) {
            allowAbsoluteUrl_ =
              com.google.protobuf.BoolValue.newBuilder(allowAbsoluteUrl_).mergeFrom(value).buildPartial();
          } else {
            allowAbsoluteUrl_ = value;
          }
          onChanged();
        } else {
          allowAbsoluteUrlBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Handle HTTP requests with absolute URLs in the requests. These requests
       * are generally sent by clients to forward/explicit proxies. This allows clients to configure
       * envoy as their HTTP proxy. In Unix, for example, this is typically done by setting the
       * *http_proxy* environment variable.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue allow_absolute_url = 1;</code>
       */
      public Builder clearAllowAbsoluteUrl() {
        if (allowAbsoluteUrlBuilder_ == null) {
          allowAbsoluteUrl_ = null;
          onChanged();
        } else {
          allowAbsoluteUrl_ = null;
          allowAbsoluteUrlBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Handle HTTP requests with absolute URLs in the requests. These requests
       * are generally sent by clients to forward/explicit proxies. This allows clients to configure
       * envoy as their HTTP proxy. In Unix, for example, this is typically done by setting the
       * *http_proxy* environment variable.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue allow_absolute_url = 1;</code>
       */
      public com.google.protobuf.BoolValue.Builder getAllowAbsoluteUrlBuilder() {
        
        onChanged();
        return getAllowAbsoluteUrlFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Handle HTTP requests with absolute URLs in the requests. These requests
       * are generally sent by clients to forward/explicit proxies. This allows clients to configure
       * envoy as their HTTP proxy. In Unix, for example, this is typically done by setting the
       * *http_proxy* environment variable.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue allow_absolute_url = 1;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getAllowAbsoluteUrlOrBuilder() {
        if (allowAbsoluteUrlBuilder_ != null) {
          return allowAbsoluteUrlBuilder_.getMessageOrBuilder();
        } else {
          return allowAbsoluteUrl_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : allowAbsoluteUrl_;
        }
      }
      /**
       * <pre>
       * Handle HTTP requests with absolute URLs in the requests. These requests
       * are generally sent by clients to forward/explicit proxies. This allows clients to configure
       * envoy as their HTTP proxy. In Unix, for example, this is typically done by setting the
       * *http_proxy* environment variable.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue allow_absolute_url = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getAllowAbsoluteUrlFieldBuilder() {
        if (allowAbsoluteUrlBuilder_ == null) {
          allowAbsoluteUrlBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getAllowAbsoluteUrl(),
                  getParentForChildren(),
                  isClean());
          allowAbsoluteUrl_ = null;
        }
        return allowAbsoluteUrlBuilder_;
      }

      private boolean acceptHttp10_ ;
      /**
       * <pre>
       * Handle incoming HTTP/1.0 and HTTP 0.9 requests.
       * This is off by default, and not fully standards compliant. There is support for pre-HTTP/1.1
       * style connect logic, dechunking, and handling lack of client host iff
       * *default_host_for_http_10* is configured.
       * </pre>
       *
       * <code>bool accept_http_10 = 2;</code>
       */
      public boolean getAcceptHttp10() {
        return acceptHttp10_;
      }
      /**
       * <pre>
       * Handle incoming HTTP/1.0 and HTTP 0.9 requests.
       * This is off by default, and not fully standards compliant. There is support for pre-HTTP/1.1
       * style connect logic, dechunking, and handling lack of client host iff
       * *default_host_for_http_10* is configured.
       * </pre>
       *
       * <code>bool accept_http_10 = 2;</code>
       */
      public Builder setAcceptHttp10(boolean value) {
        
        acceptHttp10_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Handle incoming HTTP/1.0 and HTTP 0.9 requests.
       * This is off by default, and not fully standards compliant. There is support for pre-HTTP/1.1
       * style connect logic, dechunking, and handling lack of client host iff
       * *default_host_for_http_10* is configured.
       * </pre>
       *
       * <code>bool accept_http_10 = 2;</code>
       */
      public Builder clearAcceptHttp10() {
        
        acceptHttp10_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object defaultHostForHttp10_ = "";
      /**
       * <pre>
       * A default host for HTTP/1.0 requests. This is highly suggested if *accept_http_10* is true as
       * Envoy does not otherwise support HTTP/1.0 without a Host header.
       * This is a no-op if *accept_http_10* is not true.
       * </pre>
       *
       * <code>string default_host_for_http_10 = 3;</code>
       */
      public java.lang.String getDefaultHostForHttp10() {
        java.lang.Object ref = defaultHostForHttp10_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          defaultHostForHttp10_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A default host for HTTP/1.0 requests. This is highly suggested if *accept_http_10* is true as
       * Envoy does not otherwise support HTTP/1.0 without a Host header.
       * This is a no-op if *accept_http_10* is not true.
       * </pre>
       *
       * <code>string default_host_for_http_10 = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDefaultHostForHttp10Bytes() {
        java.lang.Object ref = defaultHostForHttp10_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          defaultHostForHttp10_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A default host for HTTP/1.0 requests. This is highly suggested if *accept_http_10* is true as
       * Envoy does not otherwise support HTTP/1.0 without a Host header.
       * This is a no-op if *accept_http_10* is not true.
       * </pre>
       *
       * <code>string default_host_for_http_10 = 3;</code>
       */
      public Builder setDefaultHostForHttp10(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        defaultHostForHttp10_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A default host for HTTP/1.0 requests. This is highly suggested if *accept_http_10* is true as
       * Envoy does not otherwise support HTTP/1.0 without a Host header.
       * This is a no-op if *accept_http_10* is not true.
       * </pre>
       *
       * <code>string default_host_for_http_10 = 3;</code>
       */
      public Builder clearDefaultHostForHttp10() {
        
        defaultHostForHttp10_ = getDefaultInstance().getDefaultHostForHttp10();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A default host for HTTP/1.0 requests. This is highly suggested if *accept_http_10* is true as
       * Envoy does not otherwise support HTTP/1.0 without a Host header.
       * This is a no-op if *accept_http_10* is not true.
       * </pre>
       *
       * <code>string default_host_for_http_10 = 3;</code>
       */
      public Builder setDefaultHostForHttp10Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        defaultHostForHttp10_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:envoy.api.v2.core.Http1ProtocolOptions)
    }

    // @@protoc_insertion_point(class_scope:envoy.api.v2.core.Http1ProtocolOptions)
    private static final envoy.api.v2.core.Protocol.Http1ProtocolOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new envoy.api.v2.core.Protocol.Http1ProtocolOptions();
    }

    public static envoy.api.v2.core.Protocol.Http1ProtocolOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Http1ProtocolOptions>
        PARSER = new com.google.protobuf.AbstractParser<Http1ProtocolOptions>() {
      public Http1ProtocolOptions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Http1ProtocolOptions(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Http1ProtocolOptions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Http1ProtocolOptions> getParserForType() {
      return PARSER;
    }

    public envoy.api.v2.core.Protocol.Http1ProtocolOptions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface Http2ProtocolOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:envoy.api.v2.core.Http2ProtocolOptions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * `Maximum table size &lt;http://httpwg.org/specs/rfc7541.html#rfc.section.4.2&gt;`_
     * (in octets) that the encoder is permitted to use for the dynamic HPACK table. Valid values
     * range from 0 to 4294967295 (2^32 - 1) and defaults to 4096. 0 effectively disables header
     * compression.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value hpack_table_size = 1;</code>
     */
    boolean hasHpackTableSize();
    /**
     * <pre>
     * `Maximum table size &lt;http://httpwg.org/specs/rfc7541.html#rfc.section.4.2&gt;`_
     * (in octets) that the encoder is permitted to use for the dynamic HPACK table. Valid values
     * range from 0 to 4294967295 (2^32 - 1) and defaults to 4096. 0 effectively disables header
     * compression.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value hpack_table_size = 1;</code>
     */
    com.google.protobuf.UInt32Value getHpackTableSize();
    /**
     * <pre>
     * `Maximum table size &lt;http://httpwg.org/specs/rfc7541.html#rfc.section.4.2&gt;`_
     * (in octets) that the encoder is permitted to use for the dynamic HPACK table. Valid values
     * range from 0 to 4294967295 (2^32 - 1) and defaults to 4096. 0 effectively disables header
     * compression.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value hpack_table_size = 1;</code>
     */
    com.google.protobuf.UInt32ValueOrBuilder getHpackTableSizeOrBuilder();

    /**
     * <pre>
     * `Maximum concurrent streams &lt;http://httpwg.org/specs/rfc7540.html#rfc.section.5.1.2&gt;`_
     * allowed for peer on one HTTP/2 connection. Valid values range from 1 to 2147483647 (2^31 - 1)
     * and defaults to 2147483647.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_concurrent_streams = 2 [(.validate.rules) = { ... }</code>
     */
    boolean hasMaxConcurrentStreams();
    /**
     * <pre>
     * `Maximum concurrent streams &lt;http://httpwg.org/specs/rfc7540.html#rfc.section.5.1.2&gt;`_
     * allowed for peer on one HTTP/2 connection. Valid values range from 1 to 2147483647 (2^31 - 1)
     * and defaults to 2147483647.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_concurrent_streams = 2 [(.validate.rules) = { ... }</code>
     */
    com.google.protobuf.UInt32Value getMaxConcurrentStreams();
    /**
     * <pre>
     * `Maximum concurrent streams &lt;http://httpwg.org/specs/rfc7540.html#rfc.section.5.1.2&gt;`_
     * allowed for peer on one HTTP/2 connection. Valid values range from 1 to 2147483647 (2^31 - 1)
     * and defaults to 2147483647.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_concurrent_streams = 2 [(.validate.rules) = { ... }</code>
     */
    com.google.protobuf.UInt32ValueOrBuilder getMaxConcurrentStreamsOrBuilder();

    /**
     * <pre>
     * This field also acts as a soft limit on the number of bytes Envoy will buffer per-stream in the
     * HTTP/2 codec buffers. Once the buffer reaches this pointer, watermark callbacks will fire to
     * stop the flow of data to the codec buffers.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value initial_stream_window_size = 3 [(.validate.rules) = { ... }</code>
     */
    boolean hasInitialStreamWindowSize();
    /**
     * <pre>
     * This field also acts as a soft limit on the number of bytes Envoy will buffer per-stream in the
     * HTTP/2 codec buffers. Once the buffer reaches this pointer, watermark callbacks will fire to
     * stop the flow of data to the codec buffers.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value initial_stream_window_size = 3 [(.validate.rules) = { ... }</code>
     */
    com.google.protobuf.UInt32Value getInitialStreamWindowSize();
    /**
     * <pre>
     * This field also acts as a soft limit on the number of bytes Envoy will buffer per-stream in the
     * HTTP/2 codec buffers. Once the buffer reaches this pointer, watermark callbacks will fire to
     * stop the flow of data to the codec buffers.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value initial_stream_window_size = 3 [(.validate.rules) = { ... }</code>
     */
    com.google.protobuf.UInt32ValueOrBuilder getInitialStreamWindowSizeOrBuilder();

    /**
     * <pre>
     * Similar to *initial_stream_window_size*, but for connection-level flow-control
     * window. Currently, this has the same minimum/maximum/default as *initial_stream_window_size*.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value initial_connection_window_size = 4 [(.validate.rules) = { ... }</code>
     */
    boolean hasInitialConnectionWindowSize();
    /**
     * <pre>
     * Similar to *initial_stream_window_size*, but for connection-level flow-control
     * window. Currently, this has the same minimum/maximum/default as *initial_stream_window_size*.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value initial_connection_window_size = 4 [(.validate.rules) = { ... }</code>
     */
    com.google.protobuf.UInt32Value getInitialConnectionWindowSize();
    /**
     * <pre>
     * Similar to *initial_stream_window_size*, but for connection-level flow-control
     * window. Currently, this has the same minimum/maximum/default as *initial_stream_window_size*.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value initial_connection_window_size = 4 [(.validate.rules) = { ... }</code>
     */
    com.google.protobuf.UInt32ValueOrBuilder getInitialConnectionWindowSizeOrBuilder();

    /**
     * <pre>
     * Allows proxying Websocket and other upgrades over H2 connect.
     * </pre>
     *
     * <code>bool allow_connect = 5;</code>
     */
    boolean getAllowConnect();

    /**
     * <pre>
     * [#not-implemented-hide:] Hiding until envoy has full metadata support.
     * Still under implementation. DO NOT USE.
     * Allows metadata. See [metadata
     * docs](https://github.com/envoyproxy/envoy/blob/master/source/docs/h2_metadata.md) for more
     * information.
     * </pre>
     *
     * <code>bool allow_metadata = 6;</code>
     */
    boolean getAllowMetadata();
  }
  /**
   * Protobuf type {@code envoy.api.v2.core.Http2ProtocolOptions}
   */
  public  static final class Http2ProtocolOptions extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:envoy.api.v2.core.Http2ProtocolOptions)
      Http2ProtocolOptionsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Http2ProtocolOptions.newBuilder() to construct.
    private Http2ProtocolOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Http2ProtocolOptions() {
      allowConnect_ = false;
      allowMetadata_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Http2ProtocolOptions(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.UInt32Value.Builder subBuilder = null;
              if (hpackTableSize_ != null) {
                subBuilder = hpackTableSize_.toBuilder();
              }
              hpackTableSize_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(hpackTableSize_);
                hpackTableSize_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.google.protobuf.UInt32Value.Builder subBuilder = null;
              if (maxConcurrentStreams_ != null) {
                subBuilder = maxConcurrentStreams_.toBuilder();
              }
              maxConcurrentStreams_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxConcurrentStreams_);
                maxConcurrentStreams_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              com.google.protobuf.UInt32Value.Builder subBuilder = null;
              if (initialStreamWindowSize_ != null) {
                subBuilder = initialStreamWindowSize_.toBuilder();
              }
              initialStreamWindowSize_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(initialStreamWindowSize_);
                initialStreamWindowSize_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              com.google.protobuf.UInt32Value.Builder subBuilder = null;
              if (initialConnectionWindowSize_ != null) {
                subBuilder = initialConnectionWindowSize_.toBuilder();
              }
              initialConnectionWindowSize_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(initialConnectionWindowSize_);
                initialConnectionWindowSize_ = subBuilder.buildPartial();
              }

              break;
            }
            case 40: {

              allowConnect_ = input.readBool();
              break;
            }
            case 48: {

              allowMetadata_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return envoy.api.v2.core.Protocol.internal_static_envoy_api_v2_core_Http2ProtocolOptions_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return envoy.api.v2.core.Protocol.internal_static_envoy_api_v2_core_Http2ProtocolOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              envoy.api.v2.core.Protocol.Http2ProtocolOptions.class, envoy.api.v2.core.Protocol.Http2ProtocolOptions.Builder.class);
    }

    public static final int HPACK_TABLE_SIZE_FIELD_NUMBER = 1;
    private com.google.protobuf.UInt32Value hpackTableSize_;
    /**
     * <pre>
     * `Maximum table size &lt;http://httpwg.org/specs/rfc7541.html#rfc.section.4.2&gt;`_
     * (in octets) that the encoder is permitted to use for the dynamic HPACK table. Valid values
     * range from 0 to 4294967295 (2^32 - 1) and defaults to 4096. 0 effectively disables header
     * compression.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value hpack_table_size = 1;</code>
     */
    public boolean hasHpackTableSize() {
      return hpackTableSize_ != null;
    }
    /**
     * <pre>
     * `Maximum table size &lt;http://httpwg.org/specs/rfc7541.html#rfc.section.4.2&gt;`_
     * (in octets) that the encoder is permitted to use for the dynamic HPACK table. Valid values
     * range from 0 to 4294967295 (2^32 - 1) and defaults to 4096. 0 effectively disables header
     * compression.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value hpack_table_size = 1;</code>
     */
    public com.google.protobuf.UInt32Value getHpackTableSize() {
      return hpackTableSize_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : hpackTableSize_;
    }
    /**
     * <pre>
     * `Maximum table size &lt;http://httpwg.org/specs/rfc7541.html#rfc.section.4.2&gt;`_
     * (in octets) that the encoder is permitted to use for the dynamic HPACK table. Valid values
     * range from 0 to 4294967295 (2^32 - 1) and defaults to 4096. 0 effectively disables header
     * compression.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value hpack_table_size = 1;</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getHpackTableSizeOrBuilder() {
      return getHpackTableSize();
    }

    public static final int MAX_CONCURRENT_STREAMS_FIELD_NUMBER = 2;
    private com.google.protobuf.UInt32Value maxConcurrentStreams_;
    /**
     * <pre>
     * `Maximum concurrent streams &lt;http://httpwg.org/specs/rfc7540.html#rfc.section.5.1.2&gt;`_
     * allowed for peer on one HTTP/2 connection. Valid values range from 1 to 2147483647 (2^31 - 1)
     * and defaults to 2147483647.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_concurrent_streams = 2 [(.validate.rules) = { ... }</code>
     */
    public boolean hasMaxConcurrentStreams() {
      return maxConcurrentStreams_ != null;
    }
    /**
     * <pre>
     * `Maximum concurrent streams &lt;http://httpwg.org/specs/rfc7540.html#rfc.section.5.1.2&gt;`_
     * allowed for peer on one HTTP/2 connection. Valid values range from 1 to 2147483647 (2^31 - 1)
     * and defaults to 2147483647.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_concurrent_streams = 2 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32Value getMaxConcurrentStreams() {
      return maxConcurrentStreams_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : maxConcurrentStreams_;
    }
    /**
     * <pre>
     * `Maximum concurrent streams &lt;http://httpwg.org/specs/rfc7540.html#rfc.section.5.1.2&gt;`_
     * allowed for peer on one HTTP/2 connection. Valid values range from 1 to 2147483647 (2^31 - 1)
     * and defaults to 2147483647.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_concurrent_streams = 2 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getMaxConcurrentStreamsOrBuilder() {
      return getMaxConcurrentStreams();
    }

    public static final int INITIAL_STREAM_WINDOW_SIZE_FIELD_NUMBER = 3;
    private com.google.protobuf.UInt32Value initialStreamWindowSize_;
    /**
     * <pre>
     * This field also acts as a soft limit on the number of bytes Envoy will buffer per-stream in the
     * HTTP/2 codec buffers. Once the buffer reaches this pointer, watermark callbacks will fire to
     * stop the flow of data to the codec buffers.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value initial_stream_window_size = 3 [(.validate.rules) = { ... }</code>
     */
    public boolean hasInitialStreamWindowSize() {
      return initialStreamWindowSize_ != null;
    }
    /**
     * <pre>
     * This field also acts as a soft limit on the number of bytes Envoy will buffer per-stream in the
     * HTTP/2 codec buffers. Once the buffer reaches this pointer, watermark callbacks will fire to
     * stop the flow of data to the codec buffers.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value initial_stream_window_size = 3 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32Value getInitialStreamWindowSize() {
      return initialStreamWindowSize_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : initialStreamWindowSize_;
    }
    /**
     * <pre>
     * This field also acts as a soft limit on the number of bytes Envoy will buffer per-stream in the
     * HTTP/2 codec buffers. Once the buffer reaches this pointer, watermark callbacks will fire to
     * stop the flow of data to the codec buffers.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value initial_stream_window_size = 3 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getInitialStreamWindowSizeOrBuilder() {
      return getInitialStreamWindowSize();
    }

    public static final int INITIAL_CONNECTION_WINDOW_SIZE_FIELD_NUMBER = 4;
    private com.google.protobuf.UInt32Value initialConnectionWindowSize_;
    /**
     * <pre>
     * Similar to *initial_stream_window_size*, but for connection-level flow-control
     * window. Currently, this has the same minimum/maximum/default as *initial_stream_window_size*.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value initial_connection_window_size = 4 [(.validate.rules) = { ... }</code>
     */
    public boolean hasInitialConnectionWindowSize() {
      return initialConnectionWindowSize_ != null;
    }
    /**
     * <pre>
     * Similar to *initial_stream_window_size*, but for connection-level flow-control
     * window. Currently, this has the same minimum/maximum/default as *initial_stream_window_size*.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value initial_connection_window_size = 4 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32Value getInitialConnectionWindowSize() {
      return initialConnectionWindowSize_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : initialConnectionWindowSize_;
    }
    /**
     * <pre>
     * Similar to *initial_stream_window_size*, but for connection-level flow-control
     * window. Currently, this has the same minimum/maximum/default as *initial_stream_window_size*.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value initial_connection_window_size = 4 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getInitialConnectionWindowSizeOrBuilder() {
      return getInitialConnectionWindowSize();
    }

    public static final int ALLOW_CONNECT_FIELD_NUMBER = 5;
    private boolean allowConnect_;
    /**
     * <pre>
     * Allows proxying Websocket and other upgrades over H2 connect.
     * </pre>
     *
     * <code>bool allow_connect = 5;</code>
     */
    public boolean getAllowConnect() {
      return allowConnect_;
    }

    public static final int ALLOW_METADATA_FIELD_NUMBER = 6;
    private boolean allowMetadata_;
    /**
     * <pre>
     * [#not-implemented-hide:] Hiding until envoy has full metadata support.
     * Still under implementation. DO NOT USE.
     * Allows metadata. See [metadata
     * docs](https://github.com/envoyproxy/envoy/blob/master/source/docs/h2_metadata.md) for more
     * information.
     * </pre>
     *
     * <code>bool allow_metadata = 6;</code>
     */
    public boolean getAllowMetadata() {
      return allowMetadata_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hpackTableSize_ != null) {
        output.writeMessage(1, getHpackTableSize());
      }
      if (maxConcurrentStreams_ != null) {
        output.writeMessage(2, getMaxConcurrentStreams());
      }
      if (initialStreamWindowSize_ != null) {
        output.writeMessage(3, getInitialStreamWindowSize());
      }
      if (initialConnectionWindowSize_ != null) {
        output.writeMessage(4, getInitialConnectionWindowSize());
      }
      if (allowConnect_ != false) {
        output.writeBool(5, allowConnect_);
      }
      if (allowMetadata_ != false) {
        output.writeBool(6, allowMetadata_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (hpackTableSize_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHpackTableSize());
      }
      if (maxConcurrentStreams_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMaxConcurrentStreams());
      }
      if (initialStreamWindowSize_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getInitialStreamWindowSize());
      }
      if (initialConnectionWindowSize_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getInitialConnectionWindowSize());
      }
      if (allowConnect_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, allowConnect_);
      }
      if (allowMetadata_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, allowMetadata_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof envoy.api.v2.core.Protocol.Http2ProtocolOptions)) {
        return super.equals(obj);
      }
      envoy.api.v2.core.Protocol.Http2ProtocolOptions other = (envoy.api.v2.core.Protocol.Http2ProtocolOptions) obj;

      boolean result = true;
      result = result && (hasHpackTableSize() == other.hasHpackTableSize());
      if (hasHpackTableSize()) {
        result = result && getHpackTableSize()
            .equals(other.getHpackTableSize());
      }
      result = result && (hasMaxConcurrentStreams() == other.hasMaxConcurrentStreams());
      if (hasMaxConcurrentStreams()) {
        result = result && getMaxConcurrentStreams()
            .equals(other.getMaxConcurrentStreams());
      }
      result = result && (hasInitialStreamWindowSize() == other.hasInitialStreamWindowSize());
      if (hasInitialStreamWindowSize()) {
        result = result && getInitialStreamWindowSize()
            .equals(other.getInitialStreamWindowSize());
      }
      result = result && (hasInitialConnectionWindowSize() == other.hasInitialConnectionWindowSize());
      if (hasInitialConnectionWindowSize()) {
        result = result && getInitialConnectionWindowSize()
            .equals(other.getInitialConnectionWindowSize());
      }
      result = result && (getAllowConnect()
          == other.getAllowConnect());
      result = result && (getAllowMetadata()
          == other.getAllowMetadata());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHpackTableSize()) {
        hash = (37 * hash) + HPACK_TABLE_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getHpackTableSize().hashCode();
      }
      if (hasMaxConcurrentStreams()) {
        hash = (37 * hash) + MAX_CONCURRENT_STREAMS_FIELD_NUMBER;
        hash = (53 * hash) + getMaxConcurrentStreams().hashCode();
      }
      if (hasInitialStreamWindowSize()) {
        hash = (37 * hash) + INITIAL_STREAM_WINDOW_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getInitialStreamWindowSize().hashCode();
      }
      if (hasInitialConnectionWindowSize()) {
        hash = (37 * hash) + INITIAL_CONNECTION_WINDOW_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getInitialConnectionWindowSize().hashCode();
      }
      hash = (37 * hash) + ALLOW_CONNECT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getAllowConnect());
      hash = (37 * hash) + ALLOW_METADATA_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getAllowMetadata());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static envoy.api.v2.core.Protocol.Http2ProtocolOptions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static envoy.api.v2.core.Protocol.Http2ProtocolOptions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static envoy.api.v2.core.Protocol.Http2ProtocolOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static envoy.api.v2.core.Protocol.Http2ProtocolOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static envoy.api.v2.core.Protocol.Http2ProtocolOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static envoy.api.v2.core.Protocol.Http2ProtocolOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static envoy.api.v2.core.Protocol.Http2ProtocolOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static envoy.api.v2.core.Protocol.Http2ProtocolOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static envoy.api.v2.core.Protocol.Http2ProtocolOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static envoy.api.v2.core.Protocol.Http2ProtocolOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static envoy.api.v2.core.Protocol.Http2ProtocolOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static envoy.api.v2.core.Protocol.Http2ProtocolOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(envoy.api.v2.core.Protocol.Http2ProtocolOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code envoy.api.v2.core.Http2ProtocolOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:envoy.api.v2.core.Http2ProtocolOptions)
        envoy.api.v2.core.Protocol.Http2ProtocolOptionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return envoy.api.v2.core.Protocol.internal_static_envoy_api_v2_core_Http2ProtocolOptions_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return envoy.api.v2.core.Protocol.internal_static_envoy_api_v2_core_Http2ProtocolOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                envoy.api.v2.core.Protocol.Http2ProtocolOptions.class, envoy.api.v2.core.Protocol.Http2ProtocolOptions.Builder.class);
      }

      // Construct using envoy.api.v2.core.Protocol.Http2ProtocolOptions.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (hpackTableSizeBuilder_ == null) {
          hpackTableSize_ = null;
        } else {
          hpackTableSize_ = null;
          hpackTableSizeBuilder_ = null;
        }
        if (maxConcurrentStreamsBuilder_ == null) {
          maxConcurrentStreams_ = null;
        } else {
          maxConcurrentStreams_ = null;
          maxConcurrentStreamsBuilder_ = null;
        }
        if (initialStreamWindowSizeBuilder_ == null) {
          initialStreamWindowSize_ = null;
        } else {
          initialStreamWindowSize_ = null;
          initialStreamWindowSizeBuilder_ = null;
        }
        if (initialConnectionWindowSizeBuilder_ == null) {
          initialConnectionWindowSize_ = null;
        } else {
          initialConnectionWindowSize_ = null;
          initialConnectionWindowSizeBuilder_ = null;
        }
        allowConnect_ = false;

        allowMetadata_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return envoy.api.v2.core.Protocol.internal_static_envoy_api_v2_core_Http2ProtocolOptions_descriptor;
      }

      public envoy.api.v2.core.Protocol.Http2ProtocolOptions getDefaultInstanceForType() {
        return envoy.api.v2.core.Protocol.Http2ProtocolOptions.getDefaultInstance();
      }

      public envoy.api.v2.core.Protocol.Http2ProtocolOptions build() {
        envoy.api.v2.core.Protocol.Http2ProtocolOptions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public envoy.api.v2.core.Protocol.Http2ProtocolOptions buildPartial() {
        envoy.api.v2.core.Protocol.Http2ProtocolOptions result = new envoy.api.v2.core.Protocol.Http2ProtocolOptions(this);
        if (hpackTableSizeBuilder_ == null) {
          result.hpackTableSize_ = hpackTableSize_;
        } else {
          result.hpackTableSize_ = hpackTableSizeBuilder_.build();
        }
        if (maxConcurrentStreamsBuilder_ == null) {
          result.maxConcurrentStreams_ = maxConcurrentStreams_;
        } else {
          result.maxConcurrentStreams_ = maxConcurrentStreamsBuilder_.build();
        }
        if (initialStreamWindowSizeBuilder_ == null) {
          result.initialStreamWindowSize_ = initialStreamWindowSize_;
        } else {
          result.initialStreamWindowSize_ = initialStreamWindowSizeBuilder_.build();
        }
        if (initialConnectionWindowSizeBuilder_ == null) {
          result.initialConnectionWindowSize_ = initialConnectionWindowSize_;
        } else {
          result.initialConnectionWindowSize_ = initialConnectionWindowSizeBuilder_.build();
        }
        result.allowConnect_ = allowConnect_;
        result.allowMetadata_ = allowMetadata_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof envoy.api.v2.core.Protocol.Http2ProtocolOptions) {
          return mergeFrom((envoy.api.v2.core.Protocol.Http2ProtocolOptions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(envoy.api.v2.core.Protocol.Http2ProtocolOptions other) {
        if (other == envoy.api.v2.core.Protocol.Http2ProtocolOptions.getDefaultInstance()) return this;
        if (other.hasHpackTableSize()) {
          mergeHpackTableSize(other.getHpackTableSize());
        }
        if (other.hasMaxConcurrentStreams()) {
          mergeMaxConcurrentStreams(other.getMaxConcurrentStreams());
        }
        if (other.hasInitialStreamWindowSize()) {
          mergeInitialStreamWindowSize(other.getInitialStreamWindowSize());
        }
        if (other.hasInitialConnectionWindowSize()) {
          mergeInitialConnectionWindowSize(other.getInitialConnectionWindowSize());
        }
        if (other.getAllowConnect() != false) {
          setAllowConnect(other.getAllowConnect());
        }
        if (other.getAllowMetadata() != false) {
          setAllowMetadata(other.getAllowMetadata());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        envoy.api.v2.core.Protocol.Http2ProtocolOptions parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (envoy.api.v2.core.Protocol.Http2ProtocolOptions) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.UInt32Value hpackTableSize_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> hpackTableSizeBuilder_;
      /**
       * <pre>
       * `Maximum table size &lt;http://httpwg.org/specs/rfc7541.html#rfc.section.4.2&gt;`_
       * (in octets) that the encoder is permitted to use for the dynamic HPACK table. Valid values
       * range from 0 to 4294967295 (2^32 - 1) and defaults to 4096. 0 effectively disables header
       * compression.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value hpack_table_size = 1;</code>
       */
      public boolean hasHpackTableSize() {
        return hpackTableSizeBuilder_ != null || hpackTableSize_ != null;
      }
      /**
       * <pre>
       * `Maximum table size &lt;http://httpwg.org/specs/rfc7541.html#rfc.section.4.2&gt;`_
       * (in octets) that the encoder is permitted to use for the dynamic HPACK table. Valid values
       * range from 0 to 4294967295 (2^32 - 1) and defaults to 4096. 0 effectively disables header
       * compression.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value hpack_table_size = 1;</code>
       */
      public com.google.protobuf.UInt32Value getHpackTableSize() {
        if (hpackTableSizeBuilder_ == null) {
          return hpackTableSize_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : hpackTableSize_;
        } else {
          return hpackTableSizeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * `Maximum table size &lt;http://httpwg.org/specs/rfc7541.html#rfc.section.4.2&gt;`_
       * (in octets) that the encoder is permitted to use for the dynamic HPACK table. Valid values
       * range from 0 to 4294967295 (2^32 - 1) and defaults to 4096. 0 effectively disables header
       * compression.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value hpack_table_size = 1;</code>
       */
      public Builder setHpackTableSize(com.google.protobuf.UInt32Value value) {
        if (hpackTableSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          hpackTableSize_ = value;
          onChanged();
        } else {
          hpackTableSizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * `Maximum table size &lt;http://httpwg.org/specs/rfc7541.html#rfc.section.4.2&gt;`_
       * (in octets) that the encoder is permitted to use for the dynamic HPACK table. Valid values
       * range from 0 to 4294967295 (2^32 - 1) and defaults to 4096. 0 effectively disables header
       * compression.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value hpack_table_size = 1;</code>
       */
      public Builder setHpackTableSize(
          com.google.protobuf.UInt32Value.Builder builderForValue) {
        if (hpackTableSizeBuilder_ == null) {
          hpackTableSize_ = builderForValue.build();
          onChanged();
        } else {
          hpackTableSizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * `Maximum table size &lt;http://httpwg.org/specs/rfc7541.html#rfc.section.4.2&gt;`_
       * (in octets) that the encoder is permitted to use for the dynamic HPACK table. Valid values
       * range from 0 to 4294967295 (2^32 - 1) and defaults to 4096. 0 effectively disables header
       * compression.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value hpack_table_size = 1;</code>
       */
      public Builder mergeHpackTableSize(com.google.protobuf.UInt32Value value) {
        if (hpackTableSizeBuilder_ == null) {
          if (hpackTableSize_ != null) {
            hpackTableSize_ =
              com.google.protobuf.UInt32Value.newBuilder(hpackTableSize_).mergeFrom(value).buildPartial();
          } else {
            hpackTableSize_ = value;
          }
          onChanged();
        } else {
          hpackTableSizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * `Maximum table size &lt;http://httpwg.org/specs/rfc7541.html#rfc.section.4.2&gt;`_
       * (in octets) that the encoder is permitted to use for the dynamic HPACK table. Valid values
       * range from 0 to 4294967295 (2^32 - 1) and defaults to 4096. 0 effectively disables header
       * compression.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value hpack_table_size = 1;</code>
       */
      public Builder clearHpackTableSize() {
        if (hpackTableSizeBuilder_ == null) {
          hpackTableSize_ = null;
          onChanged();
        } else {
          hpackTableSize_ = null;
          hpackTableSizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * `Maximum table size &lt;http://httpwg.org/specs/rfc7541.html#rfc.section.4.2&gt;`_
       * (in octets) that the encoder is permitted to use for the dynamic HPACK table. Valid values
       * range from 0 to 4294967295 (2^32 - 1) and defaults to 4096. 0 effectively disables header
       * compression.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value hpack_table_size = 1;</code>
       */
      public com.google.protobuf.UInt32Value.Builder getHpackTableSizeBuilder() {
        
        onChanged();
        return getHpackTableSizeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * `Maximum table size &lt;http://httpwg.org/specs/rfc7541.html#rfc.section.4.2&gt;`_
       * (in octets) that the encoder is permitted to use for the dynamic HPACK table. Valid values
       * range from 0 to 4294967295 (2^32 - 1) and defaults to 4096. 0 effectively disables header
       * compression.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value hpack_table_size = 1;</code>
       */
      public com.google.protobuf.UInt32ValueOrBuilder getHpackTableSizeOrBuilder() {
        if (hpackTableSizeBuilder_ != null) {
          return hpackTableSizeBuilder_.getMessageOrBuilder();
        } else {
          return hpackTableSize_ == null ?
              com.google.protobuf.UInt32Value.getDefaultInstance() : hpackTableSize_;
        }
      }
      /**
       * <pre>
       * `Maximum table size &lt;http://httpwg.org/specs/rfc7541.html#rfc.section.4.2&gt;`_
       * (in octets) that the encoder is permitted to use for the dynamic HPACK table. Valid values
       * range from 0 to 4294967295 (2^32 - 1) and defaults to 4096. 0 effectively disables header
       * compression.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value hpack_table_size = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
          getHpackTableSizeFieldBuilder() {
        if (hpackTableSizeBuilder_ == null) {
          hpackTableSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                  getHpackTableSize(),
                  getParentForChildren(),
                  isClean());
          hpackTableSize_ = null;
        }
        return hpackTableSizeBuilder_;
      }

      private com.google.protobuf.UInt32Value maxConcurrentStreams_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> maxConcurrentStreamsBuilder_;
      /**
       * <pre>
       * `Maximum concurrent streams &lt;http://httpwg.org/specs/rfc7540.html#rfc.section.5.1.2&gt;`_
       * allowed for peer on one HTTP/2 connection. Valid values range from 1 to 2147483647 (2^31 - 1)
       * and defaults to 2147483647.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value max_concurrent_streams = 2 [(.validate.rules) = { ... }</code>
       */
      public boolean hasMaxConcurrentStreams() {
        return maxConcurrentStreamsBuilder_ != null || maxConcurrentStreams_ != null;
      }
      /**
       * <pre>
       * `Maximum concurrent streams &lt;http://httpwg.org/specs/rfc7540.html#rfc.section.5.1.2&gt;`_
       * allowed for peer on one HTTP/2 connection. Valid values range from 1 to 2147483647 (2^31 - 1)
       * and defaults to 2147483647.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value max_concurrent_streams = 2 [(.validate.rules) = { ... }</code>
       */
      public com.google.protobuf.UInt32Value getMaxConcurrentStreams() {
        if (maxConcurrentStreamsBuilder_ == null) {
          return maxConcurrentStreams_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : maxConcurrentStreams_;
        } else {
          return maxConcurrentStreamsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * `Maximum concurrent streams &lt;http://httpwg.org/specs/rfc7540.html#rfc.section.5.1.2&gt;`_
       * allowed for peer on one HTTP/2 connection. Valid values range from 1 to 2147483647 (2^31 - 1)
       * and defaults to 2147483647.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value max_concurrent_streams = 2 [(.validate.rules) = { ... }</code>
       */
      public Builder setMaxConcurrentStreams(com.google.protobuf.UInt32Value value) {
        if (maxConcurrentStreamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxConcurrentStreams_ = value;
          onChanged();
        } else {
          maxConcurrentStreamsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * `Maximum concurrent streams &lt;http://httpwg.org/specs/rfc7540.html#rfc.section.5.1.2&gt;`_
       * allowed for peer on one HTTP/2 connection. Valid values range from 1 to 2147483647 (2^31 - 1)
       * and defaults to 2147483647.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value max_concurrent_streams = 2 [(.validate.rules) = { ... }</code>
       */
      public Builder setMaxConcurrentStreams(
          com.google.protobuf.UInt32Value.Builder builderForValue) {
        if (maxConcurrentStreamsBuilder_ == null) {
          maxConcurrentStreams_ = builderForValue.build();
          onChanged();
        } else {
          maxConcurrentStreamsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * `Maximum concurrent streams &lt;http://httpwg.org/specs/rfc7540.html#rfc.section.5.1.2&gt;`_
       * allowed for peer on one HTTP/2 connection. Valid values range from 1 to 2147483647 (2^31 - 1)
       * and defaults to 2147483647.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value max_concurrent_streams = 2 [(.validate.rules) = { ... }</code>
       */
      public Builder mergeMaxConcurrentStreams(com.google.protobuf.UInt32Value value) {
        if (maxConcurrentStreamsBuilder_ == null) {
          if (maxConcurrentStreams_ != null) {
            maxConcurrentStreams_ =
              com.google.protobuf.UInt32Value.newBuilder(maxConcurrentStreams_).mergeFrom(value).buildPartial();
          } else {
            maxConcurrentStreams_ = value;
          }
          onChanged();
        } else {
          maxConcurrentStreamsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * `Maximum concurrent streams &lt;http://httpwg.org/specs/rfc7540.html#rfc.section.5.1.2&gt;`_
       * allowed for peer on one HTTP/2 connection. Valid values range from 1 to 2147483647 (2^31 - 1)
       * and defaults to 2147483647.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value max_concurrent_streams = 2 [(.validate.rules) = { ... }</code>
       */
      public Builder clearMaxConcurrentStreams() {
        if (maxConcurrentStreamsBuilder_ == null) {
          maxConcurrentStreams_ = null;
          onChanged();
        } else {
          maxConcurrentStreams_ = null;
          maxConcurrentStreamsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * `Maximum concurrent streams &lt;http://httpwg.org/specs/rfc7540.html#rfc.section.5.1.2&gt;`_
       * allowed for peer on one HTTP/2 connection. Valid values range from 1 to 2147483647 (2^31 - 1)
       * and defaults to 2147483647.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value max_concurrent_streams = 2 [(.validate.rules) = { ... }</code>
       */
      public com.google.protobuf.UInt32Value.Builder getMaxConcurrentStreamsBuilder() {
        
        onChanged();
        return getMaxConcurrentStreamsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * `Maximum concurrent streams &lt;http://httpwg.org/specs/rfc7540.html#rfc.section.5.1.2&gt;`_
       * allowed for peer on one HTTP/2 connection. Valid values range from 1 to 2147483647 (2^31 - 1)
       * and defaults to 2147483647.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value max_concurrent_streams = 2 [(.validate.rules) = { ... }</code>
       */
      public com.google.protobuf.UInt32ValueOrBuilder getMaxConcurrentStreamsOrBuilder() {
        if (maxConcurrentStreamsBuilder_ != null) {
          return maxConcurrentStreamsBuilder_.getMessageOrBuilder();
        } else {
          return maxConcurrentStreams_ == null ?
              com.google.protobuf.UInt32Value.getDefaultInstance() : maxConcurrentStreams_;
        }
      }
      /**
       * <pre>
       * `Maximum concurrent streams &lt;http://httpwg.org/specs/rfc7540.html#rfc.section.5.1.2&gt;`_
       * allowed for peer on one HTTP/2 connection. Valid values range from 1 to 2147483647 (2^31 - 1)
       * and defaults to 2147483647.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value max_concurrent_streams = 2 [(.validate.rules) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
          getMaxConcurrentStreamsFieldBuilder() {
        if (maxConcurrentStreamsBuilder_ == null) {
          maxConcurrentStreamsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                  getMaxConcurrentStreams(),
                  getParentForChildren(),
                  isClean());
          maxConcurrentStreams_ = null;
        }
        return maxConcurrentStreamsBuilder_;
      }

      private com.google.protobuf.UInt32Value initialStreamWindowSize_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> initialStreamWindowSizeBuilder_;
      /**
       * <pre>
       * This field also acts as a soft limit on the number of bytes Envoy will buffer per-stream in the
       * HTTP/2 codec buffers. Once the buffer reaches this pointer, watermark callbacks will fire to
       * stop the flow of data to the codec buffers.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value initial_stream_window_size = 3 [(.validate.rules) = { ... }</code>
       */
      public boolean hasInitialStreamWindowSize() {
        return initialStreamWindowSizeBuilder_ != null || initialStreamWindowSize_ != null;
      }
      /**
       * <pre>
       * This field also acts as a soft limit on the number of bytes Envoy will buffer per-stream in the
       * HTTP/2 codec buffers. Once the buffer reaches this pointer, watermark callbacks will fire to
       * stop the flow of data to the codec buffers.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value initial_stream_window_size = 3 [(.validate.rules) = { ... }</code>
       */
      public com.google.protobuf.UInt32Value getInitialStreamWindowSize() {
        if (initialStreamWindowSizeBuilder_ == null) {
          return initialStreamWindowSize_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : initialStreamWindowSize_;
        } else {
          return initialStreamWindowSizeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * This field also acts as a soft limit on the number of bytes Envoy will buffer per-stream in the
       * HTTP/2 codec buffers. Once the buffer reaches this pointer, watermark callbacks will fire to
       * stop the flow of data to the codec buffers.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value initial_stream_window_size = 3 [(.validate.rules) = { ... }</code>
       */
      public Builder setInitialStreamWindowSize(com.google.protobuf.UInt32Value value) {
        if (initialStreamWindowSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          initialStreamWindowSize_ = value;
          onChanged();
        } else {
          initialStreamWindowSizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * This field also acts as a soft limit on the number of bytes Envoy will buffer per-stream in the
       * HTTP/2 codec buffers. Once the buffer reaches this pointer, watermark callbacks will fire to
       * stop the flow of data to the codec buffers.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value initial_stream_window_size = 3 [(.validate.rules) = { ... }</code>
       */
      public Builder setInitialStreamWindowSize(
          com.google.protobuf.UInt32Value.Builder builderForValue) {
        if (initialStreamWindowSizeBuilder_ == null) {
          initialStreamWindowSize_ = builderForValue.build();
          onChanged();
        } else {
          initialStreamWindowSizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * This field also acts as a soft limit on the number of bytes Envoy will buffer per-stream in the
       * HTTP/2 codec buffers. Once the buffer reaches this pointer, watermark callbacks will fire to
       * stop the flow of data to the codec buffers.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value initial_stream_window_size = 3 [(.validate.rules) = { ... }</code>
       */
      public Builder mergeInitialStreamWindowSize(com.google.protobuf.UInt32Value value) {
        if (initialStreamWindowSizeBuilder_ == null) {
          if (initialStreamWindowSize_ != null) {
            initialStreamWindowSize_ =
              com.google.protobuf.UInt32Value.newBuilder(initialStreamWindowSize_).mergeFrom(value).buildPartial();
          } else {
            initialStreamWindowSize_ = value;
          }
          onChanged();
        } else {
          initialStreamWindowSizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * This field also acts as a soft limit on the number of bytes Envoy will buffer per-stream in the
       * HTTP/2 codec buffers. Once the buffer reaches this pointer, watermark callbacks will fire to
       * stop the flow of data to the codec buffers.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value initial_stream_window_size = 3 [(.validate.rules) = { ... }</code>
       */
      public Builder clearInitialStreamWindowSize() {
        if (initialStreamWindowSizeBuilder_ == null) {
          initialStreamWindowSize_ = null;
          onChanged();
        } else {
          initialStreamWindowSize_ = null;
          initialStreamWindowSizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * This field also acts as a soft limit on the number of bytes Envoy will buffer per-stream in the
       * HTTP/2 codec buffers. Once the buffer reaches this pointer, watermark callbacks will fire to
       * stop the flow of data to the codec buffers.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value initial_stream_window_size = 3 [(.validate.rules) = { ... }</code>
       */
      public com.google.protobuf.UInt32Value.Builder getInitialStreamWindowSizeBuilder() {
        
        onChanged();
        return getInitialStreamWindowSizeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * This field also acts as a soft limit on the number of bytes Envoy will buffer per-stream in the
       * HTTP/2 codec buffers. Once the buffer reaches this pointer, watermark callbacks will fire to
       * stop the flow of data to the codec buffers.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value initial_stream_window_size = 3 [(.validate.rules) = { ... }</code>
       */
      public com.google.protobuf.UInt32ValueOrBuilder getInitialStreamWindowSizeOrBuilder() {
        if (initialStreamWindowSizeBuilder_ != null) {
          return initialStreamWindowSizeBuilder_.getMessageOrBuilder();
        } else {
          return initialStreamWindowSize_ == null ?
              com.google.protobuf.UInt32Value.getDefaultInstance() : initialStreamWindowSize_;
        }
      }
      /**
       * <pre>
       * This field also acts as a soft limit on the number of bytes Envoy will buffer per-stream in the
       * HTTP/2 codec buffers. Once the buffer reaches this pointer, watermark callbacks will fire to
       * stop the flow of data to the codec buffers.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value initial_stream_window_size = 3 [(.validate.rules) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
          getInitialStreamWindowSizeFieldBuilder() {
        if (initialStreamWindowSizeBuilder_ == null) {
          initialStreamWindowSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                  getInitialStreamWindowSize(),
                  getParentForChildren(),
                  isClean());
          initialStreamWindowSize_ = null;
        }
        return initialStreamWindowSizeBuilder_;
      }

      private com.google.protobuf.UInt32Value initialConnectionWindowSize_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> initialConnectionWindowSizeBuilder_;
      /**
       * <pre>
       * Similar to *initial_stream_window_size*, but for connection-level flow-control
       * window. Currently, this has the same minimum/maximum/default as *initial_stream_window_size*.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value initial_connection_window_size = 4 [(.validate.rules) = { ... }</code>
       */
      public boolean hasInitialConnectionWindowSize() {
        return initialConnectionWindowSizeBuilder_ != null || initialConnectionWindowSize_ != null;
      }
      /**
       * <pre>
       * Similar to *initial_stream_window_size*, but for connection-level flow-control
       * window. Currently, this has the same minimum/maximum/default as *initial_stream_window_size*.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value initial_connection_window_size = 4 [(.validate.rules) = { ... }</code>
       */
      public com.google.protobuf.UInt32Value getInitialConnectionWindowSize() {
        if (initialConnectionWindowSizeBuilder_ == null) {
          return initialConnectionWindowSize_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : initialConnectionWindowSize_;
        } else {
          return initialConnectionWindowSizeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Similar to *initial_stream_window_size*, but for connection-level flow-control
       * window. Currently, this has the same minimum/maximum/default as *initial_stream_window_size*.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value initial_connection_window_size = 4 [(.validate.rules) = { ... }</code>
       */
      public Builder setInitialConnectionWindowSize(com.google.protobuf.UInt32Value value) {
        if (initialConnectionWindowSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          initialConnectionWindowSize_ = value;
          onChanged();
        } else {
          initialConnectionWindowSizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Similar to *initial_stream_window_size*, but for connection-level flow-control
       * window. Currently, this has the same minimum/maximum/default as *initial_stream_window_size*.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value initial_connection_window_size = 4 [(.validate.rules) = { ... }</code>
       */
      public Builder setInitialConnectionWindowSize(
          com.google.protobuf.UInt32Value.Builder builderForValue) {
        if (initialConnectionWindowSizeBuilder_ == null) {
          initialConnectionWindowSize_ = builderForValue.build();
          onChanged();
        } else {
          initialConnectionWindowSizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Similar to *initial_stream_window_size*, but for connection-level flow-control
       * window. Currently, this has the same minimum/maximum/default as *initial_stream_window_size*.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value initial_connection_window_size = 4 [(.validate.rules) = { ... }</code>
       */
      public Builder mergeInitialConnectionWindowSize(com.google.protobuf.UInt32Value value) {
        if (initialConnectionWindowSizeBuilder_ == null) {
          if (initialConnectionWindowSize_ != null) {
            initialConnectionWindowSize_ =
              com.google.protobuf.UInt32Value.newBuilder(initialConnectionWindowSize_).mergeFrom(value).buildPartial();
          } else {
            initialConnectionWindowSize_ = value;
          }
          onChanged();
        } else {
          initialConnectionWindowSizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Similar to *initial_stream_window_size*, but for connection-level flow-control
       * window. Currently, this has the same minimum/maximum/default as *initial_stream_window_size*.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value initial_connection_window_size = 4 [(.validate.rules) = { ... }</code>
       */
      public Builder clearInitialConnectionWindowSize() {
        if (initialConnectionWindowSizeBuilder_ == null) {
          initialConnectionWindowSize_ = null;
          onChanged();
        } else {
          initialConnectionWindowSize_ = null;
          initialConnectionWindowSizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Similar to *initial_stream_window_size*, but for connection-level flow-control
       * window. Currently, this has the same minimum/maximum/default as *initial_stream_window_size*.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value initial_connection_window_size = 4 [(.validate.rules) = { ... }</code>
       */
      public com.google.protobuf.UInt32Value.Builder getInitialConnectionWindowSizeBuilder() {
        
        onChanged();
        return getInitialConnectionWindowSizeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Similar to *initial_stream_window_size*, but for connection-level flow-control
       * window. Currently, this has the same minimum/maximum/default as *initial_stream_window_size*.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value initial_connection_window_size = 4 [(.validate.rules) = { ... }</code>
       */
      public com.google.protobuf.UInt32ValueOrBuilder getInitialConnectionWindowSizeOrBuilder() {
        if (initialConnectionWindowSizeBuilder_ != null) {
          return initialConnectionWindowSizeBuilder_.getMessageOrBuilder();
        } else {
          return initialConnectionWindowSize_ == null ?
              com.google.protobuf.UInt32Value.getDefaultInstance() : initialConnectionWindowSize_;
        }
      }
      /**
       * <pre>
       * Similar to *initial_stream_window_size*, but for connection-level flow-control
       * window. Currently, this has the same minimum/maximum/default as *initial_stream_window_size*.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value initial_connection_window_size = 4 [(.validate.rules) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
          getInitialConnectionWindowSizeFieldBuilder() {
        if (initialConnectionWindowSizeBuilder_ == null) {
          initialConnectionWindowSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                  getInitialConnectionWindowSize(),
                  getParentForChildren(),
                  isClean());
          initialConnectionWindowSize_ = null;
        }
        return initialConnectionWindowSizeBuilder_;
      }

      private boolean allowConnect_ ;
      /**
       * <pre>
       * Allows proxying Websocket and other upgrades over H2 connect.
       * </pre>
       *
       * <code>bool allow_connect = 5;</code>
       */
      public boolean getAllowConnect() {
        return allowConnect_;
      }
      /**
       * <pre>
       * Allows proxying Websocket and other upgrades over H2 connect.
       * </pre>
       *
       * <code>bool allow_connect = 5;</code>
       */
      public Builder setAllowConnect(boolean value) {
        
        allowConnect_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Allows proxying Websocket and other upgrades over H2 connect.
       * </pre>
       *
       * <code>bool allow_connect = 5;</code>
       */
      public Builder clearAllowConnect() {
        
        allowConnect_ = false;
        onChanged();
        return this;
      }

      private boolean allowMetadata_ ;
      /**
       * <pre>
       * [#not-implemented-hide:] Hiding until envoy has full metadata support.
       * Still under implementation. DO NOT USE.
       * Allows metadata. See [metadata
       * docs](https://github.com/envoyproxy/envoy/blob/master/source/docs/h2_metadata.md) for more
       * information.
       * </pre>
       *
       * <code>bool allow_metadata = 6;</code>
       */
      public boolean getAllowMetadata() {
        return allowMetadata_;
      }
      /**
       * <pre>
       * [#not-implemented-hide:] Hiding until envoy has full metadata support.
       * Still under implementation. DO NOT USE.
       * Allows metadata. See [metadata
       * docs](https://github.com/envoyproxy/envoy/blob/master/source/docs/h2_metadata.md) for more
       * information.
       * </pre>
       *
       * <code>bool allow_metadata = 6;</code>
       */
      public Builder setAllowMetadata(boolean value) {
        
        allowMetadata_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * [#not-implemented-hide:] Hiding until envoy has full metadata support.
       * Still under implementation. DO NOT USE.
       * Allows metadata. See [metadata
       * docs](https://github.com/envoyproxy/envoy/blob/master/source/docs/h2_metadata.md) for more
       * information.
       * </pre>
       *
       * <code>bool allow_metadata = 6;</code>
       */
      public Builder clearAllowMetadata() {
        
        allowMetadata_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:envoy.api.v2.core.Http2ProtocolOptions)
    }

    // @@protoc_insertion_point(class_scope:envoy.api.v2.core.Http2ProtocolOptions)
    private static final envoy.api.v2.core.Protocol.Http2ProtocolOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new envoy.api.v2.core.Protocol.Http2ProtocolOptions();
    }

    public static envoy.api.v2.core.Protocol.Http2ProtocolOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Http2ProtocolOptions>
        PARSER = new com.google.protobuf.AbstractParser<Http2ProtocolOptions>() {
      public Http2ProtocolOptions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Http2ProtocolOptions(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Http2ProtocolOptions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Http2ProtocolOptions> getParserForType() {
      return PARSER;
    }

    public envoy.api.v2.core.Protocol.Http2ProtocolOptions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GrpcProtocolOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:envoy.api.v2.core.GrpcProtocolOptions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.envoy.api.v2.core.Http2ProtocolOptions http2_protocol_options = 1;</code>
     */
    boolean hasHttp2ProtocolOptions();
    /**
     * <code>.envoy.api.v2.core.Http2ProtocolOptions http2_protocol_options = 1;</code>
     */
    envoy.api.v2.core.Protocol.Http2ProtocolOptions getHttp2ProtocolOptions();
    /**
     * <code>.envoy.api.v2.core.Http2ProtocolOptions http2_protocol_options = 1;</code>
     */
    envoy.api.v2.core.Protocol.Http2ProtocolOptionsOrBuilder getHttp2ProtocolOptionsOrBuilder();
  }
  /**
   * <pre>
   * [#not-implemented-hide:]
   * </pre>
   *
   * Protobuf type {@code envoy.api.v2.core.GrpcProtocolOptions}
   */
  public  static final class GrpcProtocolOptions extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:envoy.api.v2.core.GrpcProtocolOptions)
      GrpcProtocolOptionsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GrpcProtocolOptions.newBuilder() to construct.
    private GrpcProtocolOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GrpcProtocolOptions() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GrpcProtocolOptions(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              envoy.api.v2.core.Protocol.Http2ProtocolOptions.Builder subBuilder = null;
              if (http2ProtocolOptions_ != null) {
                subBuilder = http2ProtocolOptions_.toBuilder();
              }
              http2ProtocolOptions_ = input.readMessage(envoy.api.v2.core.Protocol.Http2ProtocolOptions.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(http2ProtocolOptions_);
                http2ProtocolOptions_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return envoy.api.v2.core.Protocol.internal_static_envoy_api_v2_core_GrpcProtocolOptions_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return envoy.api.v2.core.Protocol.internal_static_envoy_api_v2_core_GrpcProtocolOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              envoy.api.v2.core.Protocol.GrpcProtocolOptions.class, envoy.api.v2.core.Protocol.GrpcProtocolOptions.Builder.class);
    }

    public static final int HTTP2_PROTOCOL_OPTIONS_FIELD_NUMBER = 1;
    private envoy.api.v2.core.Protocol.Http2ProtocolOptions http2ProtocolOptions_;
    /**
     * <code>.envoy.api.v2.core.Http2ProtocolOptions http2_protocol_options = 1;</code>
     */
    public boolean hasHttp2ProtocolOptions() {
      return http2ProtocolOptions_ != null;
    }
    /**
     * <code>.envoy.api.v2.core.Http2ProtocolOptions http2_protocol_options = 1;</code>
     */
    public envoy.api.v2.core.Protocol.Http2ProtocolOptions getHttp2ProtocolOptions() {
      return http2ProtocolOptions_ == null ? envoy.api.v2.core.Protocol.Http2ProtocolOptions.getDefaultInstance() : http2ProtocolOptions_;
    }
    /**
     * <code>.envoy.api.v2.core.Http2ProtocolOptions http2_protocol_options = 1;</code>
     */
    public envoy.api.v2.core.Protocol.Http2ProtocolOptionsOrBuilder getHttp2ProtocolOptionsOrBuilder() {
      return getHttp2ProtocolOptions();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (http2ProtocolOptions_ != null) {
        output.writeMessage(1, getHttp2ProtocolOptions());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (http2ProtocolOptions_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHttp2ProtocolOptions());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof envoy.api.v2.core.Protocol.GrpcProtocolOptions)) {
        return super.equals(obj);
      }
      envoy.api.v2.core.Protocol.GrpcProtocolOptions other = (envoy.api.v2.core.Protocol.GrpcProtocolOptions) obj;

      boolean result = true;
      result = result && (hasHttp2ProtocolOptions() == other.hasHttp2ProtocolOptions());
      if (hasHttp2ProtocolOptions()) {
        result = result && getHttp2ProtocolOptions()
            .equals(other.getHttp2ProtocolOptions());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHttp2ProtocolOptions()) {
        hash = (37 * hash) + HTTP2_PROTOCOL_OPTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getHttp2ProtocolOptions().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static envoy.api.v2.core.Protocol.GrpcProtocolOptions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static envoy.api.v2.core.Protocol.GrpcProtocolOptions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static envoy.api.v2.core.Protocol.GrpcProtocolOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static envoy.api.v2.core.Protocol.GrpcProtocolOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static envoy.api.v2.core.Protocol.GrpcProtocolOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static envoy.api.v2.core.Protocol.GrpcProtocolOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static envoy.api.v2.core.Protocol.GrpcProtocolOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static envoy.api.v2.core.Protocol.GrpcProtocolOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static envoy.api.v2.core.Protocol.GrpcProtocolOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static envoy.api.v2.core.Protocol.GrpcProtocolOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static envoy.api.v2.core.Protocol.GrpcProtocolOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static envoy.api.v2.core.Protocol.GrpcProtocolOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(envoy.api.v2.core.Protocol.GrpcProtocolOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * </pre>
     *
     * Protobuf type {@code envoy.api.v2.core.GrpcProtocolOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:envoy.api.v2.core.GrpcProtocolOptions)
        envoy.api.v2.core.Protocol.GrpcProtocolOptionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return envoy.api.v2.core.Protocol.internal_static_envoy_api_v2_core_GrpcProtocolOptions_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return envoy.api.v2.core.Protocol.internal_static_envoy_api_v2_core_GrpcProtocolOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                envoy.api.v2.core.Protocol.GrpcProtocolOptions.class, envoy.api.v2.core.Protocol.GrpcProtocolOptions.Builder.class);
      }

      // Construct using envoy.api.v2.core.Protocol.GrpcProtocolOptions.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (http2ProtocolOptionsBuilder_ == null) {
          http2ProtocolOptions_ = null;
        } else {
          http2ProtocolOptions_ = null;
          http2ProtocolOptionsBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return envoy.api.v2.core.Protocol.internal_static_envoy_api_v2_core_GrpcProtocolOptions_descriptor;
      }

      public envoy.api.v2.core.Protocol.GrpcProtocolOptions getDefaultInstanceForType() {
        return envoy.api.v2.core.Protocol.GrpcProtocolOptions.getDefaultInstance();
      }

      public envoy.api.v2.core.Protocol.GrpcProtocolOptions build() {
        envoy.api.v2.core.Protocol.GrpcProtocolOptions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public envoy.api.v2.core.Protocol.GrpcProtocolOptions buildPartial() {
        envoy.api.v2.core.Protocol.GrpcProtocolOptions result = new envoy.api.v2.core.Protocol.GrpcProtocolOptions(this);
        if (http2ProtocolOptionsBuilder_ == null) {
          result.http2ProtocolOptions_ = http2ProtocolOptions_;
        } else {
          result.http2ProtocolOptions_ = http2ProtocolOptionsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof envoy.api.v2.core.Protocol.GrpcProtocolOptions) {
          return mergeFrom((envoy.api.v2.core.Protocol.GrpcProtocolOptions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(envoy.api.v2.core.Protocol.GrpcProtocolOptions other) {
        if (other == envoy.api.v2.core.Protocol.GrpcProtocolOptions.getDefaultInstance()) return this;
        if (other.hasHttp2ProtocolOptions()) {
          mergeHttp2ProtocolOptions(other.getHttp2ProtocolOptions());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        envoy.api.v2.core.Protocol.GrpcProtocolOptions parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (envoy.api.v2.core.Protocol.GrpcProtocolOptions) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private envoy.api.v2.core.Protocol.Http2ProtocolOptions http2ProtocolOptions_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          envoy.api.v2.core.Protocol.Http2ProtocolOptions, envoy.api.v2.core.Protocol.Http2ProtocolOptions.Builder, envoy.api.v2.core.Protocol.Http2ProtocolOptionsOrBuilder> http2ProtocolOptionsBuilder_;
      /**
       * <code>.envoy.api.v2.core.Http2ProtocolOptions http2_protocol_options = 1;</code>
       */
      public boolean hasHttp2ProtocolOptions() {
        return http2ProtocolOptionsBuilder_ != null || http2ProtocolOptions_ != null;
      }
      /**
       * <code>.envoy.api.v2.core.Http2ProtocolOptions http2_protocol_options = 1;</code>
       */
      public envoy.api.v2.core.Protocol.Http2ProtocolOptions getHttp2ProtocolOptions() {
        if (http2ProtocolOptionsBuilder_ == null) {
          return http2ProtocolOptions_ == null ? envoy.api.v2.core.Protocol.Http2ProtocolOptions.getDefaultInstance() : http2ProtocolOptions_;
        } else {
          return http2ProtocolOptionsBuilder_.getMessage();
        }
      }
      /**
       * <code>.envoy.api.v2.core.Http2ProtocolOptions http2_protocol_options = 1;</code>
       */
      public Builder setHttp2ProtocolOptions(envoy.api.v2.core.Protocol.Http2ProtocolOptions value) {
        if (http2ProtocolOptionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          http2ProtocolOptions_ = value;
          onChanged();
        } else {
          http2ProtocolOptionsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.envoy.api.v2.core.Http2ProtocolOptions http2_protocol_options = 1;</code>
       */
      public Builder setHttp2ProtocolOptions(
          envoy.api.v2.core.Protocol.Http2ProtocolOptions.Builder builderForValue) {
        if (http2ProtocolOptionsBuilder_ == null) {
          http2ProtocolOptions_ = builderForValue.build();
          onChanged();
        } else {
          http2ProtocolOptionsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.envoy.api.v2.core.Http2ProtocolOptions http2_protocol_options = 1;</code>
       */
      public Builder mergeHttp2ProtocolOptions(envoy.api.v2.core.Protocol.Http2ProtocolOptions value) {
        if (http2ProtocolOptionsBuilder_ == null) {
          if (http2ProtocolOptions_ != null) {
            http2ProtocolOptions_ =
              envoy.api.v2.core.Protocol.Http2ProtocolOptions.newBuilder(http2ProtocolOptions_).mergeFrom(value).buildPartial();
          } else {
            http2ProtocolOptions_ = value;
          }
          onChanged();
        } else {
          http2ProtocolOptionsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.envoy.api.v2.core.Http2ProtocolOptions http2_protocol_options = 1;</code>
       */
      public Builder clearHttp2ProtocolOptions() {
        if (http2ProtocolOptionsBuilder_ == null) {
          http2ProtocolOptions_ = null;
          onChanged();
        } else {
          http2ProtocolOptions_ = null;
          http2ProtocolOptionsBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.envoy.api.v2.core.Http2ProtocolOptions http2_protocol_options = 1;</code>
       */
      public envoy.api.v2.core.Protocol.Http2ProtocolOptions.Builder getHttp2ProtocolOptionsBuilder() {
        
        onChanged();
        return getHttp2ProtocolOptionsFieldBuilder().getBuilder();
      }
      /**
       * <code>.envoy.api.v2.core.Http2ProtocolOptions http2_protocol_options = 1;</code>
       */
      public envoy.api.v2.core.Protocol.Http2ProtocolOptionsOrBuilder getHttp2ProtocolOptionsOrBuilder() {
        if (http2ProtocolOptionsBuilder_ != null) {
          return http2ProtocolOptionsBuilder_.getMessageOrBuilder();
        } else {
          return http2ProtocolOptions_ == null ?
              envoy.api.v2.core.Protocol.Http2ProtocolOptions.getDefaultInstance() : http2ProtocolOptions_;
        }
      }
      /**
       * <code>.envoy.api.v2.core.Http2ProtocolOptions http2_protocol_options = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          envoy.api.v2.core.Protocol.Http2ProtocolOptions, envoy.api.v2.core.Protocol.Http2ProtocolOptions.Builder, envoy.api.v2.core.Protocol.Http2ProtocolOptionsOrBuilder> 
          getHttp2ProtocolOptionsFieldBuilder() {
        if (http2ProtocolOptionsBuilder_ == null) {
          http2ProtocolOptionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              envoy.api.v2.core.Protocol.Http2ProtocolOptions, envoy.api.v2.core.Protocol.Http2ProtocolOptions.Builder, envoy.api.v2.core.Protocol.Http2ProtocolOptionsOrBuilder>(
                  getHttp2ProtocolOptions(),
                  getParentForChildren(),
                  isClean());
          http2ProtocolOptions_ = null;
        }
        return http2ProtocolOptionsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:envoy.api.v2.core.GrpcProtocolOptions)
    }

    // @@protoc_insertion_point(class_scope:envoy.api.v2.core.GrpcProtocolOptions)
    private static final envoy.api.v2.core.Protocol.GrpcProtocolOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new envoy.api.v2.core.Protocol.GrpcProtocolOptions();
    }

    public static envoy.api.v2.core.Protocol.GrpcProtocolOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GrpcProtocolOptions>
        PARSER = new com.google.protobuf.AbstractParser<GrpcProtocolOptions>() {
      public GrpcProtocolOptions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GrpcProtocolOptions(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GrpcProtocolOptions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GrpcProtocolOptions> getParserForType() {
      return PARSER;
    }

    public envoy.api.v2.core.Protocol.GrpcProtocolOptions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_api_v2_core_TcpProtocolOptions_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_api_v2_core_TcpProtocolOptions_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_api_v2_core_HttpProtocolOptions_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_api_v2_core_HttpProtocolOptions_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_api_v2_core_Http1ProtocolOptions_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_api_v2_core_Http1ProtocolOptions_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_api_v2_core_Http2ProtocolOptions_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_api_v2_core_Http2ProtocolOptions_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_api_v2_core_GrpcProtocolOptions_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_api_v2_core_GrpcProtocolOptions_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n envoy/api/v2/core/protocol.proto\022\021envo" +
      "y.api.v2.core\032\036google/protobuf/duration." +
      "proto\032\036google/protobuf/wrappers.proto\032\027v" +
      "alidate/validate.proto\"\024\n\022TcpProtocolOpt" +
      "ions\"F\n\023HttpProtocolOptions\022/\n\014idle_time" +
      "out\030\001 \001(\0132\031.google.protobuf.Duration\"\210\001\n" +
      "\024Http1ProtocolOptions\0226\n\022allow_absolute_" +
      "url\030\001 \001(\0132\032.google.protobuf.BoolValue\022\026\n" +
      "\016accept_http_10\030\002 \001(\010\022 \n\030default_host_fo" +
      "r_http_10\030\003 \001(\t\"\372\002\n\024Http2ProtocolOptions" +
      "\0226\n\020hpack_table_size\030\001 \001(\0132\034.google.prot" +
      "obuf.UInt32Value\022M\n\026max_concurrent_strea" +
      "ms\030\002 \001(\0132\034.google.protobuf.UInt32ValueB\017" +
      "\272\351\300\003\n*\010\030\377\377\377\377\007(\001\022S\n\032initial_stream_window" +
      "_size\030\003 \001(\0132\034.google.protobuf.UInt32Valu" +
      "eB\021\272\351\300\003\014*\n\030\377\377\377\377\007(\377\377\003\022W\n\036initial_connecti" +
      "on_window_size\030\004 \001(\0132\034.google.protobuf.U" +
      "Int32ValueB\021\272\351\300\003\014*\n\030\377\377\377\377\007(\377\377\003\022\025\n\rallow_c" +
      "onnect\030\005 \001(\010\022\026\n\016allow_metadata\030\006 \001(\010\"^\n\023" +
      "GrpcProtocolOptions\022G\n\026http2_protocol_op" +
      "tions\030\001 \001(\0132\'.envoy.api.v2.core.Http2Pro" +
      "tocolOptionsb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.DurationProto.getDescriptor(),
          com.google.protobuf.WrappersProto.getDescriptor(),
          validate.Validate.getDescriptor(),
        }, assigner);
    internal_static_envoy_api_v2_core_TcpProtocolOptions_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_envoy_api_v2_core_TcpProtocolOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_api_v2_core_TcpProtocolOptions_descriptor,
        new java.lang.String[] { });
    internal_static_envoy_api_v2_core_HttpProtocolOptions_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_envoy_api_v2_core_HttpProtocolOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_api_v2_core_HttpProtocolOptions_descriptor,
        new java.lang.String[] { "IdleTimeout", });
    internal_static_envoy_api_v2_core_Http1ProtocolOptions_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_envoy_api_v2_core_Http1ProtocolOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_api_v2_core_Http1ProtocolOptions_descriptor,
        new java.lang.String[] { "AllowAbsoluteUrl", "AcceptHttp10", "DefaultHostForHttp10", });
    internal_static_envoy_api_v2_core_Http2ProtocolOptions_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_envoy_api_v2_core_Http2ProtocolOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_api_v2_core_Http2ProtocolOptions_descriptor,
        new java.lang.String[] { "HpackTableSize", "MaxConcurrentStreams", "InitialStreamWindowSize", "InitialConnectionWindowSize", "AllowConnect", "AllowMetadata", });
    internal_static_envoy_api_v2_core_GrpcProtocolOptions_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_envoy_api_v2_core_GrpcProtocolOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_api_v2_core_GrpcProtocolOptions_descriptor,
        new java.lang.String[] { "Http2ProtocolOptions", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(validate.Validate.rules);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.protobuf.DurationProto.getDescriptor();
    com.google.protobuf.WrappersProto.getDescriptor();
    validate.Validate.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
