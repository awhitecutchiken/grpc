// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/api/v2/eds.proto

package envoy.api.v2;

public final class Eds {
  private Eds() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ClusterLoadAssignmentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:envoy.api.v2.ClusterLoadAssignment)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Name of the cluster. This will be the :ref:`service_name
     * &lt;envoy_api_field_Cluster.EdsClusterConfig.service_name&gt;` value if specified
     * in the cluster :ref:`EdsClusterConfig
     * &lt;envoy_api_msg_Cluster.EdsClusterConfig&gt;`.
     * </pre>
     *
     * <code>string cluster_name = 1 [(.validate.rules) = { ... }</code>
     */
    java.lang.String getClusterName();
    /**
     * <pre>
     * Name of the cluster. This will be the :ref:`service_name
     * &lt;envoy_api_field_Cluster.EdsClusterConfig.service_name&gt;` value if specified
     * in the cluster :ref:`EdsClusterConfig
     * &lt;envoy_api_msg_Cluster.EdsClusterConfig&gt;`.
     * </pre>
     *
     * <code>string cluster_name = 1 [(.validate.rules) = { ... }</code>
     */
    com.google.protobuf.ByteString
        getClusterNameBytes();

    /**
     * <pre>
     * List of endpoints to load balance to.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
     */
    java.util.List<envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpoints> 
        getEndpointsList();
    /**
     * <pre>
     * List of endpoints to load balance to.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
     */
    envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpoints getEndpoints(int index);
    /**
     * <pre>
     * List of endpoints to load balance to.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
     */
    int getEndpointsCount();
    /**
     * <pre>
     * List of endpoints to load balance to.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
     */
    java.util.List<? extends envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpointsOrBuilder> 
        getEndpointsOrBuilderList();
    /**
     * <pre>
     * List of endpoints to load balance to.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
     */
    envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpointsOrBuilder getEndpointsOrBuilder(
        int index);

    /**
     * <pre>
     * Load balancing policy settings.
     * </pre>
     *
     * <code>.envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;</code>
     */
    boolean hasPolicy();
    /**
     * <pre>
     * Load balancing policy settings.
     * </pre>
     *
     * <code>.envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;</code>
     */
    envoy.api.v2.Eds.ClusterLoadAssignment.Policy getPolicy();
    /**
     * <pre>
     * Load balancing policy settings.
     * </pre>
     *
     * <code>.envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;</code>
     */
    envoy.api.v2.Eds.ClusterLoadAssignment.PolicyOrBuilder getPolicyOrBuilder();
  }
  /**
   * <pre>
   * Each route from RDS will map to a single cluster or traffic split across
   * clusters using weights expressed in the RDS WeightedCluster.
   * With EDS, each cluster is treated independently from a LB perspective, with
   * LB taking place between the Localities within a cluster and at a finer
   * granularity between the hosts within a locality. For a given cluster, the
   * effective weight of a host is its load_balancing_weight multiplied by the
   * load_balancing_weight of its Locality.
   * </pre>
   *
   * Protobuf type {@code envoy.api.v2.ClusterLoadAssignment}
   */
  public  static final class ClusterLoadAssignment extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:envoy.api.v2.ClusterLoadAssignment)
      ClusterLoadAssignmentOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ClusterLoadAssignment.newBuilder() to construct.
    private ClusterLoadAssignment(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ClusterLoadAssignment() {
      clusterName_ = "";
      endpoints_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ClusterLoadAssignment(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              clusterName_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                endpoints_ = new java.util.ArrayList<envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpoints>();
                mutable_bitField0_ |= 0x00000002;
              }
              endpoints_.add(
                  input.readMessage(envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpoints.parser(), extensionRegistry));
              break;
            }
            case 34: {
              envoy.api.v2.Eds.ClusterLoadAssignment.Policy.Builder subBuilder = null;
              if (policy_ != null) {
                subBuilder = policy_.toBuilder();
              }
              policy_ = input.readMessage(envoy.api.v2.Eds.ClusterLoadAssignment.Policy.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(policy_);
                policy_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          endpoints_ = java.util.Collections.unmodifiableList(endpoints_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return envoy.api.v2.Eds.internal_static_envoy_api_v2_ClusterLoadAssignment_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return envoy.api.v2.Eds.internal_static_envoy_api_v2_ClusterLoadAssignment_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              envoy.api.v2.Eds.ClusterLoadAssignment.class, envoy.api.v2.Eds.ClusterLoadAssignment.Builder.class);
    }

    public interface PolicyOrBuilder extends
        // @@protoc_insertion_point(interface_extends:envoy.api.v2.ClusterLoadAssignment.Policy)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Action to trim the overall incoming traffic to protect the upstream
       * hosts. This action allows protection in case the hosts are unable to
       * recover from an outage, or unable to autoscale or unable to handle
       * incoming traffic volume for any reason.
       * At the client each category is applied one after the other to generate
       * the 'actual' drop percentage on all outgoing traffic. For example:
       * .. code-block:: json
       *  { "drop_overloads": [
       *      { "category": "throttle", "drop_percentage": 60 }
       *      { "category": "lb", "drop_percentage": 50 }
       *  ]}
       * The actual drop percentages applied to the traffic at the clients will be
       *    "throttle"_drop = 60%
       *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
       *    actual_outgoing_load = 20% // remaining after applying all categories.
       * </pre>
       *
       * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
       */
      java.util.List<envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload> 
          getDropOverloadsList();
      /**
       * <pre>
       * Action to trim the overall incoming traffic to protect the upstream
       * hosts. This action allows protection in case the hosts are unable to
       * recover from an outage, or unable to autoscale or unable to handle
       * incoming traffic volume for any reason.
       * At the client each category is applied one after the other to generate
       * the 'actual' drop percentage on all outgoing traffic. For example:
       * .. code-block:: json
       *  { "drop_overloads": [
       *      { "category": "throttle", "drop_percentage": 60 }
       *      { "category": "lb", "drop_percentage": 50 }
       *  ]}
       * The actual drop percentages applied to the traffic at the clients will be
       *    "throttle"_drop = 60%
       *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
       *    actual_outgoing_load = 20% // remaining after applying all categories.
       * </pre>
       *
       * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
       */
      envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload getDropOverloads(int index);
      /**
       * <pre>
       * Action to trim the overall incoming traffic to protect the upstream
       * hosts. This action allows protection in case the hosts are unable to
       * recover from an outage, or unable to autoscale or unable to handle
       * incoming traffic volume for any reason.
       * At the client each category is applied one after the other to generate
       * the 'actual' drop percentage on all outgoing traffic. For example:
       * .. code-block:: json
       *  { "drop_overloads": [
       *      { "category": "throttle", "drop_percentage": 60 }
       *      { "category": "lb", "drop_percentage": 50 }
       *  ]}
       * The actual drop percentages applied to the traffic at the clients will be
       *    "throttle"_drop = 60%
       *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
       *    actual_outgoing_load = 20% // remaining after applying all categories.
       * </pre>
       *
       * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
       */
      int getDropOverloadsCount();
      /**
       * <pre>
       * Action to trim the overall incoming traffic to protect the upstream
       * hosts. This action allows protection in case the hosts are unable to
       * recover from an outage, or unable to autoscale or unable to handle
       * incoming traffic volume for any reason.
       * At the client each category is applied one after the other to generate
       * the 'actual' drop percentage on all outgoing traffic. For example:
       * .. code-block:: json
       *  { "drop_overloads": [
       *      { "category": "throttle", "drop_percentage": 60 }
       *      { "category": "lb", "drop_percentage": 50 }
       *  ]}
       * The actual drop percentages applied to the traffic at the clients will be
       *    "throttle"_drop = 60%
       *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
       *    actual_outgoing_load = 20% // remaining after applying all categories.
       * </pre>
       *
       * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
       */
      java.util.List<? extends envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverloadOrBuilder> 
          getDropOverloadsOrBuilderList();
      /**
       * <pre>
       * Action to trim the overall incoming traffic to protect the upstream
       * hosts. This action allows protection in case the hosts are unable to
       * recover from an outage, or unable to autoscale or unable to handle
       * incoming traffic volume for any reason.
       * At the client each category is applied one after the other to generate
       * the 'actual' drop percentage on all outgoing traffic. For example:
       * .. code-block:: json
       *  { "drop_overloads": [
       *      { "category": "throttle", "drop_percentage": 60 }
       *      { "category": "lb", "drop_percentage": 50 }
       *  ]}
       * The actual drop percentages applied to the traffic at the clients will be
       *    "throttle"_drop = 60%
       *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
       *    actual_outgoing_load = 20% // remaining after applying all categories.
       * </pre>
       *
       * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
       */
      envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverloadOrBuilder getDropOverloadsOrBuilder(
          int index);

      /**
       * <pre>
       * Priority levels and localities are considered overprovisioned with this
       * factor (in percentage). This means that we don't consider a priority
       * level or locality unhealthy until the percentage of healthy hosts
       * multiplied by the overprovisioning factor drops below 100.
       * With the default value 140(1.4), Envoy doesn't consider a priority level
       * or a locality unhealthy until their percentage of healthy hosts drops
       * below 72%.
       * Read more at :ref:`priority levels &lt;arch_overview_load_balancing_priority_levels&gt;` and
       * :ref:`localities &lt;arch_overview_load_balancing_locality_weighted_lb&gt;`.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value overprovisioning_factor = 3 [(.validate.rules) = { ... }</code>
       */
      boolean hasOverprovisioningFactor();
      /**
       * <pre>
       * Priority levels and localities are considered overprovisioned with this
       * factor (in percentage). This means that we don't consider a priority
       * level or locality unhealthy until the percentage of healthy hosts
       * multiplied by the overprovisioning factor drops below 100.
       * With the default value 140(1.4), Envoy doesn't consider a priority level
       * or a locality unhealthy until their percentage of healthy hosts drops
       * below 72%.
       * Read more at :ref:`priority levels &lt;arch_overview_load_balancing_priority_levels&gt;` and
       * :ref:`localities &lt;arch_overview_load_balancing_locality_weighted_lb&gt;`.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value overprovisioning_factor = 3 [(.validate.rules) = { ... }</code>
       */
      com.google.protobuf.UInt32Value getOverprovisioningFactor();
      /**
       * <pre>
       * Priority levels and localities are considered overprovisioned with this
       * factor (in percentage). This means that we don't consider a priority
       * level or locality unhealthy until the percentage of healthy hosts
       * multiplied by the overprovisioning factor drops below 100.
       * With the default value 140(1.4), Envoy doesn't consider a priority level
       * or a locality unhealthy until their percentage of healthy hosts drops
       * below 72%.
       * Read more at :ref:`priority levels &lt;arch_overview_load_balancing_priority_levels&gt;` and
       * :ref:`localities &lt;arch_overview_load_balancing_locality_weighted_lb&gt;`.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value overprovisioning_factor = 3 [(.validate.rules) = { ... }</code>
       */
      com.google.protobuf.UInt32ValueOrBuilder getOverprovisioningFactorOrBuilder();
    }
    /**
     * <pre>
     * Load balancing policy settings.
     * </pre>
     *
     * Protobuf type {@code envoy.api.v2.ClusterLoadAssignment.Policy}
     */
    public  static final class Policy extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:envoy.api.v2.ClusterLoadAssignment.Policy)
        PolicyOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Policy.newBuilder() to construct.
      private Policy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Policy() {
        dropOverloads_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Policy(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  dropOverloads_ = new java.util.ArrayList<envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload>();
                  mutable_bitField0_ |= 0x00000001;
                }
                dropOverloads_.add(
                    input.readMessage(envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload.parser(), extensionRegistry));
                break;
              }
              case 26: {
                com.google.protobuf.UInt32Value.Builder subBuilder = null;
                if (overprovisioningFactor_ != null) {
                  subBuilder = overprovisioningFactor_.toBuilder();
                }
                overprovisioningFactor_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(overprovisioningFactor_);
                  overprovisioningFactor_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
            dropOverloads_ = java.util.Collections.unmodifiableList(dropOverloads_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return envoy.api.v2.Eds.internal_static_envoy_api_v2_ClusterLoadAssignment_Policy_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return envoy.api.v2.Eds.internal_static_envoy_api_v2_ClusterLoadAssignment_Policy_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                envoy.api.v2.Eds.ClusterLoadAssignment.Policy.class, envoy.api.v2.Eds.ClusterLoadAssignment.Policy.Builder.class);
      }

      public interface DropOverloadOrBuilder extends
          // @@protoc_insertion_point(interface_extends:envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Identifier for the policy specifying the drop.
         * </pre>
         *
         * <code>string category = 1 [(.validate.rules) = { ... }</code>
         */
        java.lang.String getCategory();
        /**
         * <pre>
         * Identifier for the policy specifying the drop.
         * </pre>
         *
         * <code>string category = 1 [(.validate.rules) = { ... }</code>
         */
        com.google.protobuf.ByteString
            getCategoryBytes();

        /**
         * <pre>
         * Percentage of traffic that should be dropped for the category.
         * </pre>
         *
         * <code>.envoy.type.FractionalPercent drop_percentage = 2;</code>
         */
        boolean hasDropPercentage();
        /**
         * <pre>
         * Percentage of traffic that should be dropped for the category.
         * </pre>
         *
         * <code>.envoy.type.FractionalPercent drop_percentage = 2;</code>
         */
        envoy.type.PercentOuterClass.FractionalPercent getDropPercentage();
        /**
         * <pre>
         * Percentage of traffic that should be dropped for the category.
         * </pre>
         *
         * <code>.envoy.type.FractionalPercent drop_percentage = 2;</code>
         */
        envoy.type.PercentOuterClass.FractionalPercentOrBuilder getDropPercentageOrBuilder();
      }
      /**
       * Protobuf type {@code envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload}
       */
      public  static final class DropOverload extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload)
          DropOverloadOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use DropOverload.newBuilder() to construct.
        private DropOverload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private DropOverload() {
          category_ = "";
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private DropOverload(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownFieldProto3(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  java.lang.String s = input.readStringRequireUtf8();

                  category_ = s;
                  break;
                }
                case 18: {
                  envoy.type.PercentOuterClass.FractionalPercent.Builder subBuilder = null;
                  if (dropPercentage_ != null) {
                    subBuilder = dropPercentage_.toBuilder();
                  }
                  dropPercentage_ = input.readMessage(envoy.type.PercentOuterClass.FractionalPercent.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(dropPercentage_);
                    dropPercentage_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return envoy.api.v2.Eds.internal_static_envoy_api_v2_ClusterLoadAssignment_Policy_DropOverload_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return envoy.api.v2.Eds.internal_static_envoy_api_v2_ClusterLoadAssignment_Policy_DropOverload_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload.class, envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload.Builder.class);
        }

        public static final int CATEGORY_FIELD_NUMBER = 1;
        private volatile java.lang.Object category_;
        /**
         * <pre>
         * Identifier for the policy specifying the drop.
         * </pre>
         *
         * <code>string category = 1 [(.validate.rules) = { ... }</code>
         */
        public java.lang.String getCategory() {
          java.lang.Object ref = category_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            category_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Identifier for the policy specifying the drop.
         * </pre>
         *
         * <code>string category = 1 [(.validate.rules) = { ... }</code>
         */
        public com.google.protobuf.ByteString
            getCategoryBytes() {
          java.lang.Object ref = category_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            category_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int DROP_PERCENTAGE_FIELD_NUMBER = 2;
        private envoy.type.PercentOuterClass.FractionalPercent dropPercentage_;
        /**
         * <pre>
         * Percentage of traffic that should be dropped for the category.
         * </pre>
         *
         * <code>.envoy.type.FractionalPercent drop_percentage = 2;</code>
         */
        public boolean hasDropPercentage() {
          return dropPercentage_ != null;
        }
        /**
         * <pre>
         * Percentage of traffic that should be dropped for the category.
         * </pre>
         *
         * <code>.envoy.type.FractionalPercent drop_percentage = 2;</code>
         */
        public envoy.type.PercentOuterClass.FractionalPercent getDropPercentage() {
          return dropPercentage_ == null ? envoy.type.PercentOuterClass.FractionalPercent.getDefaultInstance() : dropPercentage_;
        }
        /**
         * <pre>
         * Percentage of traffic that should be dropped for the category.
         * </pre>
         *
         * <code>.envoy.type.FractionalPercent drop_percentage = 2;</code>
         */
        public envoy.type.PercentOuterClass.FractionalPercentOrBuilder getDropPercentageOrBuilder() {
          return getDropPercentage();
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (!getCategoryBytes().isEmpty()) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, category_);
          }
          if (dropPercentage_ != null) {
            output.writeMessage(2, getDropPercentage());
          }
          unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (!getCategoryBytes().isEmpty()) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, category_);
          }
          if (dropPercentage_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(2, getDropPercentage());
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload)) {
            return super.equals(obj);
          }
          envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload other = (envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload) obj;

          boolean result = true;
          result = result && getCategory()
              .equals(other.getCategory());
          result = result && (hasDropPercentage() == other.hasDropPercentage());
          if (hasDropPercentage()) {
            result = result && getDropPercentage()
                .equals(other.getDropPercentage());
          }
          result = result && unknownFields.equals(other.unknownFields);
          return result;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + CATEGORY_FIELD_NUMBER;
          hash = (53 * hash) + getCategory().hashCode();
          if (hasDropPercentage()) {
            hash = (37 * hash) + DROP_PERCENTAGE_FIELD_NUMBER;
            hash = (53 * hash) + getDropPercentage().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload)
            envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverloadOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return envoy.api.v2.Eds.internal_static_envoy_api_v2_ClusterLoadAssignment_Policy_DropOverload_descriptor;
          }

          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return envoy.api.v2.Eds.internal_static_envoy_api_v2_ClusterLoadAssignment_Policy_DropOverload_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload.class, envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload.Builder.class);
          }

          // Construct using envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          public Builder clear() {
            super.clear();
            category_ = "";

            if (dropPercentageBuilder_ == null) {
              dropPercentage_ = null;
            } else {
              dropPercentage_ = null;
              dropPercentageBuilder_ = null;
            }
            return this;
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return envoy.api.v2.Eds.internal_static_envoy_api_v2_ClusterLoadAssignment_Policy_DropOverload_descriptor;
          }

          public envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload getDefaultInstanceForType() {
            return envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload.getDefaultInstance();
          }

          public envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload build() {
            envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload buildPartial() {
            envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload result = new envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload(this);
            result.category_ = category_;
            if (dropPercentageBuilder_ == null) {
              result.dropPercentage_ = dropPercentage_;
            } else {
              result.dropPercentage_ = dropPercentageBuilder_.build();
            }
            onBuilt();
            return result;
          }

          public Builder clone() {
            return (Builder) super.clone();
          }
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.setField(field, value);
          }
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return (Builder) super.clearField(field);
          }
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return (Builder) super.clearOneof(oneof);
          }
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return (Builder) super.setRepeatedField(field, index, value);
          }
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.addRepeatedField(field, value);
          }
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload) {
              return mergeFrom((envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload other) {
            if (other == envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload.getDefaultInstance()) return this;
            if (!other.getCategory().isEmpty()) {
              category_ = other.category_;
              onChanged();
            }
            if (other.hasDropPercentage()) {
              mergeDropPercentage(other.getDropPercentage());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }

          private java.lang.Object category_ = "";
          /**
           * <pre>
           * Identifier for the policy specifying the drop.
           * </pre>
           *
           * <code>string category = 1 [(.validate.rules) = { ... }</code>
           */
          public java.lang.String getCategory() {
            java.lang.Object ref = category_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              category_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Identifier for the policy specifying the drop.
           * </pre>
           *
           * <code>string category = 1 [(.validate.rules) = { ... }</code>
           */
          public com.google.protobuf.ByteString
              getCategoryBytes() {
            java.lang.Object ref = category_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              category_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Identifier for the policy specifying the drop.
           * </pre>
           *
           * <code>string category = 1 [(.validate.rules) = { ... }</code>
           */
          public Builder setCategory(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            category_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Identifier for the policy specifying the drop.
           * </pre>
           *
           * <code>string category = 1 [(.validate.rules) = { ... }</code>
           */
          public Builder clearCategory() {
            
            category_ = getDefaultInstance().getCategory();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Identifier for the policy specifying the drop.
           * </pre>
           *
           * <code>string category = 1 [(.validate.rules) = { ... }</code>
           */
          public Builder setCategoryBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            category_ = value;
            onChanged();
            return this;
          }

          private envoy.type.PercentOuterClass.FractionalPercent dropPercentage_ = null;
          private com.google.protobuf.SingleFieldBuilderV3<
              envoy.type.PercentOuterClass.FractionalPercent, envoy.type.PercentOuterClass.FractionalPercent.Builder, envoy.type.PercentOuterClass.FractionalPercentOrBuilder> dropPercentageBuilder_;
          /**
           * <pre>
           * Percentage of traffic that should be dropped for the category.
           * </pre>
           *
           * <code>.envoy.type.FractionalPercent drop_percentage = 2;</code>
           */
          public boolean hasDropPercentage() {
            return dropPercentageBuilder_ != null || dropPercentage_ != null;
          }
          /**
           * <pre>
           * Percentage of traffic that should be dropped for the category.
           * </pre>
           *
           * <code>.envoy.type.FractionalPercent drop_percentage = 2;</code>
           */
          public envoy.type.PercentOuterClass.FractionalPercent getDropPercentage() {
            if (dropPercentageBuilder_ == null) {
              return dropPercentage_ == null ? envoy.type.PercentOuterClass.FractionalPercent.getDefaultInstance() : dropPercentage_;
            } else {
              return dropPercentageBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Percentage of traffic that should be dropped for the category.
           * </pre>
           *
           * <code>.envoy.type.FractionalPercent drop_percentage = 2;</code>
           */
          public Builder setDropPercentage(envoy.type.PercentOuterClass.FractionalPercent value) {
            if (dropPercentageBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              dropPercentage_ = value;
              onChanged();
            } else {
              dropPercentageBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <pre>
           * Percentage of traffic that should be dropped for the category.
           * </pre>
           *
           * <code>.envoy.type.FractionalPercent drop_percentage = 2;</code>
           */
          public Builder setDropPercentage(
              envoy.type.PercentOuterClass.FractionalPercent.Builder builderForValue) {
            if (dropPercentageBuilder_ == null) {
              dropPercentage_ = builderForValue.build();
              onChanged();
            } else {
              dropPercentageBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <pre>
           * Percentage of traffic that should be dropped for the category.
           * </pre>
           *
           * <code>.envoy.type.FractionalPercent drop_percentage = 2;</code>
           */
          public Builder mergeDropPercentage(envoy.type.PercentOuterClass.FractionalPercent value) {
            if (dropPercentageBuilder_ == null) {
              if (dropPercentage_ != null) {
                dropPercentage_ =
                  envoy.type.PercentOuterClass.FractionalPercent.newBuilder(dropPercentage_).mergeFrom(value).buildPartial();
              } else {
                dropPercentage_ = value;
              }
              onChanged();
            } else {
              dropPercentageBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <pre>
           * Percentage of traffic that should be dropped for the category.
           * </pre>
           *
           * <code>.envoy.type.FractionalPercent drop_percentage = 2;</code>
           */
          public Builder clearDropPercentage() {
            if (dropPercentageBuilder_ == null) {
              dropPercentage_ = null;
              onChanged();
            } else {
              dropPercentage_ = null;
              dropPercentageBuilder_ = null;
            }

            return this;
          }
          /**
           * <pre>
           * Percentage of traffic that should be dropped for the category.
           * </pre>
           *
           * <code>.envoy.type.FractionalPercent drop_percentage = 2;</code>
           */
          public envoy.type.PercentOuterClass.FractionalPercent.Builder getDropPercentageBuilder() {
            
            onChanged();
            return getDropPercentageFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Percentage of traffic that should be dropped for the category.
           * </pre>
           *
           * <code>.envoy.type.FractionalPercent drop_percentage = 2;</code>
           */
          public envoy.type.PercentOuterClass.FractionalPercentOrBuilder getDropPercentageOrBuilder() {
            if (dropPercentageBuilder_ != null) {
              return dropPercentageBuilder_.getMessageOrBuilder();
            } else {
              return dropPercentage_ == null ?
                  envoy.type.PercentOuterClass.FractionalPercent.getDefaultInstance() : dropPercentage_;
            }
          }
          /**
           * <pre>
           * Percentage of traffic that should be dropped for the category.
           * </pre>
           *
           * <code>.envoy.type.FractionalPercent drop_percentage = 2;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              envoy.type.PercentOuterClass.FractionalPercent, envoy.type.PercentOuterClass.FractionalPercent.Builder, envoy.type.PercentOuterClass.FractionalPercentOrBuilder> 
              getDropPercentageFieldBuilder() {
            if (dropPercentageBuilder_ == null) {
              dropPercentageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  envoy.type.PercentOuterClass.FractionalPercent, envoy.type.PercentOuterClass.FractionalPercent.Builder, envoy.type.PercentOuterClass.FractionalPercentOrBuilder>(
                      getDropPercentage(),
                      getParentForChildren(),
                      isClean());
              dropPercentage_ = null;
            }
            return dropPercentageBuilder_;
          }
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFieldsProto3(unknownFields);
          }

          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload)
        }

        // @@protoc_insertion_point(class_scope:envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload)
        private static final envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload();
        }

        public static envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<DropOverload>
            PARSER = new com.google.protobuf.AbstractParser<DropOverload>() {
          public DropOverload parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new DropOverload(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<DropOverload> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<DropOverload> getParserForType() {
          return PARSER;
        }

        public envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      private int bitField0_;
      public static final int DROP_OVERLOADS_FIELD_NUMBER = 2;
      private java.util.List<envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload> dropOverloads_;
      /**
       * <pre>
       * Action to trim the overall incoming traffic to protect the upstream
       * hosts. This action allows protection in case the hosts are unable to
       * recover from an outage, or unable to autoscale or unable to handle
       * incoming traffic volume for any reason.
       * At the client each category is applied one after the other to generate
       * the 'actual' drop percentage on all outgoing traffic. For example:
       * .. code-block:: json
       *  { "drop_overloads": [
       *      { "category": "throttle", "drop_percentage": 60 }
       *      { "category": "lb", "drop_percentage": 50 }
       *  ]}
       * The actual drop percentages applied to the traffic at the clients will be
       *    "throttle"_drop = 60%
       *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
       *    actual_outgoing_load = 20% // remaining after applying all categories.
       * </pre>
       *
       * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
       */
      public java.util.List<envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload> getDropOverloadsList() {
        return dropOverloads_;
      }
      /**
       * <pre>
       * Action to trim the overall incoming traffic to protect the upstream
       * hosts. This action allows protection in case the hosts are unable to
       * recover from an outage, or unable to autoscale or unable to handle
       * incoming traffic volume for any reason.
       * At the client each category is applied one after the other to generate
       * the 'actual' drop percentage on all outgoing traffic. For example:
       * .. code-block:: json
       *  { "drop_overloads": [
       *      { "category": "throttle", "drop_percentage": 60 }
       *      { "category": "lb", "drop_percentage": 50 }
       *  ]}
       * The actual drop percentages applied to the traffic at the clients will be
       *    "throttle"_drop = 60%
       *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
       *    actual_outgoing_load = 20% // remaining after applying all categories.
       * </pre>
       *
       * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
       */
      public java.util.List<? extends envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverloadOrBuilder> 
          getDropOverloadsOrBuilderList() {
        return dropOverloads_;
      }
      /**
       * <pre>
       * Action to trim the overall incoming traffic to protect the upstream
       * hosts. This action allows protection in case the hosts are unable to
       * recover from an outage, or unable to autoscale or unable to handle
       * incoming traffic volume for any reason.
       * At the client each category is applied one after the other to generate
       * the 'actual' drop percentage on all outgoing traffic. For example:
       * .. code-block:: json
       *  { "drop_overloads": [
       *      { "category": "throttle", "drop_percentage": 60 }
       *      { "category": "lb", "drop_percentage": 50 }
       *  ]}
       * The actual drop percentages applied to the traffic at the clients will be
       *    "throttle"_drop = 60%
       *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
       *    actual_outgoing_load = 20% // remaining after applying all categories.
       * </pre>
       *
       * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
       */
      public int getDropOverloadsCount() {
        return dropOverloads_.size();
      }
      /**
       * <pre>
       * Action to trim the overall incoming traffic to protect the upstream
       * hosts. This action allows protection in case the hosts are unable to
       * recover from an outage, or unable to autoscale or unable to handle
       * incoming traffic volume for any reason.
       * At the client each category is applied one after the other to generate
       * the 'actual' drop percentage on all outgoing traffic. For example:
       * .. code-block:: json
       *  { "drop_overloads": [
       *      { "category": "throttle", "drop_percentage": 60 }
       *      { "category": "lb", "drop_percentage": 50 }
       *  ]}
       * The actual drop percentages applied to the traffic at the clients will be
       *    "throttle"_drop = 60%
       *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
       *    actual_outgoing_load = 20% // remaining after applying all categories.
       * </pre>
       *
       * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
       */
      public envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload getDropOverloads(int index) {
        return dropOverloads_.get(index);
      }
      /**
       * <pre>
       * Action to trim the overall incoming traffic to protect the upstream
       * hosts. This action allows protection in case the hosts are unable to
       * recover from an outage, or unable to autoscale or unable to handle
       * incoming traffic volume for any reason.
       * At the client each category is applied one after the other to generate
       * the 'actual' drop percentage on all outgoing traffic. For example:
       * .. code-block:: json
       *  { "drop_overloads": [
       *      { "category": "throttle", "drop_percentage": 60 }
       *      { "category": "lb", "drop_percentage": 50 }
       *  ]}
       * The actual drop percentages applied to the traffic at the clients will be
       *    "throttle"_drop = 60%
       *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
       *    actual_outgoing_load = 20% // remaining after applying all categories.
       * </pre>
       *
       * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
       */
      public envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverloadOrBuilder getDropOverloadsOrBuilder(
          int index) {
        return dropOverloads_.get(index);
      }

      public static final int OVERPROVISIONING_FACTOR_FIELD_NUMBER = 3;
      private com.google.protobuf.UInt32Value overprovisioningFactor_;
      /**
       * <pre>
       * Priority levels and localities are considered overprovisioned with this
       * factor (in percentage). This means that we don't consider a priority
       * level or locality unhealthy until the percentage of healthy hosts
       * multiplied by the overprovisioning factor drops below 100.
       * With the default value 140(1.4), Envoy doesn't consider a priority level
       * or a locality unhealthy until their percentage of healthy hosts drops
       * below 72%.
       * Read more at :ref:`priority levels &lt;arch_overview_load_balancing_priority_levels&gt;` and
       * :ref:`localities &lt;arch_overview_load_balancing_locality_weighted_lb&gt;`.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value overprovisioning_factor = 3 [(.validate.rules) = { ... }</code>
       */
      public boolean hasOverprovisioningFactor() {
        return overprovisioningFactor_ != null;
      }
      /**
       * <pre>
       * Priority levels and localities are considered overprovisioned with this
       * factor (in percentage). This means that we don't consider a priority
       * level or locality unhealthy until the percentage of healthy hosts
       * multiplied by the overprovisioning factor drops below 100.
       * With the default value 140(1.4), Envoy doesn't consider a priority level
       * or a locality unhealthy until their percentage of healthy hosts drops
       * below 72%.
       * Read more at :ref:`priority levels &lt;arch_overview_load_balancing_priority_levels&gt;` and
       * :ref:`localities &lt;arch_overview_load_balancing_locality_weighted_lb&gt;`.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value overprovisioning_factor = 3 [(.validate.rules) = { ... }</code>
       */
      public com.google.protobuf.UInt32Value getOverprovisioningFactor() {
        return overprovisioningFactor_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : overprovisioningFactor_;
      }
      /**
       * <pre>
       * Priority levels and localities are considered overprovisioned with this
       * factor (in percentage). This means that we don't consider a priority
       * level or locality unhealthy until the percentage of healthy hosts
       * multiplied by the overprovisioning factor drops below 100.
       * With the default value 140(1.4), Envoy doesn't consider a priority level
       * or a locality unhealthy until their percentage of healthy hosts drops
       * below 72%.
       * Read more at :ref:`priority levels &lt;arch_overview_load_balancing_priority_levels&gt;` and
       * :ref:`localities &lt;arch_overview_load_balancing_locality_weighted_lb&gt;`.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value overprovisioning_factor = 3 [(.validate.rules) = { ... }</code>
       */
      public com.google.protobuf.UInt32ValueOrBuilder getOverprovisioningFactorOrBuilder() {
        return getOverprovisioningFactor();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < dropOverloads_.size(); i++) {
          output.writeMessage(2, dropOverloads_.get(i));
        }
        if (overprovisioningFactor_ != null) {
          output.writeMessage(3, getOverprovisioningFactor());
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < dropOverloads_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, dropOverloads_.get(i));
        }
        if (overprovisioningFactor_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getOverprovisioningFactor());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof envoy.api.v2.Eds.ClusterLoadAssignment.Policy)) {
          return super.equals(obj);
        }
        envoy.api.v2.Eds.ClusterLoadAssignment.Policy other = (envoy.api.v2.Eds.ClusterLoadAssignment.Policy) obj;

        boolean result = true;
        result = result && getDropOverloadsList()
            .equals(other.getDropOverloadsList());
        result = result && (hasOverprovisioningFactor() == other.hasOverprovisioningFactor());
        if (hasOverprovisioningFactor()) {
          result = result && getOverprovisioningFactor()
              .equals(other.getOverprovisioningFactor());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getDropOverloadsCount() > 0) {
          hash = (37 * hash) + DROP_OVERLOADS_FIELD_NUMBER;
          hash = (53 * hash) + getDropOverloadsList().hashCode();
        }
        if (hasOverprovisioningFactor()) {
          hash = (37 * hash) + OVERPROVISIONING_FACTOR_FIELD_NUMBER;
          hash = (53 * hash) + getOverprovisioningFactor().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static envoy.api.v2.Eds.ClusterLoadAssignment.Policy parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static envoy.api.v2.Eds.ClusterLoadAssignment.Policy parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static envoy.api.v2.Eds.ClusterLoadAssignment.Policy parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static envoy.api.v2.Eds.ClusterLoadAssignment.Policy parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static envoy.api.v2.Eds.ClusterLoadAssignment.Policy parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static envoy.api.v2.Eds.ClusterLoadAssignment.Policy parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static envoy.api.v2.Eds.ClusterLoadAssignment.Policy parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static envoy.api.v2.Eds.ClusterLoadAssignment.Policy parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static envoy.api.v2.Eds.ClusterLoadAssignment.Policy parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static envoy.api.v2.Eds.ClusterLoadAssignment.Policy parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static envoy.api.v2.Eds.ClusterLoadAssignment.Policy parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static envoy.api.v2.Eds.ClusterLoadAssignment.Policy parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(envoy.api.v2.Eds.ClusterLoadAssignment.Policy prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Load balancing policy settings.
       * </pre>
       *
       * Protobuf type {@code envoy.api.v2.ClusterLoadAssignment.Policy}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:envoy.api.v2.ClusterLoadAssignment.Policy)
          envoy.api.v2.Eds.ClusterLoadAssignment.PolicyOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return envoy.api.v2.Eds.internal_static_envoy_api_v2_ClusterLoadAssignment_Policy_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return envoy.api.v2.Eds.internal_static_envoy_api_v2_ClusterLoadAssignment_Policy_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  envoy.api.v2.Eds.ClusterLoadAssignment.Policy.class, envoy.api.v2.Eds.ClusterLoadAssignment.Policy.Builder.class);
        }

        // Construct using envoy.api.v2.Eds.ClusterLoadAssignment.Policy.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getDropOverloadsFieldBuilder();
          }
        }
        public Builder clear() {
          super.clear();
          if (dropOverloadsBuilder_ == null) {
            dropOverloads_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            dropOverloadsBuilder_.clear();
          }
          if (overprovisioningFactorBuilder_ == null) {
            overprovisioningFactor_ = null;
          } else {
            overprovisioningFactor_ = null;
            overprovisioningFactorBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return envoy.api.v2.Eds.internal_static_envoy_api_v2_ClusterLoadAssignment_Policy_descriptor;
        }

        public envoy.api.v2.Eds.ClusterLoadAssignment.Policy getDefaultInstanceForType() {
          return envoy.api.v2.Eds.ClusterLoadAssignment.Policy.getDefaultInstance();
        }

        public envoy.api.v2.Eds.ClusterLoadAssignment.Policy build() {
          envoy.api.v2.Eds.ClusterLoadAssignment.Policy result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public envoy.api.v2.Eds.ClusterLoadAssignment.Policy buildPartial() {
          envoy.api.v2.Eds.ClusterLoadAssignment.Policy result = new envoy.api.v2.Eds.ClusterLoadAssignment.Policy(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (dropOverloadsBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              dropOverloads_ = java.util.Collections.unmodifiableList(dropOverloads_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.dropOverloads_ = dropOverloads_;
          } else {
            result.dropOverloads_ = dropOverloadsBuilder_.build();
          }
          if (overprovisioningFactorBuilder_ == null) {
            result.overprovisioningFactor_ = overprovisioningFactor_;
          } else {
            result.overprovisioningFactor_ = overprovisioningFactorBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof envoy.api.v2.Eds.ClusterLoadAssignment.Policy) {
            return mergeFrom((envoy.api.v2.Eds.ClusterLoadAssignment.Policy)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(envoy.api.v2.Eds.ClusterLoadAssignment.Policy other) {
          if (other == envoy.api.v2.Eds.ClusterLoadAssignment.Policy.getDefaultInstance()) return this;
          if (dropOverloadsBuilder_ == null) {
            if (!other.dropOverloads_.isEmpty()) {
              if (dropOverloads_.isEmpty()) {
                dropOverloads_ = other.dropOverloads_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureDropOverloadsIsMutable();
                dropOverloads_.addAll(other.dropOverloads_);
              }
              onChanged();
            }
          } else {
            if (!other.dropOverloads_.isEmpty()) {
              if (dropOverloadsBuilder_.isEmpty()) {
                dropOverloadsBuilder_.dispose();
                dropOverloadsBuilder_ = null;
                dropOverloads_ = other.dropOverloads_;
                bitField0_ = (bitField0_ & ~0x00000001);
                dropOverloadsBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getDropOverloadsFieldBuilder() : null;
              } else {
                dropOverloadsBuilder_.addAllMessages(other.dropOverloads_);
              }
            }
          }
          if (other.hasOverprovisioningFactor()) {
            mergeOverprovisioningFactor(other.getOverprovisioningFactor());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          envoy.api.v2.Eds.ClusterLoadAssignment.Policy parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (envoy.api.v2.Eds.ClusterLoadAssignment.Policy) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.util.List<envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload> dropOverloads_ =
          java.util.Collections.emptyList();
        private void ensureDropOverloadsIsMutable() {
          if (!((bitField0_ & 0x00000001) == 0x00000001)) {
            dropOverloads_ = new java.util.ArrayList<envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload>(dropOverloads_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload, envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload.Builder, envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverloadOrBuilder> dropOverloadsBuilder_;

        /**
         * <pre>
         * Action to trim the overall incoming traffic to protect the upstream
         * hosts. This action allows protection in case the hosts are unable to
         * recover from an outage, or unable to autoscale or unable to handle
         * incoming traffic volume for any reason.
         * At the client each category is applied one after the other to generate
         * the 'actual' drop percentage on all outgoing traffic. For example:
         * .. code-block:: json
         *  { "drop_overloads": [
         *      { "category": "throttle", "drop_percentage": 60 }
         *      { "category": "lb", "drop_percentage": 50 }
         *  ]}
         * The actual drop percentages applied to the traffic at the clients will be
         *    "throttle"_drop = 60%
         *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
         *    actual_outgoing_load = 20% // remaining after applying all categories.
         * </pre>
         *
         * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
         */
        public java.util.List<envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload> getDropOverloadsList() {
          if (dropOverloadsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(dropOverloads_);
          } else {
            return dropOverloadsBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * Action to trim the overall incoming traffic to protect the upstream
         * hosts. This action allows protection in case the hosts are unable to
         * recover from an outage, or unable to autoscale or unable to handle
         * incoming traffic volume for any reason.
         * At the client each category is applied one after the other to generate
         * the 'actual' drop percentage on all outgoing traffic. For example:
         * .. code-block:: json
         *  { "drop_overloads": [
         *      { "category": "throttle", "drop_percentage": 60 }
         *      { "category": "lb", "drop_percentage": 50 }
         *  ]}
         * The actual drop percentages applied to the traffic at the clients will be
         *    "throttle"_drop = 60%
         *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
         *    actual_outgoing_load = 20% // remaining after applying all categories.
         * </pre>
         *
         * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
         */
        public int getDropOverloadsCount() {
          if (dropOverloadsBuilder_ == null) {
            return dropOverloads_.size();
          } else {
            return dropOverloadsBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * Action to trim the overall incoming traffic to protect the upstream
         * hosts. This action allows protection in case the hosts are unable to
         * recover from an outage, or unable to autoscale or unable to handle
         * incoming traffic volume for any reason.
         * At the client each category is applied one after the other to generate
         * the 'actual' drop percentage on all outgoing traffic. For example:
         * .. code-block:: json
         *  { "drop_overloads": [
         *      { "category": "throttle", "drop_percentage": 60 }
         *      { "category": "lb", "drop_percentage": 50 }
         *  ]}
         * The actual drop percentages applied to the traffic at the clients will be
         *    "throttle"_drop = 60%
         *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
         *    actual_outgoing_load = 20% // remaining after applying all categories.
         * </pre>
         *
         * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
         */
        public envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload getDropOverloads(int index) {
          if (dropOverloadsBuilder_ == null) {
            return dropOverloads_.get(index);
          } else {
            return dropOverloadsBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * Action to trim the overall incoming traffic to protect the upstream
         * hosts. This action allows protection in case the hosts are unable to
         * recover from an outage, or unable to autoscale or unable to handle
         * incoming traffic volume for any reason.
         * At the client each category is applied one after the other to generate
         * the 'actual' drop percentage on all outgoing traffic. For example:
         * .. code-block:: json
         *  { "drop_overloads": [
         *      { "category": "throttle", "drop_percentage": 60 }
         *      { "category": "lb", "drop_percentage": 50 }
         *  ]}
         * The actual drop percentages applied to the traffic at the clients will be
         *    "throttle"_drop = 60%
         *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
         *    actual_outgoing_load = 20% // remaining after applying all categories.
         * </pre>
         *
         * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
         */
        public Builder setDropOverloads(
            int index, envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload value) {
          if (dropOverloadsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDropOverloadsIsMutable();
            dropOverloads_.set(index, value);
            onChanged();
          } else {
            dropOverloadsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Action to trim the overall incoming traffic to protect the upstream
         * hosts. This action allows protection in case the hosts are unable to
         * recover from an outage, or unable to autoscale or unable to handle
         * incoming traffic volume for any reason.
         * At the client each category is applied one after the other to generate
         * the 'actual' drop percentage on all outgoing traffic. For example:
         * .. code-block:: json
         *  { "drop_overloads": [
         *      { "category": "throttle", "drop_percentage": 60 }
         *      { "category": "lb", "drop_percentage": 50 }
         *  ]}
         * The actual drop percentages applied to the traffic at the clients will be
         *    "throttle"_drop = 60%
         *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
         *    actual_outgoing_load = 20% // remaining after applying all categories.
         * </pre>
         *
         * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
         */
        public Builder setDropOverloads(
            int index, envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload.Builder builderForValue) {
          if (dropOverloadsBuilder_ == null) {
            ensureDropOverloadsIsMutable();
            dropOverloads_.set(index, builderForValue.build());
            onChanged();
          } else {
            dropOverloadsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Action to trim the overall incoming traffic to protect the upstream
         * hosts. This action allows protection in case the hosts are unable to
         * recover from an outage, or unable to autoscale or unable to handle
         * incoming traffic volume for any reason.
         * At the client each category is applied one after the other to generate
         * the 'actual' drop percentage on all outgoing traffic. For example:
         * .. code-block:: json
         *  { "drop_overloads": [
         *      { "category": "throttle", "drop_percentage": 60 }
         *      { "category": "lb", "drop_percentage": 50 }
         *  ]}
         * The actual drop percentages applied to the traffic at the clients will be
         *    "throttle"_drop = 60%
         *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
         *    actual_outgoing_load = 20% // remaining after applying all categories.
         * </pre>
         *
         * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
         */
        public Builder addDropOverloads(envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload value) {
          if (dropOverloadsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDropOverloadsIsMutable();
            dropOverloads_.add(value);
            onChanged();
          } else {
            dropOverloadsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * Action to trim the overall incoming traffic to protect the upstream
         * hosts. This action allows protection in case the hosts are unable to
         * recover from an outage, or unable to autoscale or unable to handle
         * incoming traffic volume for any reason.
         * At the client each category is applied one after the other to generate
         * the 'actual' drop percentage on all outgoing traffic. For example:
         * .. code-block:: json
         *  { "drop_overloads": [
         *      { "category": "throttle", "drop_percentage": 60 }
         *      { "category": "lb", "drop_percentage": 50 }
         *  ]}
         * The actual drop percentages applied to the traffic at the clients will be
         *    "throttle"_drop = 60%
         *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
         *    actual_outgoing_load = 20% // remaining after applying all categories.
         * </pre>
         *
         * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
         */
        public Builder addDropOverloads(
            int index, envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload value) {
          if (dropOverloadsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDropOverloadsIsMutable();
            dropOverloads_.add(index, value);
            onChanged();
          } else {
            dropOverloadsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Action to trim the overall incoming traffic to protect the upstream
         * hosts. This action allows protection in case the hosts are unable to
         * recover from an outage, or unable to autoscale or unable to handle
         * incoming traffic volume for any reason.
         * At the client each category is applied one after the other to generate
         * the 'actual' drop percentage on all outgoing traffic. For example:
         * .. code-block:: json
         *  { "drop_overloads": [
         *      { "category": "throttle", "drop_percentage": 60 }
         *      { "category": "lb", "drop_percentage": 50 }
         *  ]}
         * The actual drop percentages applied to the traffic at the clients will be
         *    "throttle"_drop = 60%
         *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
         *    actual_outgoing_load = 20% // remaining after applying all categories.
         * </pre>
         *
         * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
         */
        public Builder addDropOverloads(
            envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload.Builder builderForValue) {
          if (dropOverloadsBuilder_ == null) {
            ensureDropOverloadsIsMutable();
            dropOverloads_.add(builderForValue.build());
            onChanged();
          } else {
            dropOverloadsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Action to trim the overall incoming traffic to protect the upstream
         * hosts. This action allows protection in case the hosts are unable to
         * recover from an outage, or unable to autoscale or unable to handle
         * incoming traffic volume for any reason.
         * At the client each category is applied one after the other to generate
         * the 'actual' drop percentage on all outgoing traffic. For example:
         * .. code-block:: json
         *  { "drop_overloads": [
         *      { "category": "throttle", "drop_percentage": 60 }
         *      { "category": "lb", "drop_percentage": 50 }
         *  ]}
         * The actual drop percentages applied to the traffic at the clients will be
         *    "throttle"_drop = 60%
         *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
         *    actual_outgoing_load = 20% // remaining after applying all categories.
         * </pre>
         *
         * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
         */
        public Builder addDropOverloads(
            int index, envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload.Builder builderForValue) {
          if (dropOverloadsBuilder_ == null) {
            ensureDropOverloadsIsMutable();
            dropOverloads_.add(index, builderForValue.build());
            onChanged();
          } else {
            dropOverloadsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Action to trim the overall incoming traffic to protect the upstream
         * hosts. This action allows protection in case the hosts are unable to
         * recover from an outage, or unable to autoscale or unable to handle
         * incoming traffic volume for any reason.
         * At the client each category is applied one after the other to generate
         * the 'actual' drop percentage on all outgoing traffic. For example:
         * .. code-block:: json
         *  { "drop_overloads": [
         *      { "category": "throttle", "drop_percentage": 60 }
         *      { "category": "lb", "drop_percentage": 50 }
         *  ]}
         * The actual drop percentages applied to the traffic at the clients will be
         *    "throttle"_drop = 60%
         *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
         *    actual_outgoing_load = 20% // remaining after applying all categories.
         * </pre>
         *
         * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
         */
        public Builder addAllDropOverloads(
            java.lang.Iterable<? extends envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload> values) {
          if (dropOverloadsBuilder_ == null) {
            ensureDropOverloadsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, dropOverloads_);
            onChanged();
          } else {
            dropOverloadsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * Action to trim the overall incoming traffic to protect the upstream
         * hosts. This action allows protection in case the hosts are unable to
         * recover from an outage, or unable to autoscale or unable to handle
         * incoming traffic volume for any reason.
         * At the client each category is applied one after the other to generate
         * the 'actual' drop percentage on all outgoing traffic. For example:
         * .. code-block:: json
         *  { "drop_overloads": [
         *      { "category": "throttle", "drop_percentage": 60 }
         *      { "category": "lb", "drop_percentage": 50 }
         *  ]}
         * The actual drop percentages applied to the traffic at the clients will be
         *    "throttle"_drop = 60%
         *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
         *    actual_outgoing_load = 20% // remaining after applying all categories.
         * </pre>
         *
         * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
         */
        public Builder clearDropOverloads() {
          if (dropOverloadsBuilder_ == null) {
            dropOverloads_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            dropOverloadsBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * Action to trim the overall incoming traffic to protect the upstream
         * hosts. This action allows protection in case the hosts are unable to
         * recover from an outage, or unable to autoscale or unable to handle
         * incoming traffic volume for any reason.
         * At the client each category is applied one after the other to generate
         * the 'actual' drop percentage on all outgoing traffic. For example:
         * .. code-block:: json
         *  { "drop_overloads": [
         *      { "category": "throttle", "drop_percentage": 60 }
         *      { "category": "lb", "drop_percentage": 50 }
         *  ]}
         * The actual drop percentages applied to the traffic at the clients will be
         *    "throttle"_drop = 60%
         *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
         *    actual_outgoing_load = 20% // remaining after applying all categories.
         * </pre>
         *
         * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
         */
        public Builder removeDropOverloads(int index) {
          if (dropOverloadsBuilder_ == null) {
            ensureDropOverloadsIsMutable();
            dropOverloads_.remove(index);
            onChanged();
          } else {
            dropOverloadsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * Action to trim the overall incoming traffic to protect the upstream
         * hosts. This action allows protection in case the hosts are unable to
         * recover from an outage, or unable to autoscale or unable to handle
         * incoming traffic volume for any reason.
         * At the client each category is applied one after the other to generate
         * the 'actual' drop percentage on all outgoing traffic. For example:
         * .. code-block:: json
         *  { "drop_overloads": [
         *      { "category": "throttle", "drop_percentage": 60 }
         *      { "category": "lb", "drop_percentage": 50 }
         *  ]}
         * The actual drop percentages applied to the traffic at the clients will be
         *    "throttle"_drop = 60%
         *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
         *    actual_outgoing_load = 20% // remaining after applying all categories.
         * </pre>
         *
         * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
         */
        public envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload.Builder getDropOverloadsBuilder(
            int index) {
          return getDropOverloadsFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * Action to trim the overall incoming traffic to protect the upstream
         * hosts. This action allows protection in case the hosts are unable to
         * recover from an outage, or unable to autoscale or unable to handle
         * incoming traffic volume for any reason.
         * At the client each category is applied one after the other to generate
         * the 'actual' drop percentage on all outgoing traffic. For example:
         * .. code-block:: json
         *  { "drop_overloads": [
         *      { "category": "throttle", "drop_percentage": 60 }
         *      { "category": "lb", "drop_percentage": 50 }
         *  ]}
         * The actual drop percentages applied to the traffic at the clients will be
         *    "throttle"_drop = 60%
         *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
         *    actual_outgoing_load = 20% // remaining after applying all categories.
         * </pre>
         *
         * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
         */
        public envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverloadOrBuilder getDropOverloadsOrBuilder(
            int index) {
          if (dropOverloadsBuilder_ == null) {
            return dropOverloads_.get(index);  } else {
            return dropOverloadsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * Action to trim the overall incoming traffic to protect the upstream
         * hosts. This action allows protection in case the hosts are unable to
         * recover from an outage, or unable to autoscale or unable to handle
         * incoming traffic volume for any reason.
         * At the client each category is applied one after the other to generate
         * the 'actual' drop percentage on all outgoing traffic. For example:
         * .. code-block:: json
         *  { "drop_overloads": [
         *      { "category": "throttle", "drop_percentage": 60 }
         *      { "category": "lb", "drop_percentage": 50 }
         *  ]}
         * The actual drop percentages applied to the traffic at the clients will be
         *    "throttle"_drop = 60%
         *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
         *    actual_outgoing_load = 20% // remaining after applying all categories.
         * </pre>
         *
         * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
         */
        public java.util.List<? extends envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverloadOrBuilder> 
             getDropOverloadsOrBuilderList() {
          if (dropOverloadsBuilder_ != null) {
            return dropOverloadsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(dropOverloads_);
          }
        }
        /**
         * <pre>
         * Action to trim the overall incoming traffic to protect the upstream
         * hosts. This action allows protection in case the hosts are unable to
         * recover from an outage, or unable to autoscale or unable to handle
         * incoming traffic volume for any reason.
         * At the client each category is applied one after the other to generate
         * the 'actual' drop percentage on all outgoing traffic. For example:
         * .. code-block:: json
         *  { "drop_overloads": [
         *      { "category": "throttle", "drop_percentage": 60 }
         *      { "category": "lb", "drop_percentage": 50 }
         *  ]}
         * The actual drop percentages applied to the traffic at the clients will be
         *    "throttle"_drop = 60%
         *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
         *    actual_outgoing_load = 20% // remaining after applying all categories.
         * </pre>
         *
         * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
         */
        public envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload.Builder addDropOverloadsBuilder() {
          return getDropOverloadsFieldBuilder().addBuilder(
              envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload.getDefaultInstance());
        }
        /**
         * <pre>
         * Action to trim the overall incoming traffic to protect the upstream
         * hosts. This action allows protection in case the hosts are unable to
         * recover from an outage, or unable to autoscale or unable to handle
         * incoming traffic volume for any reason.
         * At the client each category is applied one after the other to generate
         * the 'actual' drop percentage on all outgoing traffic. For example:
         * .. code-block:: json
         *  { "drop_overloads": [
         *      { "category": "throttle", "drop_percentage": 60 }
         *      { "category": "lb", "drop_percentage": 50 }
         *  ]}
         * The actual drop percentages applied to the traffic at the clients will be
         *    "throttle"_drop = 60%
         *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
         *    actual_outgoing_load = 20% // remaining after applying all categories.
         * </pre>
         *
         * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
         */
        public envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload.Builder addDropOverloadsBuilder(
            int index) {
          return getDropOverloadsFieldBuilder().addBuilder(
              index, envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload.getDefaultInstance());
        }
        /**
         * <pre>
         * Action to trim the overall incoming traffic to protect the upstream
         * hosts. This action allows protection in case the hosts are unable to
         * recover from an outage, or unable to autoscale or unable to handle
         * incoming traffic volume for any reason.
         * At the client each category is applied one after the other to generate
         * the 'actual' drop percentage on all outgoing traffic. For example:
         * .. code-block:: json
         *  { "drop_overloads": [
         *      { "category": "throttle", "drop_percentage": 60 }
         *      { "category": "lb", "drop_percentage": 50 }
         *  ]}
         * The actual drop percentages applied to the traffic at the clients will be
         *    "throttle"_drop = 60%
         *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
         *    actual_outgoing_load = 20% // remaining after applying all categories.
         * </pre>
         *
         * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
         */
        public java.util.List<envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload.Builder> 
             getDropOverloadsBuilderList() {
          return getDropOverloadsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload, envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload.Builder, envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverloadOrBuilder> 
            getDropOverloadsFieldBuilder() {
          if (dropOverloadsBuilder_ == null) {
            dropOverloadsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload, envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverload.Builder, envoy.api.v2.Eds.ClusterLoadAssignment.Policy.DropOverloadOrBuilder>(
                    dropOverloads_,
                    ((bitField0_ & 0x00000001) == 0x00000001),
                    getParentForChildren(),
                    isClean());
            dropOverloads_ = null;
          }
          return dropOverloadsBuilder_;
        }

        private com.google.protobuf.UInt32Value overprovisioningFactor_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> overprovisioningFactorBuilder_;
        /**
         * <pre>
         * Priority levels and localities are considered overprovisioned with this
         * factor (in percentage). This means that we don't consider a priority
         * level or locality unhealthy until the percentage of healthy hosts
         * multiplied by the overprovisioning factor drops below 100.
         * With the default value 140(1.4), Envoy doesn't consider a priority level
         * or a locality unhealthy until their percentage of healthy hosts drops
         * below 72%.
         * Read more at :ref:`priority levels &lt;arch_overview_load_balancing_priority_levels&gt;` and
         * :ref:`localities &lt;arch_overview_load_balancing_locality_weighted_lb&gt;`.
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value overprovisioning_factor = 3 [(.validate.rules) = { ... }</code>
         */
        public boolean hasOverprovisioningFactor() {
          return overprovisioningFactorBuilder_ != null || overprovisioningFactor_ != null;
        }
        /**
         * <pre>
         * Priority levels and localities are considered overprovisioned with this
         * factor (in percentage). This means that we don't consider a priority
         * level or locality unhealthy until the percentage of healthy hosts
         * multiplied by the overprovisioning factor drops below 100.
         * With the default value 140(1.4), Envoy doesn't consider a priority level
         * or a locality unhealthy until their percentage of healthy hosts drops
         * below 72%.
         * Read more at :ref:`priority levels &lt;arch_overview_load_balancing_priority_levels&gt;` and
         * :ref:`localities &lt;arch_overview_load_balancing_locality_weighted_lb&gt;`.
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value overprovisioning_factor = 3 [(.validate.rules) = { ... }</code>
         */
        public com.google.protobuf.UInt32Value getOverprovisioningFactor() {
          if (overprovisioningFactorBuilder_ == null) {
            return overprovisioningFactor_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : overprovisioningFactor_;
          } else {
            return overprovisioningFactorBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Priority levels and localities are considered overprovisioned with this
         * factor (in percentage). This means that we don't consider a priority
         * level or locality unhealthy until the percentage of healthy hosts
         * multiplied by the overprovisioning factor drops below 100.
         * With the default value 140(1.4), Envoy doesn't consider a priority level
         * or a locality unhealthy until their percentage of healthy hosts drops
         * below 72%.
         * Read more at :ref:`priority levels &lt;arch_overview_load_balancing_priority_levels&gt;` and
         * :ref:`localities &lt;arch_overview_load_balancing_locality_weighted_lb&gt;`.
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value overprovisioning_factor = 3 [(.validate.rules) = { ... }</code>
         */
        public Builder setOverprovisioningFactor(com.google.protobuf.UInt32Value value) {
          if (overprovisioningFactorBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            overprovisioningFactor_ = value;
            onChanged();
          } else {
            overprovisioningFactorBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Priority levels and localities are considered overprovisioned with this
         * factor (in percentage). This means that we don't consider a priority
         * level or locality unhealthy until the percentage of healthy hosts
         * multiplied by the overprovisioning factor drops below 100.
         * With the default value 140(1.4), Envoy doesn't consider a priority level
         * or a locality unhealthy until their percentage of healthy hosts drops
         * below 72%.
         * Read more at :ref:`priority levels &lt;arch_overview_load_balancing_priority_levels&gt;` and
         * :ref:`localities &lt;arch_overview_load_balancing_locality_weighted_lb&gt;`.
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value overprovisioning_factor = 3 [(.validate.rules) = { ... }</code>
         */
        public Builder setOverprovisioningFactor(
            com.google.protobuf.UInt32Value.Builder builderForValue) {
          if (overprovisioningFactorBuilder_ == null) {
            overprovisioningFactor_ = builderForValue.build();
            onChanged();
          } else {
            overprovisioningFactorBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Priority levels and localities are considered overprovisioned with this
         * factor (in percentage). This means that we don't consider a priority
         * level or locality unhealthy until the percentage of healthy hosts
         * multiplied by the overprovisioning factor drops below 100.
         * With the default value 140(1.4), Envoy doesn't consider a priority level
         * or a locality unhealthy until their percentage of healthy hosts drops
         * below 72%.
         * Read more at :ref:`priority levels &lt;arch_overview_load_balancing_priority_levels&gt;` and
         * :ref:`localities &lt;arch_overview_load_balancing_locality_weighted_lb&gt;`.
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value overprovisioning_factor = 3 [(.validate.rules) = { ... }</code>
         */
        public Builder mergeOverprovisioningFactor(com.google.protobuf.UInt32Value value) {
          if (overprovisioningFactorBuilder_ == null) {
            if (overprovisioningFactor_ != null) {
              overprovisioningFactor_ =
                com.google.protobuf.UInt32Value.newBuilder(overprovisioningFactor_).mergeFrom(value).buildPartial();
            } else {
              overprovisioningFactor_ = value;
            }
            onChanged();
          } else {
            overprovisioningFactorBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Priority levels and localities are considered overprovisioned with this
         * factor (in percentage). This means that we don't consider a priority
         * level or locality unhealthy until the percentage of healthy hosts
         * multiplied by the overprovisioning factor drops below 100.
         * With the default value 140(1.4), Envoy doesn't consider a priority level
         * or a locality unhealthy until their percentage of healthy hosts drops
         * below 72%.
         * Read more at :ref:`priority levels &lt;arch_overview_load_balancing_priority_levels&gt;` and
         * :ref:`localities &lt;arch_overview_load_balancing_locality_weighted_lb&gt;`.
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value overprovisioning_factor = 3 [(.validate.rules) = { ... }</code>
         */
        public Builder clearOverprovisioningFactor() {
          if (overprovisioningFactorBuilder_ == null) {
            overprovisioningFactor_ = null;
            onChanged();
          } else {
            overprovisioningFactor_ = null;
            overprovisioningFactorBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Priority levels and localities are considered overprovisioned with this
         * factor (in percentage). This means that we don't consider a priority
         * level or locality unhealthy until the percentage of healthy hosts
         * multiplied by the overprovisioning factor drops below 100.
         * With the default value 140(1.4), Envoy doesn't consider a priority level
         * or a locality unhealthy until their percentage of healthy hosts drops
         * below 72%.
         * Read more at :ref:`priority levels &lt;arch_overview_load_balancing_priority_levels&gt;` and
         * :ref:`localities &lt;arch_overview_load_balancing_locality_weighted_lb&gt;`.
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value overprovisioning_factor = 3 [(.validate.rules) = { ... }</code>
         */
        public com.google.protobuf.UInt32Value.Builder getOverprovisioningFactorBuilder() {
          
          onChanged();
          return getOverprovisioningFactorFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Priority levels and localities are considered overprovisioned with this
         * factor (in percentage). This means that we don't consider a priority
         * level or locality unhealthy until the percentage of healthy hosts
         * multiplied by the overprovisioning factor drops below 100.
         * With the default value 140(1.4), Envoy doesn't consider a priority level
         * or a locality unhealthy until their percentage of healthy hosts drops
         * below 72%.
         * Read more at :ref:`priority levels &lt;arch_overview_load_balancing_priority_levels&gt;` and
         * :ref:`localities &lt;arch_overview_load_balancing_locality_weighted_lb&gt;`.
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value overprovisioning_factor = 3 [(.validate.rules) = { ... }</code>
         */
        public com.google.protobuf.UInt32ValueOrBuilder getOverprovisioningFactorOrBuilder() {
          if (overprovisioningFactorBuilder_ != null) {
            return overprovisioningFactorBuilder_.getMessageOrBuilder();
          } else {
            return overprovisioningFactor_ == null ?
                com.google.protobuf.UInt32Value.getDefaultInstance() : overprovisioningFactor_;
          }
        }
        /**
         * <pre>
         * Priority levels and localities are considered overprovisioned with this
         * factor (in percentage). This means that we don't consider a priority
         * level or locality unhealthy until the percentage of healthy hosts
         * multiplied by the overprovisioning factor drops below 100.
         * With the default value 140(1.4), Envoy doesn't consider a priority level
         * or a locality unhealthy until their percentage of healthy hosts drops
         * below 72%.
         * Read more at :ref:`priority levels &lt;arch_overview_load_balancing_priority_levels&gt;` and
         * :ref:`localities &lt;arch_overview_load_balancing_locality_weighted_lb&gt;`.
         * </pre>
         *
         * <code>.google.protobuf.UInt32Value overprovisioning_factor = 3 [(.validate.rules) = { ... }</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
            getOverprovisioningFactorFieldBuilder() {
          if (overprovisioningFactorBuilder_ == null) {
            overprovisioningFactorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                    getOverprovisioningFactor(),
                    getParentForChildren(),
                    isClean());
            overprovisioningFactor_ = null;
          }
          return overprovisioningFactorBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:envoy.api.v2.ClusterLoadAssignment.Policy)
      }

      // @@protoc_insertion_point(class_scope:envoy.api.v2.ClusterLoadAssignment.Policy)
      private static final envoy.api.v2.Eds.ClusterLoadAssignment.Policy DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new envoy.api.v2.Eds.ClusterLoadAssignment.Policy();
      }

      public static envoy.api.v2.Eds.ClusterLoadAssignment.Policy getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Policy>
          PARSER = new com.google.protobuf.AbstractParser<Policy>() {
        public Policy parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Policy(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Policy> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Policy> getParserForType() {
        return PARSER;
      }

      public envoy.api.v2.Eds.ClusterLoadAssignment.Policy getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int CLUSTER_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object clusterName_;
    /**
     * <pre>
     * Name of the cluster. This will be the :ref:`service_name
     * &lt;envoy_api_field_Cluster.EdsClusterConfig.service_name&gt;` value if specified
     * in the cluster :ref:`EdsClusterConfig
     * &lt;envoy_api_msg_Cluster.EdsClusterConfig&gt;`.
     * </pre>
     *
     * <code>string cluster_name = 1 [(.validate.rules) = { ... }</code>
     */
    public java.lang.String getClusterName() {
      java.lang.Object ref = clusterName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clusterName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Name of the cluster. This will be the :ref:`service_name
     * &lt;envoy_api_field_Cluster.EdsClusterConfig.service_name&gt;` value if specified
     * in the cluster :ref:`EdsClusterConfig
     * &lt;envoy_api_msg_Cluster.EdsClusterConfig&gt;`.
     * </pre>
     *
     * <code>string cluster_name = 1 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.ByteString
        getClusterNameBytes() {
      java.lang.Object ref = clusterName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clusterName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ENDPOINTS_FIELD_NUMBER = 2;
    private java.util.List<envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpoints> endpoints_;
    /**
     * <pre>
     * List of endpoints to load balance to.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
     */
    public java.util.List<envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpoints> getEndpointsList() {
      return endpoints_;
    }
    /**
     * <pre>
     * List of endpoints to load balance to.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
     */
    public java.util.List<? extends envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpointsOrBuilder> 
        getEndpointsOrBuilderList() {
      return endpoints_;
    }
    /**
     * <pre>
     * List of endpoints to load balance to.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
     */
    public int getEndpointsCount() {
      return endpoints_.size();
    }
    /**
     * <pre>
     * List of endpoints to load balance to.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
     */
    public envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpoints getEndpoints(int index) {
      return endpoints_.get(index);
    }
    /**
     * <pre>
     * List of endpoints to load balance to.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
     */
    public envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpointsOrBuilder getEndpointsOrBuilder(
        int index) {
      return endpoints_.get(index);
    }

    public static final int POLICY_FIELD_NUMBER = 4;
    private envoy.api.v2.Eds.ClusterLoadAssignment.Policy policy_;
    /**
     * <pre>
     * Load balancing policy settings.
     * </pre>
     *
     * <code>.envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;</code>
     */
    public boolean hasPolicy() {
      return policy_ != null;
    }
    /**
     * <pre>
     * Load balancing policy settings.
     * </pre>
     *
     * <code>.envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;</code>
     */
    public envoy.api.v2.Eds.ClusterLoadAssignment.Policy getPolicy() {
      return policy_ == null ? envoy.api.v2.Eds.ClusterLoadAssignment.Policy.getDefaultInstance() : policy_;
    }
    /**
     * <pre>
     * Load balancing policy settings.
     * </pre>
     *
     * <code>.envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;</code>
     */
    public envoy.api.v2.Eds.ClusterLoadAssignment.PolicyOrBuilder getPolicyOrBuilder() {
      return getPolicy();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getClusterNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, clusterName_);
      }
      for (int i = 0; i < endpoints_.size(); i++) {
        output.writeMessage(2, endpoints_.get(i));
      }
      if (policy_ != null) {
        output.writeMessage(4, getPolicy());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getClusterNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, clusterName_);
      }
      for (int i = 0; i < endpoints_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, endpoints_.get(i));
      }
      if (policy_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getPolicy());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof envoy.api.v2.Eds.ClusterLoadAssignment)) {
        return super.equals(obj);
      }
      envoy.api.v2.Eds.ClusterLoadAssignment other = (envoy.api.v2.Eds.ClusterLoadAssignment) obj;

      boolean result = true;
      result = result && getClusterName()
          .equals(other.getClusterName());
      result = result && getEndpointsList()
          .equals(other.getEndpointsList());
      result = result && (hasPolicy() == other.hasPolicy());
      if (hasPolicy()) {
        result = result && getPolicy()
            .equals(other.getPolicy());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CLUSTER_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getClusterName().hashCode();
      if (getEndpointsCount() > 0) {
        hash = (37 * hash) + ENDPOINTS_FIELD_NUMBER;
        hash = (53 * hash) + getEndpointsList().hashCode();
      }
      if (hasPolicy()) {
        hash = (37 * hash) + POLICY_FIELD_NUMBER;
        hash = (53 * hash) + getPolicy().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static envoy.api.v2.Eds.ClusterLoadAssignment parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static envoy.api.v2.Eds.ClusterLoadAssignment parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static envoy.api.v2.Eds.ClusterLoadAssignment parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static envoy.api.v2.Eds.ClusterLoadAssignment parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static envoy.api.v2.Eds.ClusterLoadAssignment parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static envoy.api.v2.Eds.ClusterLoadAssignment parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static envoy.api.v2.Eds.ClusterLoadAssignment parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static envoy.api.v2.Eds.ClusterLoadAssignment parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static envoy.api.v2.Eds.ClusterLoadAssignment parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static envoy.api.v2.Eds.ClusterLoadAssignment parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static envoy.api.v2.Eds.ClusterLoadAssignment parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static envoy.api.v2.Eds.ClusterLoadAssignment parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(envoy.api.v2.Eds.ClusterLoadAssignment prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Each route from RDS will map to a single cluster or traffic split across
     * clusters using weights expressed in the RDS WeightedCluster.
     * With EDS, each cluster is treated independently from a LB perspective, with
     * LB taking place between the Localities within a cluster and at a finer
     * granularity between the hosts within a locality. For a given cluster, the
     * effective weight of a host is its load_balancing_weight multiplied by the
     * load_balancing_weight of its Locality.
     * </pre>
     *
     * Protobuf type {@code envoy.api.v2.ClusterLoadAssignment}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:envoy.api.v2.ClusterLoadAssignment)
        envoy.api.v2.Eds.ClusterLoadAssignmentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return envoy.api.v2.Eds.internal_static_envoy_api_v2_ClusterLoadAssignment_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return envoy.api.v2.Eds.internal_static_envoy_api_v2_ClusterLoadAssignment_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                envoy.api.v2.Eds.ClusterLoadAssignment.class, envoy.api.v2.Eds.ClusterLoadAssignment.Builder.class);
      }

      // Construct using envoy.api.v2.Eds.ClusterLoadAssignment.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getEndpointsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        clusterName_ = "";

        if (endpointsBuilder_ == null) {
          endpoints_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          endpointsBuilder_.clear();
        }
        if (policyBuilder_ == null) {
          policy_ = null;
        } else {
          policy_ = null;
          policyBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return envoy.api.v2.Eds.internal_static_envoy_api_v2_ClusterLoadAssignment_descriptor;
      }

      public envoy.api.v2.Eds.ClusterLoadAssignment getDefaultInstanceForType() {
        return envoy.api.v2.Eds.ClusterLoadAssignment.getDefaultInstance();
      }

      public envoy.api.v2.Eds.ClusterLoadAssignment build() {
        envoy.api.v2.Eds.ClusterLoadAssignment result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public envoy.api.v2.Eds.ClusterLoadAssignment buildPartial() {
        envoy.api.v2.Eds.ClusterLoadAssignment result = new envoy.api.v2.Eds.ClusterLoadAssignment(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.clusterName_ = clusterName_;
        if (endpointsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            endpoints_ = java.util.Collections.unmodifiableList(endpoints_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.endpoints_ = endpoints_;
        } else {
          result.endpoints_ = endpointsBuilder_.build();
        }
        if (policyBuilder_ == null) {
          result.policy_ = policy_;
        } else {
          result.policy_ = policyBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof envoy.api.v2.Eds.ClusterLoadAssignment) {
          return mergeFrom((envoy.api.v2.Eds.ClusterLoadAssignment)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(envoy.api.v2.Eds.ClusterLoadAssignment other) {
        if (other == envoy.api.v2.Eds.ClusterLoadAssignment.getDefaultInstance()) return this;
        if (!other.getClusterName().isEmpty()) {
          clusterName_ = other.clusterName_;
          onChanged();
        }
        if (endpointsBuilder_ == null) {
          if (!other.endpoints_.isEmpty()) {
            if (endpoints_.isEmpty()) {
              endpoints_ = other.endpoints_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureEndpointsIsMutable();
              endpoints_.addAll(other.endpoints_);
            }
            onChanged();
          }
        } else {
          if (!other.endpoints_.isEmpty()) {
            if (endpointsBuilder_.isEmpty()) {
              endpointsBuilder_.dispose();
              endpointsBuilder_ = null;
              endpoints_ = other.endpoints_;
              bitField0_ = (bitField0_ & ~0x00000002);
              endpointsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEndpointsFieldBuilder() : null;
            } else {
              endpointsBuilder_.addAllMessages(other.endpoints_);
            }
          }
        }
        if (other.hasPolicy()) {
          mergePolicy(other.getPolicy());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        envoy.api.v2.Eds.ClusterLoadAssignment parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (envoy.api.v2.Eds.ClusterLoadAssignment) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object clusterName_ = "";
      /**
       * <pre>
       * Name of the cluster. This will be the :ref:`service_name
       * &lt;envoy_api_field_Cluster.EdsClusterConfig.service_name&gt;` value if specified
       * in the cluster :ref:`EdsClusterConfig
       * &lt;envoy_api_msg_Cluster.EdsClusterConfig&gt;`.
       * </pre>
       *
       * <code>string cluster_name = 1 [(.validate.rules) = { ... }</code>
       */
      public java.lang.String getClusterName() {
        java.lang.Object ref = clusterName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          clusterName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Name of the cluster. This will be the :ref:`service_name
       * &lt;envoy_api_field_Cluster.EdsClusterConfig.service_name&gt;` value if specified
       * in the cluster :ref:`EdsClusterConfig
       * &lt;envoy_api_msg_Cluster.EdsClusterConfig&gt;`.
       * </pre>
       *
       * <code>string cluster_name = 1 [(.validate.rules) = { ... }</code>
       */
      public com.google.protobuf.ByteString
          getClusterNameBytes() {
        java.lang.Object ref = clusterName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          clusterName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Name of the cluster. This will be the :ref:`service_name
       * &lt;envoy_api_field_Cluster.EdsClusterConfig.service_name&gt;` value if specified
       * in the cluster :ref:`EdsClusterConfig
       * &lt;envoy_api_msg_Cluster.EdsClusterConfig&gt;`.
       * </pre>
       *
       * <code>string cluster_name = 1 [(.validate.rules) = { ... }</code>
       */
      public Builder setClusterName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        clusterName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the cluster. This will be the :ref:`service_name
       * &lt;envoy_api_field_Cluster.EdsClusterConfig.service_name&gt;` value if specified
       * in the cluster :ref:`EdsClusterConfig
       * &lt;envoy_api_msg_Cluster.EdsClusterConfig&gt;`.
       * </pre>
       *
       * <code>string cluster_name = 1 [(.validate.rules) = { ... }</code>
       */
      public Builder clearClusterName() {
        
        clusterName_ = getDefaultInstance().getClusterName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the cluster. This will be the :ref:`service_name
       * &lt;envoy_api_field_Cluster.EdsClusterConfig.service_name&gt;` value if specified
       * in the cluster :ref:`EdsClusterConfig
       * &lt;envoy_api_msg_Cluster.EdsClusterConfig&gt;`.
       * </pre>
       *
       * <code>string cluster_name = 1 [(.validate.rules) = { ... }</code>
       */
      public Builder setClusterNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        clusterName_ = value;
        onChanged();
        return this;
      }

      private java.util.List<envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpoints> endpoints_ =
        java.util.Collections.emptyList();
      private void ensureEndpointsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          endpoints_ = new java.util.ArrayList<envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpoints>(endpoints_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpoints, envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpoints.Builder, envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpointsOrBuilder> endpointsBuilder_;

      /**
       * <pre>
       * List of endpoints to load balance to.
       * </pre>
       *
       * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
       */
      public java.util.List<envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpoints> getEndpointsList() {
        if (endpointsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(endpoints_);
        } else {
          return endpointsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of endpoints to load balance to.
       * </pre>
       *
       * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
       */
      public int getEndpointsCount() {
        if (endpointsBuilder_ == null) {
          return endpoints_.size();
        } else {
          return endpointsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of endpoints to load balance to.
       * </pre>
       *
       * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
       */
      public envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpoints getEndpoints(int index) {
        if (endpointsBuilder_ == null) {
          return endpoints_.get(index);
        } else {
          return endpointsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of endpoints to load balance to.
       * </pre>
       *
       * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
       */
      public Builder setEndpoints(
          int index, envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpoints value) {
        if (endpointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEndpointsIsMutable();
          endpoints_.set(index, value);
          onChanged();
        } else {
          endpointsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of endpoints to load balance to.
       * </pre>
       *
       * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
       */
      public Builder setEndpoints(
          int index, envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpoints.Builder builderForValue) {
        if (endpointsBuilder_ == null) {
          ensureEndpointsIsMutable();
          endpoints_.set(index, builderForValue.build());
          onChanged();
        } else {
          endpointsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of endpoints to load balance to.
       * </pre>
       *
       * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
       */
      public Builder addEndpoints(envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpoints value) {
        if (endpointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEndpointsIsMutable();
          endpoints_.add(value);
          onChanged();
        } else {
          endpointsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of endpoints to load balance to.
       * </pre>
       *
       * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
       */
      public Builder addEndpoints(
          int index, envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpoints value) {
        if (endpointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEndpointsIsMutable();
          endpoints_.add(index, value);
          onChanged();
        } else {
          endpointsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of endpoints to load balance to.
       * </pre>
       *
       * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
       */
      public Builder addEndpoints(
          envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpoints.Builder builderForValue) {
        if (endpointsBuilder_ == null) {
          ensureEndpointsIsMutable();
          endpoints_.add(builderForValue.build());
          onChanged();
        } else {
          endpointsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of endpoints to load balance to.
       * </pre>
       *
       * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
       */
      public Builder addEndpoints(
          int index, envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpoints.Builder builderForValue) {
        if (endpointsBuilder_ == null) {
          ensureEndpointsIsMutable();
          endpoints_.add(index, builderForValue.build());
          onChanged();
        } else {
          endpointsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of endpoints to load balance to.
       * </pre>
       *
       * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
       */
      public Builder addAllEndpoints(
          java.lang.Iterable<? extends envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpoints> values) {
        if (endpointsBuilder_ == null) {
          ensureEndpointsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, endpoints_);
          onChanged();
        } else {
          endpointsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of endpoints to load balance to.
       * </pre>
       *
       * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
       */
      public Builder clearEndpoints() {
        if (endpointsBuilder_ == null) {
          endpoints_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          endpointsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of endpoints to load balance to.
       * </pre>
       *
       * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
       */
      public Builder removeEndpoints(int index) {
        if (endpointsBuilder_ == null) {
          ensureEndpointsIsMutable();
          endpoints_.remove(index);
          onChanged();
        } else {
          endpointsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of endpoints to load balance to.
       * </pre>
       *
       * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
       */
      public envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpoints.Builder getEndpointsBuilder(
          int index) {
        return getEndpointsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of endpoints to load balance to.
       * </pre>
       *
       * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
       */
      public envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpointsOrBuilder getEndpointsOrBuilder(
          int index) {
        if (endpointsBuilder_ == null) {
          return endpoints_.get(index);  } else {
          return endpointsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of endpoints to load balance to.
       * </pre>
       *
       * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
       */
      public java.util.List<? extends envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpointsOrBuilder> 
           getEndpointsOrBuilderList() {
        if (endpointsBuilder_ != null) {
          return endpointsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(endpoints_);
        }
      }
      /**
       * <pre>
       * List of endpoints to load balance to.
       * </pre>
       *
       * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
       */
      public envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpoints.Builder addEndpointsBuilder() {
        return getEndpointsFieldBuilder().addBuilder(
            envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpoints.getDefaultInstance());
      }
      /**
       * <pre>
       * List of endpoints to load balance to.
       * </pre>
       *
       * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
       */
      public envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpoints.Builder addEndpointsBuilder(
          int index) {
        return getEndpointsFieldBuilder().addBuilder(
            index, envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpoints.getDefaultInstance());
      }
      /**
       * <pre>
       * List of endpoints to load balance to.
       * </pre>
       *
       * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
       */
      public java.util.List<envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpoints.Builder> 
           getEndpointsBuilderList() {
        return getEndpointsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpoints, envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpoints.Builder, envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpointsOrBuilder> 
          getEndpointsFieldBuilder() {
        if (endpointsBuilder_ == null) {
          endpointsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpoints, envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpoints.Builder, envoy.api.v2.endpoint.EndpointOuterClass.LocalityLbEndpointsOrBuilder>(
                  endpoints_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          endpoints_ = null;
        }
        return endpointsBuilder_;
      }

      private envoy.api.v2.Eds.ClusterLoadAssignment.Policy policy_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          envoy.api.v2.Eds.ClusterLoadAssignment.Policy, envoy.api.v2.Eds.ClusterLoadAssignment.Policy.Builder, envoy.api.v2.Eds.ClusterLoadAssignment.PolicyOrBuilder> policyBuilder_;
      /**
       * <pre>
       * Load balancing policy settings.
       * </pre>
       *
       * <code>.envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;</code>
       */
      public boolean hasPolicy() {
        return policyBuilder_ != null || policy_ != null;
      }
      /**
       * <pre>
       * Load balancing policy settings.
       * </pre>
       *
       * <code>.envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;</code>
       */
      public envoy.api.v2.Eds.ClusterLoadAssignment.Policy getPolicy() {
        if (policyBuilder_ == null) {
          return policy_ == null ? envoy.api.v2.Eds.ClusterLoadAssignment.Policy.getDefaultInstance() : policy_;
        } else {
          return policyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Load balancing policy settings.
       * </pre>
       *
       * <code>.envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;</code>
       */
      public Builder setPolicy(envoy.api.v2.Eds.ClusterLoadAssignment.Policy value) {
        if (policyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          policy_ = value;
          onChanged();
        } else {
          policyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Load balancing policy settings.
       * </pre>
       *
       * <code>.envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;</code>
       */
      public Builder setPolicy(
          envoy.api.v2.Eds.ClusterLoadAssignment.Policy.Builder builderForValue) {
        if (policyBuilder_ == null) {
          policy_ = builderForValue.build();
          onChanged();
        } else {
          policyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Load balancing policy settings.
       * </pre>
       *
       * <code>.envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;</code>
       */
      public Builder mergePolicy(envoy.api.v2.Eds.ClusterLoadAssignment.Policy value) {
        if (policyBuilder_ == null) {
          if (policy_ != null) {
            policy_ =
              envoy.api.v2.Eds.ClusterLoadAssignment.Policy.newBuilder(policy_).mergeFrom(value).buildPartial();
          } else {
            policy_ = value;
          }
          onChanged();
        } else {
          policyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Load balancing policy settings.
       * </pre>
       *
       * <code>.envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;</code>
       */
      public Builder clearPolicy() {
        if (policyBuilder_ == null) {
          policy_ = null;
          onChanged();
        } else {
          policy_ = null;
          policyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Load balancing policy settings.
       * </pre>
       *
       * <code>.envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;</code>
       */
      public envoy.api.v2.Eds.ClusterLoadAssignment.Policy.Builder getPolicyBuilder() {
        
        onChanged();
        return getPolicyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Load balancing policy settings.
       * </pre>
       *
       * <code>.envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;</code>
       */
      public envoy.api.v2.Eds.ClusterLoadAssignment.PolicyOrBuilder getPolicyOrBuilder() {
        if (policyBuilder_ != null) {
          return policyBuilder_.getMessageOrBuilder();
        } else {
          return policy_ == null ?
              envoy.api.v2.Eds.ClusterLoadAssignment.Policy.getDefaultInstance() : policy_;
        }
      }
      /**
       * <pre>
       * Load balancing policy settings.
       * </pre>
       *
       * <code>.envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          envoy.api.v2.Eds.ClusterLoadAssignment.Policy, envoy.api.v2.Eds.ClusterLoadAssignment.Policy.Builder, envoy.api.v2.Eds.ClusterLoadAssignment.PolicyOrBuilder> 
          getPolicyFieldBuilder() {
        if (policyBuilder_ == null) {
          policyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              envoy.api.v2.Eds.ClusterLoadAssignment.Policy, envoy.api.v2.Eds.ClusterLoadAssignment.Policy.Builder, envoy.api.v2.Eds.ClusterLoadAssignment.PolicyOrBuilder>(
                  getPolicy(),
                  getParentForChildren(),
                  isClean());
          policy_ = null;
        }
        return policyBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:envoy.api.v2.ClusterLoadAssignment)
    }

    // @@protoc_insertion_point(class_scope:envoy.api.v2.ClusterLoadAssignment)
    private static final envoy.api.v2.Eds.ClusterLoadAssignment DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new envoy.api.v2.Eds.ClusterLoadAssignment();
    }

    public static envoy.api.v2.Eds.ClusterLoadAssignment getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ClusterLoadAssignment>
        PARSER = new com.google.protobuf.AbstractParser<ClusterLoadAssignment>() {
      public ClusterLoadAssignment parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClusterLoadAssignment(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ClusterLoadAssignment> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ClusterLoadAssignment> getParserForType() {
      return PARSER;
    }

    public envoy.api.v2.Eds.ClusterLoadAssignment getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  /**
   * Protobuf service {@code envoy.api.v2.EndpointDiscoveryService}
   */
  public static abstract class EndpointDiscoveryService
      implements com.google.protobuf.Service {
    protected EndpointDiscoveryService() {}

    public interface Interface {
      /**
       * <pre>
       * The resource_names field in DiscoveryRequest specifies a list of clusters
       * to subscribe to updates for.
       * </pre>
       *
       * <code>rpc StreamEndpoints(stream .envoy.api.v2.DiscoveryRequest) returns (stream .envoy.api.v2.DiscoveryResponse);</code>
       */
      public abstract void streamEndpoints(
          com.google.protobuf.RpcController controller,
          envoy.api.v2.Discovery.DiscoveryRequest request,
          com.google.protobuf.RpcCallback<envoy.api.v2.Discovery.DiscoveryResponse> done);

      /**
       * <code>rpc FetchEndpoints(.envoy.api.v2.DiscoveryRequest) returns (.envoy.api.v2.DiscoveryResponse) { ... }</code>
       */
      public abstract void fetchEndpoints(
          com.google.protobuf.RpcController controller,
          envoy.api.v2.Discovery.DiscoveryRequest request,
          com.google.protobuf.RpcCallback<envoy.api.v2.Discovery.DiscoveryResponse> done);

    }

    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new EndpointDiscoveryService() {
        @java.lang.Override
        public  void streamEndpoints(
            com.google.protobuf.RpcController controller,
            envoy.api.v2.Discovery.DiscoveryRequest request,
            com.google.protobuf.RpcCallback<envoy.api.v2.Discovery.DiscoveryResponse> done) {
          impl.streamEndpoints(controller, request, done);
        }

        @java.lang.Override
        public  void fetchEndpoints(
            com.google.protobuf.RpcController controller,
            envoy.api.v2.Discovery.DiscoveryRequest request,
            com.google.protobuf.RpcCallback<envoy.api.v2.Discovery.DiscoveryResponse> done) {
          impl.fetchEndpoints(controller, request, done);
        }

      };
    }

    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }

        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.streamEndpoints(controller, (envoy.api.v2.Discovery.DiscoveryRequest)request);
            case 1:
              return impl.fetchEndpoints(controller, (envoy.api.v2.Discovery.DiscoveryRequest)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return envoy.api.v2.Discovery.DiscoveryRequest.getDefaultInstance();
            case 1:
              return envoy.api.v2.Discovery.DiscoveryRequest.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return envoy.api.v2.Discovery.DiscoveryResponse.getDefaultInstance();
            case 1:
              return envoy.api.v2.Discovery.DiscoveryResponse.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

      };
    }

    /**
     * <pre>
     * The resource_names field in DiscoveryRequest specifies a list of clusters
     * to subscribe to updates for.
     * </pre>
     *
     * <code>rpc StreamEndpoints(stream .envoy.api.v2.DiscoveryRequest) returns (stream .envoy.api.v2.DiscoveryResponse);</code>
     */
    public abstract void streamEndpoints(
        com.google.protobuf.RpcController controller,
        envoy.api.v2.Discovery.DiscoveryRequest request,
        com.google.protobuf.RpcCallback<envoy.api.v2.Discovery.DiscoveryResponse> done);

    /**
     * <code>rpc FetchEndpoints(.envoy.api.v2.DiscoveryRequest) returns (.envoy.api.v2.DiscoveryResponse) { ... }</code>
     */
    public abstract void fetchEndpoints(
        com.google.protobuf.RpcController controller,
        envoy.api.v2.Discovery.DiscoveryRequest request,
        com.google.protobuf.RpcCallback<envoy.api.v2.Discovery.DiscoveryResponse> done);

    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return envoy.api.v2.Eds.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }

    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.streamEndpoints(controller, (envoy.api.v2.Discovery.DiscoveryRequest)request,
            com.google.protobuf.RpcUtil.<envoy.api.v2.Discovery.DiscoveryResponse>specializeCallback(
              done));
          return;
        case 1:
          this.fetchEndpoints(controller, (envoy.api.v2.Discovery.DiscoveryRequest)request,
            com.google.protobuf.RpcUtil.<envoy.api.v2.Discovery.DiscoveryResponse>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return envoy.api.v2.Discovery.DiscoveryRequest.getDefaultInstance();
        case 1:
          return envoy.api.v2.Discovery.DiscoveryRequest.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return envoy.api.v2.Discovery.DiscoveryResponse.getDefaultInstance();
        case 1:
          return envoy.api.v2.Discovery.DiscoveryResponse.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }

    public static final class Stub extends envoy.api.v2.Eds.EndpointDiscoveryService implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.RpcChannel channel;

      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }

      public  void streamEndpoints(
          com.google.protobuf.RpcController controller,
          envoy.api.v2.Discovery.DiscoveryRequest request,
          com.google.protobuf.RpcCallback<envoy.api.v2.Discovery.DiscoveryResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          envoy.api.v2.Discovery.DiscoveryResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            envoy.api.v2.Discovery.DiscoveryResponse.class,
            envoy.api.v2.Discovery.DiscoveryResponse.getDefaultInstance()));
      }

      public  void fetchEndpoints(
          com.google.protobuf.RpcController controller,
          envoy.api.v2.Discovery.DiscoveryRequest request,
          com.google.protobuf.RpcCallback<envoy.api.v2.Discovery.DiscoveryResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          envoy.api.v2.Discovery.DiscoveryResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            envoy.api.v2.Discovery.DiscoveryResponse.class,
            envoy.api.v2.Discovery.DiscoveryResponse.getDefaultInstance()));
      }
    }

    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }

    public interface BlockingInterface {
      public envoy.api.v2.Discovery.DiscoveryResponse streamEndpoints(
          com.google.protobuf.RpcController controller,
          envoy.api.v2.Discovery.DiscoveryRequest request)
          throws com.google.protobuf.ServiceException;

      public envoy.api.v2.Discovery.DiscoveryResponse fetchEndpoints(
          com.google.protobuf.RpcController controller,
          envoy.api.v2.Discovery.DiscoveryRequest request)
          throws com.google.protobuf.ServiceException;
    }

    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.BlockingRpcChannel channel;

      public envoy.api.v2.Discovery.DiscoveryResponse streamEndpoints(
          com.google.protobuf.RpcController controller,
          envoy.api.v2.Discovery.DiscoveryRequest request)
          throws com.google.protobuf.ServiceException {
        return (envoy.api.v2.Discovery.DiscoveryResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          envoy.api.v2.Discovery.DiscoveryResponse.getDefaultInstance());
      }


      public envoy.api.v2.Discovery.DiscoveryResponse fetchEndpoints(
          com.google.protobuf.RpcController controller,
          envoy.api.v2.Discovery.DiscoveryRequest request)
          throws com.google.protobuf.ServiceException {
        return (envoy.api.v2.Discovery.DiscoveryResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          envoy.api.v2.Discovery.DiscoveryResponse.getDefaultInstance());
      }

    }

    // @@protoc_insertion_point(class_scope:envoy.api.v2.EndpointDiscoveryService)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_api_v2_ClusterLoadAssignment_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_api_v2_ClusterLoadAssignment_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_api_v2_ClusterLoadAssignment_Policy_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_api_v2_ClusterLoadAssignment_Policy_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_api_v2_ClusterLoadAssignment_Policy_DropOverload_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_api_v2_ClusterLoadAssignment_Policy_DropOverload_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026envoy/api/v2/eds.proto\022\014envoy.api.v2\032\034" +
      "envoy/api/v2/discovery.proto\032$envoy/api/" +
      "v2/endpoint/endpoint.proto\032\030envoy/type/p" +
      "ercent.proto\032\034google/api/annotations.pro" +
      "to\032\027validate/validate.proto\032\036google/prot" +
      "obuf/wrappers.proto\"\304\003\n\025ClusterLoadAssig" +
      "nment\022\037\n\014cluster_name\030\001 \001(\tB\t\272\351\300\003\004r\002 \001\022=" +
      "\n\tendpoints\030\002 \003(\0132*.envoy.api.v2.endpoin" +
      "t.LocalityLbEndpoints\022:\n\006policy\030\004 \001(\0132*." +
      "envoy.api.v2.ClusterLoadAssignment.Polic" +
      "y\032\216\002\n\006Policy\022O\n\016drop_overloads\030\002 \003(\01327.e" +
      "nvoy.api.v2.ClusterLoadAssignment.Policy" +
      ".DropOverload\022H\n\027overprovisioning_factor" +
      "\030\003 \001(\0132\034.google.protobuf.UInt32ValueB\t\272\351" +
      "\300\003\004*\002 \000\032c\n\014DropOverload\022\033\n\010category\030\001 \001(" +
      "\tB\t\272\351\300\003\004r\002 \001\0226\n\017drop_percentage\030\002 \001(\0132\035." +
      "envoy.type.FractionalPercentJ\004\010\001\020\0022\353\001\n\030E" +
      "ndpointDiscoveryService\022X\n\017StreamEndpoin" +
      "ts\022\036.envoy.api.v2.DiscoveryRequest\032\037.env" +
      "oy.api.v2.DiscoveryResponse\"\000(\0010\001\022u\n\016Fet" +
      "chEndpoints\022\036.envoy.api.v2.DiscoveryRequ" +
      "est\032\037.envoy.api.v2.DiscoveryResponse\"\"\202\323" +
      "\344\223\002\034\"\027/v2/discovery:endpoints:\001*B\003\210\001\001b\006p" +
      "roto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          envoy.api.v2.Discovery.getDescriptor(),
          envoy.api.v2.endpoint.EndpointOuterClass.getDescriptor(),
          envoy.type.PercentOuterClass.getDescriptor(),
          com.google.api.AnnotationsProto.getDescriptor(),
          validate.Validate.getDescriptor(),
          com.google.protobuf.WrappersProto.getDescriptor(),
        }, assigner);
    internal_static_envoy_api_v2_ClusterLoadAssignment_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_envoy_api_v2_ClusterLoadAssignment_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_api_v2_ClusterLoadAssignment_descriptor,
        new java.lang.String[] { "ClusterName", "Endpoints", "Policy", });
    internal_static_envoy_api_v2_ClusterLoadAssignment_Policy_descriptor =
      internal_static_envoy_api_v2_ClusterLoadAssignment_descriptor.getNestedTypes().get(0);
    internal_static_envoy_api_v2_ClusterLoadAssignment_Policy_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_api_v2_ClusterLoadAssignment_Policy_descriptor,
        new java.lang.String[] { "DropOverloads", "OverprovisioningFactor", });
    internal_static_envoy_api_v2_ClusterLoadAssignment_Policy_DropOverload_descriptor =
      internal_static_envoy_api_v2_ClusterLoadAssignment_Policy_descriptor.getNestedTypes().get(0);
    internal_static_envoy_api_v2_ClusterLoadAssignment_Policy_DropOverload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_api_v2_ClusterLoadAssignment_Policy_DropOverload_descriptor,
        new java.lang.String[] { "Category", "DropPercentage", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.api.AnnotationsProto.http);
    registry.add(validate.Validate.rules);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    envoy.api.v2.Discovery.getDescriptor();
    envoy.api.v2.endpoint.EndpointOuterClass.getDescriptor();
    envoy.type.PercentOuterClass.getDescriptor();
    com.google.api.AnnotationsProto.getDescriptor();
    validate.Validate.getDescriptor();
    com.google.protobuf.WrappersProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
