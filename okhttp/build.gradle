description = "gRPC: OkHttp"
dependencies {
    compile project(':grpc-core'),
            libraries.okhttp,
            libraries.okio

    // Tests depend on base class defined by core module.
    testCompile project(':grpc-core').sourceSets.test.output,
                project(':grpc-testing'),
                project(':grpc-netty')
    signature "org.codehaus.mojo.signature:java16:+@signature"
}

project.sourceSets {
    main {
        java {
            srcDir "${projectDir}/third_party/okhttp/java"
        }
    }
}


class LoadTest extends Test{
    private numberOfClients = 10000

    public LoadTest(){
        super()
        setTestNameIncludePatterns(['io.grpc.okhttp.OkHttpTransportTest.newStream_duringShutdown'])
    }
    public FileTree getCandidateClassFiles() {
        FileTree candidateTimes = super.getCandidateClassFiles()
        for(int client  = 1; client<numberOfClients;client++){
            candidateTimes = candidateTimes + super.getCandidateClassFiles()
        }
        return candidateTimes
    }

}

task loadTest(type:LoadTest){
}

test.dependsOn loadTest

checkstyleMain.exclude '**/io/grpc/okhttp/internal/**'

javadoc.exclude 'io/grpc/okhttp/internal/**'
javadoc.options.links 'http://square.github.io/okhttp/2.x/okhttp/'
