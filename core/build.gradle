plugins {
    id "java-library"
    id "maven-publish"

    id "me.champeau.gradle.japicmp"
    id "me.champeau.gradle.jmh"
    id "ru.vyarus.animalsniffer"
}

description = 'gRPC: Core'

evaluationDependsOn(project(':grpc-context').path)
evaluationDependsOn(project(':grpc-api').path)

dependencies {
    api project(':grpc-api')
    implementation libraries.android_annotations,
            libraries.animalsniffer_annotations,
            libraries.errorprone,
            libraries.gson
    implementation (libraries.guava) {
        // prefer our own version from grpc-api instead of Guava's dependency
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
        // prefer our own version from libraries instead of Guava's dependency
        exclude group: 'com.google.errorprone', module: 'error_prone_annotations'
        // prefer our own version from libraries instead of Guava's dependency
        exclude group: 'org.codehaus.mojo', module: 'animal-sniffer-annotations'
    }
    implementation (libraries.perfmark) {
        // prefer our own versions from libraries instead of PerfMark's dependency
        exclude group: 'com.google.errorprone', module: 'error_prone_annotations'
    }
    testImplementation project(':grpc-api').sourceSets.test.output,
            project(':grpc-context').sourceSets.test.output,
            project(':grpc-grpclb'),
            project(':grpc-testing'),
            libraries.guava_testlib
    testRuntimeOnly project(':grpc-census')

    jmh project(':grpc-testing')

    signature "org.codehaus.mojo.signature:java17:1.0@signature"
    signature "net.sf.androidscents.signature:android-api-level-14:4.0_r4@signature"
}

javadoc {
    exclude 'io/grpc/internal/**'
    // Disabled until kinda stable.
    exclude 'io/grpc/perfmark/**'
}

animalsniffer {
    // Don't check sourceSets.jmh
    sourceSets = [
        sourceSets.main,
        sourceSets.test
    ]
}

import net.ltgt.gradle.errorprone.CheckSeverity

plugins.withId("java") {
    compileJmhJava {
        // This project targets Java 7 (no method references)
        options.errorprone.check("UnnecessaryAnonymousClass", CheckSeverity.OFF)
    }
}
