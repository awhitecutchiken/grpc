java_library(
    name = "netty",
    srcs = glob([
        "src/main/java/**/*.java",
    ]),
    resources = glob([
        "src/main/resources/**",
    ]),
    visibility = ["//visibility:public"],
    deps = [
        "//api",
        "//core:internal",
        "@maven//:com_google_code_findbugs_jsr305",
        "@maven//:com_google_errorprone_error_prone_annotations",
        "@maven//:com_google_guava_guava",
        "@maven//:com_google_j2objc_j2objc_annotations",
        "@maven//:io_netty_netty_buffer",
        "@maven//:io_netty_netty_codec",
        "@maven//:io_netty_netty_codec_http",
        "@maven//:io_netty_netty_codec_http2",
        "@maven//:io_netty_netty_codec_socks",
        "@maven//:io_netty_netty_common",
        "@maven//:io_netty_netty_handler",
        "@maven//:io_netty_netty_handler_proxy",
        "@maven//:io_netty_netty_resolver",
        "@maven//:io_netty_netty_transport",
        "@maven//:io_perfmark_perfmark_api",
    ],
)

# Mirrors the dependencies included in the artifact on Maven Central for usage
# with maven_install's override_targets. Purposefully does not export any
# symbols, as it should only be used as a dep for pre-compiled binaries on
# Maven Central. Not actually shaded; libraries should not be referencing
# unstable APIs so there should not be any references to the shaded package.
java_library(
    name = "shaded_maven",
    visibility = ["//visibility:public"],
    runtime_deps = ["//netty/shaded"],
)
