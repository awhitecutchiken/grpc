// Copyright 2018 The gRPC Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

package google.pubsub.v1;

option java_multiple_files = true;
option java_outer_classname = "PubsubProto";
option java_package = "com.google.pubsub.v1";

// the following snippet is from https://github.com/googleapis/googleapis/blob/master/google/pubsub/v1/pubsub.proto
// by extracting only the bits relevant to the ListTopics API.

// The service that an application uses to manipulate topics, and to send
// messages to a topic.
service Publisher {
  // Lists matching topics.
  rpc ListTopics(ListTopicsRequest) returns (ListTopicsResponse) {}
}

message MessageStoragePolicy {
  // The list of GCP regions where messages that are published to the topic may
  // be persisted in storage. Messages published by publishers running in
  // non-allowed GCP regions (or running outside of GCP altogether) will be
  // routed for storage in one of the allowed regions. An empty list indicates a
  // misconfiguration at the project or organization level, which will result in
  // all Publish operations failing.
  repeated string allowed_persistence_regions = 1;
}

// A topic resource.
message Topic {
  // The name of the topic. It must have the format
  // `"projects/{project}/topics/{topic}"`. `{topic}` must start with a letter,
  // and contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`),
  // underscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent
  // signs (`%`). It must be between 3 and 255 characters in length, and it
  // must not start with `"goog"`.
  string name = 1;

  // See <a href="/pubsub/docs/labels"> Creating and managing labels</a>.
  map<string, string> labels = 2;

  // Policy constraining how messages published to the topic may be stored. It
  // is determined when the topic is created based on the policy configured at
  // the project level. It must not be set by the caller in the request to
  // CreateTopic or to UpdateTopic. This field will be populated in the
  // responses for GetTopic, CreateTopic, and UpdateTopic: if not present in the
  // response, then no constraints are in effect.
  MessageStoragePolicy message_storage_policy = 3;
}

// Request for the `ListTopics` method.
message ListTopicsRequest {
  // The name of the project in which to list topics.
  // Format is `projects/{project-id}`.
  string project = 1;

  // Maximum number of topics to return.
  int32 page_size = 2;

  // The value returned by the last `ListTopicsResponse`; indicates that this is
  // a continuation of a prior `ListTopics` call, and that the system should
  // return the next page of data.
  string page_token = 3;
}

// Response for the `ListTopics` method.
message ListTopicsResponse {
  // The resulting topics.
  repeated Topic topics = 1;

  // If not empty, indicates that there may be more topics that match the
  // request; this value should be passed in a new `ListTopicsRequest`.
  string next_page_token = 2;
}
